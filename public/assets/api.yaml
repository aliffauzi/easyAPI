openapi: 3.0.0
info:
  title: 'Swagger Opensid'
  description: "This is a sample Opensid server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/)."
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8080'
    description: 'SwaggerHUB API Mocking'
paths:
  /agendas:
    get:
      tags:
        - Agenda
      summary: 'Find list Agenda'
      description: 'Returns list of Agenda'
      operationId: getAgenda
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Agenda' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Agenda' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Agenda' } }
                type: object
        '404':
          description: 'Agenda not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Agenda
      summary: 'Add a new Agenda to the store'
      operationId: addAgenda
      requestBody:
        $ref: '#/components/requestBodies/Agenda'
      responses:
        '201':
          description: 'Created Agenda'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
            application/xml:
              schema:
                $ref: '#/components/schemas/Agenda'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/agendas/{id}':
    get:
      tags:
        - Agenda
      summary: 'Find Agenda by ID'
      description: 'Returns a single Agenda'
      operationId: getAgendaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Agenda to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
            application/xml:
              schema:
                $ref: '#/components/schemas/Agenda'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Agenda not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Agenda
      summary: 'Update an existing Agenda'
      operationId: updateAgenda
      parameters:
        -
          name: id
          in: path
          description: 'Agenda id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Agenda'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Agenda not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Agenda
      summary: 'Deletes a Agenda'
      operationId: deleteAgenda
      parameters:
        -
          name: id
          in: path
          description: 'Agenda id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisIndikators:
    get:
      tags:
        - AnalisisIndikator
      summary: 'Find list AnalisisIndikator'
      description: 'Returns list of AnalisisIndikator'
      operationId: getAnalisisIndikator
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisIndikator' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisIndikator' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisIndikator' } }
                type: object
        '404':
          description: 'AnalisisIndikator not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisIndikator
      summary: 'Add a new AnalisisIndikator to the store'
      operationId: addAnalisisIndikator
      requestBody:
        $ref: '#/components/requestBodies/AnalisisIndikator'
      responses:
        '201':
          description: 'Created AnalisisIndikator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisIndikator'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisIndikators/{id}':
    get:
      tags:
        - AnalisisIndikator
      summary: 'Find AnalisisIndikator by ID'
      description: 'Returns a single AnalisisIndikator'
      operationId: getAnalisisIndikatorById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisIndikator to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisIndikator'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisIndikator not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisIndikator
      summary: 'Update an existing AnalisisIndikator'
      operationId: updateAnalisisIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisIndikator id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisIndikator'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisIndikator not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisIndikator
      summary: 'Deletes a AnalisisIndikator'
      operationId: deleteAnalisisIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisIndikator id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisKategoriIndikators:
    get:
      tags:
        - AnalisisKategoriIndikator
      summary: 'Find list AnalisisKategoriIndikator'
      description: 'Returns list of AnalisisKategoriIndikator'
      operationId: getAnalisisKategoriIndikator
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisKategoriIndikator' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisKategoriIndikator' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisKategoriIndikator' } }
                type: object
        '404':
          description: 'AnalisisKategoriIndikator not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisKategoriIndikator
      summary: 'Add a new AnalisisKategoriIndikator to the store'
      operationId: addAnalisisKategoriIndikator
      requestBody:
        $ref: '#/components/requestBodies/AnalisisKategoriIndikator'
      responses:
        '201':
          description: 'Created AnalisisKategoriIndikator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisKategoriIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisKategoriIndikator'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisKategoriIndikators/{id}':
    get:
      tags:
        - AnalisisKategoriIndikator
      summary: 'Find AnalisisKategoriIndikator by ID'
      description: 'Returns a single AnalisisKategoriIndikator'
      operationId: getAnalisisKategoriIndikatorById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisKategoriIndikator to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisKategoriIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisKategoriIndikator'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisKategoriIndikator not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisKategoriIndikator
      summary: 'Update an existing AnalisisKategoriIndikator'
      operationId: updateAnalisisKategoriIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisKategoriIndikator id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisKategoriIndikator'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisKategoriIndikator not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisKategoriIndikator
      summary: 'Deletes a AnalisisKategoriIndikator'
      operationId: deleteAnalisisKategoriIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisKategoriIndikator id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisKlasifikasis:
    get:
      tags:
        - AnalisisKlasifikasi
      summary: 'Find list AnalisisKlasifikasi'
      description: 'Returns list of AnalisisKlasifikasi'
      operationId: getAnalisisKlasifikasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisKlasifikasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisKlasifikasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisKlasifikasi' } }
                type: object
        '404':
          description: 'AnalisisKlasifikasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisKlasifikasi
      summary: 'Add a new AnalisisKlasifikasi to the store'
      operationId: addAnalisisKlasifikasi
      requestBody:
        $ref: '#/components/requestBodies/AnalisisKlasifikasi'
      responses:
        '201':
          description: 'Created AnalisisKlasifikasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisKlasifikasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisKlasifikasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisKlasifikasis/{id}':
    get:
      tags:
        - AnalisisKlasifikasi
      summary: 'Find AnalisisKlasifikasi by ID'
      description: 'Returns a single AnalisisKlasifikasi'
      operationId: getAnalisisKlasifikasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisKlasifikasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisKlasifikasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisKlasifikasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisKlasifikasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisKlasifikasi
      summary: 'Update an existing AnalisisKlasifikasi'
      operationId: updateAnalisisKlasifikasi
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisKlasifikasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisKlasifikasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisKlasifikasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisKlasifikasi
      summary: 'Deletes a AnalisisKlasifikasi'
      operationId: deleteAnalisisKlasifikasi
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisKlasifikasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisMasters:
    get:
      tags:
        - AnalisisMaster
      summary: 'Find list AnalisisMaster'
      description: 'Returns list of AnalisisMaster'
      operationId: getAnalisisMaster
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisMaster' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisMaster' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisMaster' } }
                type: object
        '404':
          description: 'AnalisisMaster not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisMaster
      summary: 'Add a new AnalisisMaster to the store'
      operationId: addAnalisisMaster
      requestBody:
        $ref: '#/components/requestBodies/AnalisisMaster'
      responses:
        '201':
          description: 'Created AnalisisMaster'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisMaster'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisMasters/{id}':
    get:
      tags:
        - AnalisisMaster
      summary: 'Find AnalisisMaster by ID'
      description: 'Returns a single AnalisisMaster'
      operationId: getAnalisisMasterById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisMaster to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisMaster'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisMaster not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisMaster
      summary: 'Update an existing AnalisisMaster'
      operationId: updateAnalisisMaster
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisMaster id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisMaster'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisMaster not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisMaster
      summary: 'Deletes a AnalisisMaster'
      operationId: deleteAnalisisMaster
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisMaster id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisParameters:
    get:
      tags:
        - AnalisisParameter
      summary: 'Find list AnalisisParameter'
      description: 'Returns list of AnalisisParameter'
      operationId: getAnalisisParameter
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisParameter' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisParameter' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisParameter' } }
                type: object
        '404':
          description: 'AnalisisParameter not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisParameter
      summary: 'Add a new AnalisisParameter to the store'
      operationId: addAnalisisParameter
      requestBody:
        $ref: '#/components/requestBodies/AnalisisParameter'
      responses:
        '201':
          description: 'Created AnalisisParameter'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisParameter'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisParameter'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisParameters/{id}':
    get:
      tags:
        - AnalisisParameter
      summary: 'Find AnalisisParameter by ID'
      description: 'Returns a single AnalisisParameter'
      operationId: getAnalisisParameterById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisParameter to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisParameter'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisParameter'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisParameter not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisParameter
      summary: 'Update an existing AnalisisParameter'
      operationId: updateAnalisisParameter
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisParameter id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisParameter'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisParameter not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisParameter
      summary: 'Deletes a AnalisisParameter'
      operationId: deleteAnalisisParameter
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisParameter id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisPartisipasis:
    get:
      tags:
        - AnalisisPartisipasi
      summary: 'Find list AnalisisPartisipasi'
      description: 'Returns list of AnalisisPartisipasi'
      operationId: getAnalisisPartisipasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisPartisipasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisPartisipasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisPartisipasi' } }
                type: object
        '404':
          description: 'AnalisisPartisipasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisPartisipasi
      summary: 'Add a new AnalisisPartisipasi to the store'
      operationId: addAnalisisPartisipasi
      requestBody:
        $ref: '#/components/requestBodies/AnalisisPartisipasi'
      responses:
        '201':
          description: 'Created AnalisisPartisipasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisPartisipasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisPartisipasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisPartisipasis/{id}':
    get:
      tags:
        - AnalisisPartisipasi
      summary: 'Find AnalisisPartisipasi by ID'
      description: 'Returns a single AnalisisPartisipasi'
      operationId: getAnalisisPartisipasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisPartisipasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisPartisipasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisPartisipasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisPartisipasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisPartisipasi
      summary: 'Update an existing AnalisisPartisipasi'
      operationId: updateAnalisisPartisipasi
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisPartisipasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisPartisipasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisPartisipasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisPartisipasi
      summary: 'Deletes a AnalisisPartisipasi'
      operationId: deleteAnalisisPartisipasi
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisPartisipasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisPeriodes:
    get:
      tags:
        - AnalisisPeriode
      summary: 'Find list AnalisisPeriode'
      description: 'Returns list of AnalisisPeriode'
      operationId: getAnalisisPeriode
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisPeriode' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisPeriode' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisPeriode' } }
                type: object
        '404':
          description: 'AnalisisPeriode not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisPeriode
      summary: 'Add a new AnalisisPeriode to the store'
      operationId: addAnalisisPeriode
      requestBody:
        $ref: '#/components/requestBodies/AnalisisPeriode'
      responses:
        '201':
          description: 'Created AnalisisPeriode'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisPeriode'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisPeriode'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisPeriodes/{id}':
    get:
      tags:
        - AnalisisPeriode
      summary: 'Find AnalisisPeriode by ID'
      description: 'Returns a single AnalisisPeriode'
      operationId: getAnalisisPeriodeById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisPeriode to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisPeriode'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisPeriode'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisPeriode not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisPeriode
      summary: 'Update an existing AnalisisPeriode'
      operationId: updateAnalisisPeriode
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisPeriode id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisPeriode'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisPeriode not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisPeriode
      summary: 'Deletes a AnalisisPeriode'
      operationId: deleteAnalisisPeriode
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisPeriode id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisRefStates:
    get:
      tags:
        - AnalisisRefState
      summary: 'Find list AnalisisRefState'
      description: 'Returns list of AnalisisRefState'
      operationId: getAnalisisRefState
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRefState' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRefState' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisRefState' } }
                type: object
        '404':
          description: 'AnalisisRefState not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisRefState
      summary: 'Add a new AnalisisRefState to the store'
      operationId: addAnalisisRefState
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRefState'
      responses:
        '201':
          description: 'Created AnalisisRefState'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRefState'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRefState'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisRefStates/{id}':
    get:
      tags:
        - AnalisisRefState
      summary: 'Find AnalisisRefState by ID'
      description: 'Returns a single AnalisisRefState'
      operationId: getAnalisisRefStateById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisRefState to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRefState'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRefState'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisRefState not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisRefState
      summary: 'Update an existing AnalisisRefState'
      operationId: updateAnalisisRefState
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRefState id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRefState'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisRefState not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisRefState
      summary: 'Deletes a AnalisisRefState'
      operationId: deleteAnalisisRefState
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRefState id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisRefSubjeks:
    get:
      tags:
        - AnalisisRefSubjek
      summary: 'Find list AnalisisRefSubjek'
      description: 'Returns list of AnalisisRefSubjek'
      operationId: getAnalisisRefSubjek
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRefSubjek' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRefSubjek' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisRefSubjek' } }
                type: object
        '404':
          description: 'AnalisisRefSubjek not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisRefSubjek
      summary: 'Add a new AnalisisRefSubjek to the store'
      operationId: addAnalisisRefSubjek
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRefSubjek'
      responses:
        '201':
          description: 'Created AnalisisRefSubjek'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRefSubjek'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRefSubjek'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisRefSubjeks/{id}':
    get:
      tags:
        - AnalisisRefSubjek
      summary: 'Find AnalisisRefSubjek by ID'
      description: 'Returns a single AnalisisRefSubjek'
      operationId: getAnalisisRefSubjekById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisRefSubjek to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRefSubjek'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRefSubjek'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisRefSubjek not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisRefSubjek
      summary: 'Update an existing AnalisisRefSubjek'
      operationId: updateAnalisisRefSubjek
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRefSubjek id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRefSubjek'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisRefSubjek not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisRefSubjek
      summary: 'Deletes a AnalisisRefSubjek'
      operationId: deleteAnalisisRefSubjek
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRefSubjek id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisResponBuktis:
    get:
      tags:
        - AnalisisResponBukti
      summary: 'Find list AnalisisResponBukti'
      description: 'Returns list of AnalisisResponBukti'
      operationId: getAnalisisResponBukti
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisResponBukti' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisResponBukti' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisResponBukti' } }
                type: object
        '404':
          description: 'AnalisisResponBukti not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisResponBukti
      summary: 'Add a new AnalisisResponBukti to the store'
      operationId: addAnalisisResponBukti
      requestBody:
        $ref: '#/components/requestBodies/AnalisisResponBukti'
      responses:
        '201':
          description: 'Created AnalisisResponBukti'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisResponBukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisResponBukti'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisResponBuktis/{id}':
    get:
      tags:
        - AnalisisResponBukti
      summary: 'Find AnalisisResponBukti by ID'
      description: 'Returns a single AnalisisResponBukti'
      operationId: getAnalisisResponBuktiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisResponBukti to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisResponBukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisResponBukti'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisResponBukti not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisResponBukti
      summary: 'Update an existing AnalisisResponBukti'
      operationId: updateAnalisisResponBukti
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisResponBukti id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisResponBukti'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisResponBukti not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisResponBukti
      summary: 'Deletes a AnalisisResponBukti'
      operationId: deleteAnalisisResponBukti
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisResponBukti id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisResponHasils:
    get:
      tags:
        - AnalisisResponHasil
      summary: 'Find list AnalisisResponHasil'
      description: 'Returns list of AnalisisResponHasil'
      operationId: getAnalisisResponHasil
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisResponHasil' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisResponHasil' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisResponHasil' } }
                type: object
        '404':
          description: 'AnalisisResponHasil not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisResponHasil
      summary: 'Add a new AnalisisResponHasil to the store'
      operationId: addAnalisisResponHasil
      requestBody:
        $ref: '#/components/requestBodies/AnalisisResponHasil'
      responses:
        '201':
          description: 'Created AnalisisResponHasil'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisResponHasil'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisResponHasil'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisResponHasils/{id}':
    get:
      tags:
        - AnalisisResponHasil
      summary: 'Find AnalisisResponHasil by ID'
      description: 'Returns a single AnalisisResponHasil'
      operationId: getAnalisisResponHasilById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisResponHasil to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisResponHasil'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisResponHasil'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisResponHasil not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisResponHasil
      summary: 'Update an existing AnalisisResponHasil'
      operationId: updateAnalisisResponHasil
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisResponHasil id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisResponHasil'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisResponHasil not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisResponHasil
      summary: 'Deletes a AnalisisResponHasil'
      operationId: deleteAnalisisResponHasil
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisResponHasil id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisRespons:
    get:
      tags:
        - AnalisisRespon
      summary: 'Find list AnalisisRespon'
      description: 'Returns list of AnalisisRespon'
      operationId: getAnalisisRespon
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRespon' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisRespon' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisRespon' } }
                type: object
        '404':
          description: 'AnalisisRespon not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisRespon
      summary: 'Add a new AnalisisRespon to the store'
      operationId: addAnalisisRespon
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRespon'
      responses:
        '201':
          description: 'Created AnalisisRespon'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRespon'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRespon'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisRespons/{id}':
    get:
      tags:
        - AnalisisRespon
      summary: 'Find AnalisisRespon by ID'
      description: 'Returns a single AnalisisRespon'
      operationId: getAnalisisResponById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisRespon to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisRespon'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisRespon'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisRespon not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisRespon
      summary: 'Update an existing AnalisisRespon'
      operationId: updateAnalisisRespon
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRespon id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisRespon'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisRespon not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisRespon
      summary: 'Deletes a AnalisisRespon'
      operationId: deleteAnalisisRespon
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisRespon id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /analisisTipeIndikators:
    get:
      tags:
        - AnalisisTipeIndikator
      summary: 'Find list AnalisisTipeIndikator'
      description: 'Returns list of AnalisisTipeIndikator'
      operationId: getAnalisisTipeIndikator
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisTipeIndikator' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnalisisTipeIndikator' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnalisisTipeIndikator' } }
                type: object
        '404':
          description: 'AnalisisTipeIndikator not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnalisisTipeIndikator
      summary: 'Add a new AnalisisTipeIndikator to the store'
      operationId: addAnalisisTipeIndikator
      requestBody:
        $ref: '#/components/requestBodies/AnalisisTipeIndikator'
      responses:
        '201':
          description: 'Created AnalisisTipeIndikator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisTipeIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisTipeIndikator'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/analisisTipeIndikators/{id}':
    get:
      tags:
        - AnalisisTipeIndikator
      summary: 'Find AnalisisTipeIndikator by ID'
      description: 'Returns a single AnalisisTipeIndikator'
      operationId: getAnalisisTipeIndikatorById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnalisisTipeIndikator to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalisisTipeIndikator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalisisTipeIndikator'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnalisisTipeIndikator not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnalisisTipeIndikator
      summary: 'Update an existing AnalisisTipeIndikator'
      operationId: updateAnalisisTipeIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisTipeIndikator id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnalisisTipeIndikator'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnalisisTipeIndikator not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnalisisTipeIndikator
      summary: 'Deletes a AnalisisTipeIndikator'
      operationId: deleteAnalisisTipeIndikator
      parameters:
        -
          name: id
          in: path
          description: 'AnalisisTipeIndikator id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /anggotaGrupKontaks:
    get:
      tags:
        - AnggotaGrupKontak
      summary: 'Find list AnggotaGrupKontak'
      description: 'Returns list of AnggotaGrupKontak'
      operationId: getAnggotaGrupKontak
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnggotaGrupKontak' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AnggotaGrupKontak' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/AnggotaGrupKontak' } }
                type: object
        '404':
          description: 'AnggotaGrupKontak not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - AnggotaGrupKontak
      summary: 'Add a new AnggotaGrupKontak to the store'
      operationId: addAnggotaGrupKontak
      requestBody:
        $ref: '#/components/requestBodies/AnggotaGrupKontak'
      responses:
        '201':
          description: 'Created AnggotaGrupKontak'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnggotaGrupKontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnggotaGrupKontak'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/anggotaGrupKontaks/{id}':
    get:
      tags:
        - AnggotaGrupKontak
      summary: 'Find AnggotaGrupKontak by ID'
      description: 'Returns a single AnggotaGrupKontak'
      operationId: getAnggotaGrupKontakById
      parameters:
        -
          name: id
          in: path
          description: 'ID of AnggotaGrupKontak to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnggotaGrupKontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/AnggotaGrupKontak'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'AnggotaGrupKontak not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - AnggotaGrupKontak
      summary: 'Update an existing AnggotaGrupKontak'
      operationId: updateAnggotaGrupKontak
      parameters:
        -
          name: id
          in: path
          description: 'AnggotaGrupKontak id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/AnggotaGrupKontak'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'AnggotaGrupKontak not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - AnggotaGrupKontak
      summary: 'Deletes a AnggotaGrupKontak'
      operationId: deleteAnggotaGrupKontak
      parameters:
        -
          name: id
          in: path
          description: 'AnggotaGrupKontak id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /areas:
    get:
      tags:
        - Area
      summary: 'Find list Area'
      description: 'Returns list of Area'
      operationId: getArea
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Area' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Area' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Area' } }
                type: object
        '404':
          description: 'Area not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Area
      summary: 'Add a new Area to the store'
      operationId: addArea
      requestBody:
        $ref: '#/components/requestBodies/Area'
      responses:
        '201':
          description: 'Created Area'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
            application/xml:
              schema:
                $ref: '#/components/schemas/Area'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/areas/{id}':
    get:
      tags:
        - Area
      summary: 'Find Area by ID'
      description: 'Returns a single Area'
      operationId: getAreaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Area to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
            application/xml:
              schema:
                $ref: '#/components/schemas/Area'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Area not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Area
      summary: 'Update an existing Area'
      operationId: updateArea
      parameters:
        -
          name: id
          in: path
          description: 'Area id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Area'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Area not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Area
      summary: 'Deletes a Area'
      operationId: deleteArea
      parameters:
        -
          name: id
          in: path
          description: 'Area id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /artikels:
    get:
      tags:
        - Artikel
      summary: 'Find list Artikel'
      description: 'Returns list of Artikel'
      operationId: getArtikel
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Artikel' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Artikel' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Artikel' } }
                type: object
        '404':
          description: 'Artikel not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Artikel
      summary: 'Add a new Artikel to the store'
      operationId: addArtikel
      requestBody:
        $ref: '#/components/requestBodies/Artikel'
      responses:
        '201':
          description: 'Created Artikel'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artikel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Artikel'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/artikels/{id}':
    get:
      tags:
        - Artikel
      summary: 'Find Artikel by ID'
      description: 'Returns a single Artikel'
      operationId: getArtikelById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Artikel to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artikel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Artikel'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Artikel not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Artikel
      summary: 'Update an existing Artikel'
      operationId: updateArtikel
      parameters:
        -
          name: id
          in: path
          description: 'Artikel id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Artikel'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Artikel not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Artikel
      summary: 'Deletes a Artikel'
      operationId: deleteArtikel
      parameters:
        -
          name: id
          in: path
          description: 'Artikel id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /auth/login:
    post:
      tags:
        - Authentication
      summary: 'login page to authenticate user'
      operationId: userLogin
      requestBody:
        description: 'Login user'
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
              type: object
      responses:
        '200':
          description: 'Login successed'
          content:
            application/json:
              schema: {  }
            application/xml:
              schema: {  }
        '400':
          description: 'Invalid username/password supplied'
  /captchaCodes:
    get:
      tags:
        - CaptchaCodes
      summary: 'Find list CaptchaCodes'
      description: 'Returns list of CaptchaCodes'
      operationId: getCaptchaCodes
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CaptchaCodes' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CaptchaCodes' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/CaptchaCodes' } }
                type: object
        '404':
          description: 'CaptchaCodes not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - CaptchaCodes
      summary: 'Add a new CaptchaCodes to the store'
      operationId: addCaptchaCodes
      requestBody:
        $ref: '#/components/requestBodies/CaptchaCodes'
      responses:
        '201':
          description: 'Created CaptchaCodes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaCodes'
            application/xml:
              schema:
                $ref: '#/components/schemas/CaptchaCodes'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/captchaCodes/{id}':
    get:
      tags:
        - CaptchaCodes
      summary: 'Find CaptchaCodes by ID'
      description: 'Returns a single CaptchaCodes'
      operationId: getCaptchaCodesById
      parameters:
        -
          name: id
          in: path
          description: 'ID of CaptchaCodes to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaCodes'
            application/xml:
              schema:
                $ref: '#/components/schemas/CaptchaCodes'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'CaptchaCodes not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - CaptchaCodes
      summary: 'Update an existing CaptchaCodes'
      operationId: updateCaptchaCodes
      parameters:
        -
          name: id
          in: path
          description: 'CaptchaCodes id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/CaptchaCodes'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'CaptchaCodes not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - CaptchaCodes
      summary: 'Deletes a CaptchaCodes'
      operationId: deleteCaptchaCodes
      parameters:
        -
          name: id
          in: path
          description: 'CaptchaCodes id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /configs:
    get:
      tags:
        - Config
      summary: 'Find list Config'
      description: 'Returns list of Config'
      operationId: getConfig
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Config' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Config' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Config' } }
                type: object
        '404':
          description: 'Config not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Config
      summary: 'Add a new Config to the store'
      operationId: addConfig
      requestBody:
        $ref: '#/components/requestBodies/Config'
      responses:
        '201':
          description: 'Created Config'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
            application/xml:
              schema:
                $ref: '#/components/schemas/Config'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/configs/{id}':
    get:
      tags:
        - Config
      summary: 'Find Config by ID'
      description: 'Returns a single Config'
      operationId: getConfigById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Config to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
            application/xml:
              schema:
                $ref: '#/components/schemas/Config'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Config not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Config
      summary: 'Update an existing Config'
      operationId: updateConfig
      parameters:
        -
          name: id
          in: path
          description: 'Config id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Config'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Config not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Config
      summary: 'Deletes a Config'
      operationId: deleteConfig
      parameters:
        -
          name: id
          in: path
          description: 'Config id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /covid19Pantaus:
    get:
      tags:
        - Covid19Pantau
      summary: 'Find list Covid19Pantau'
      description: 'Returns list of Covid19Pantau'
      operationId: getCovid19Pantau
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Covid19Pantau' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Covid19Pantau' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Covid19Pantau' } }
                type: object
        '404':
          description: 'Covid19Pantau not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Covid19Pantau
      summary: 'Add a new Covid19Pantau to the store'
      operationId: addCovid19Pantau
      requestBody:
        $ref: '#/components/requestBodies/Covid19Pantau'
      responses:
        '201':
          description: 'Created Covid19Pantau'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covid19Pantau'
            application/xml:
              schema:
                $ref: '#/components/schemas/Covid19Pantau'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/covid19Pantaus/{id}':
    get:
      tags:
        - Covid19Pantau
      summary: 'Find Covid19Pantau by ID'
      description: 'Returns a single Covid19Pantau'
      operationId: getCovid19PantauById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Covid19Pantau to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covid19Pantau'
            application/xml:
              schema:
                $ref: '#/components/schemas/Covid19Pantau'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Covid19Pantau not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Covid19Pantau
      summary: 'Update an existing Covid19Pantau'
      operationId: updateCovid19Pantau
      parameters:
        -
          name: id
          in: path
          description: 'Covid19Pantau id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Covid19Pantau'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Covid19Pantau not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Covid19Pantau
      summary: 'Deletes a Covid19Pantau'
      operationId: deleteCovid19Pantau
      parameters:
        -
          name: id
          in: path
          description: 'Covid19Pantau id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /covid19Pemudiks:
    get:
      tags:
        - Covid19Pemudik
      summary: 'Find list Covid19Pemudik'
      description: 'Returns list of Covid19Pemudik'
      operationId: getCovid19Pemudik
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Covid19Pemudik' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Covid19Pemudik' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Covid19Pemudik' } }
                type: object
        '404':
          description: 'Covid19Pemudik not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Covid19Pemudik
      summary: 'Add a new Covid19Pemudik to the store'
      operationId: addCovid19Pemudik
      requestBody:
        $ref: '#/components/requestBodies/Covid19Pemudik'
      responses:
        '201':
          description: 'Created Covid19Pemudik'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covid19Pemudik'
            application/xml:
              schema:
                $ref: '#/components/schemas/Covid19Pemudik'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/covid19Pemudiks/{id}':
    get:
      tags:
        - Covid19Pemudik
      summary: 'Find Covid19Pemudik by ID'
      description: 'Returns a single Covid19Pemudik'
      operationId: getCovid19PemudikById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Covid19Pemudik to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covid19Pemudik'
            application/xml:
              schema:
                $ref: '#/components/schemas/Covid19Pemudik'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Covid19Pemudik not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Covid19Pemudik
      summary: 'Update an existing Covid19Pemudik'
      operationId: updateCovid19Pemudik
      parameters:
        -
          name: id
          in: path
          description: 'Covid19Pemudik id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Covid19Pemudik'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Covid19Pemudik not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Covid19Pemudik
      summary: 'Deletes a Covid19Pemudik'
      operationId: deleteCovid19Pemudik
      parameters:
        -
          name: id
          in: path
          description: 'Covid19Pemudik id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /daftarAnggotaGrups:
    get:
      tags:
        - DaftarAnggotaGrup
      summary: 'Find list DaftarAnggotaGrup'
      description: 'Returns list of DaftarAnggotaGrup'
      operationId: getDaftarAnggotaGrup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarAnggotaGrup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarAnggotaGrup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DaftarAnggotaGrup' } }
                type: object
        '404':
          description: 'DaftarAnggotaGrup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DaftarAnggotaGrup
      summary: 'Add a new DaftarAnggotaGrup to the store'
      operationId: addDaftarAnggotaGrup
      requestBody:
        $ref: '#/components/requestBodies/DaftarAnggotaGrup'
      responses:
        '201':
          description: 'Created DaftarAnggotaGrup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarAnggotaGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarAnggotaGrup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/daftarAnggotaGrups/{id}':
    get:
      tags:
        - DaftarAnggotaGrup
      summary: 'Find DaftarAnggotaGrup by ID'
      description: 'Returns a single DaftarAnggotaGrup'
      operationId: getDaftarAnggotaGrupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DaftarAnggotaGrup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarAnggotaGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarAnggotaGrup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DaftarAnggotaGrup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DaftarAnggotaGrup
      summary: 'Update an existing DaftarAnggotaGrup'
      operationId: updateDaftarAnggotaGrup
      parameters:
        -
          name: id
          in: path
          description: 'DaftarAnggotaGrup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DaftarAnggotaGrup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DaftarAnggotaGrup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DaftarAnggotaGrup
      summary: 'Deletes a DaftarAnggotaGrup'
      operationId: deleteDaftarAnggotaGrup
      parameters:
        -
          name: id
          in: path
          description: 'DaftarAnggotaGrup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /daftarGrups:
    get:
      tags:
        - DaftarGrup
      summary: 'Find list DaftarGrup'
      description: 'Returns list of DaftarGrup'
      operationId: getDaftarGrup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarGrup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarGrup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DaftarGrup' } }
                type: object
        '404':
          description: 'DaftarGrup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DaftarGrup
      summary: 'Add a new DaftarGrup to the store'
      operationId: addDaftarGrup
      requestBody:
        $ref: '#/components/requestBodies/DaftarGrup'
      responses:
        '201':
          description: 'Created DaftarGrup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarGrup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/daftarGrups/{id}':
    get:
      tags:
        - DaftarGrup
      summary: 'Find DaftarGrup by ID'
      description: 'Returns a single DaftarGrup'
      operationId: getDaftarGrupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DaftarGrup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarGrup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DaftarGrup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DaftarGrup
      summary: 'Update an existing DaftarGrup'
      operationId: updateDaftarGrup
      parameters:
        -
          name: id
          in: path
          description: 'DaftarGrup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DaftarGrup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DaftarGrup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DaftarGrup
      summary: 'Deletes a DaftarGrup'
      operationId: deleteDaftarGrup
      parameters:
        -
          name: id
          in: path
          description: 'DaftarGrup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /daftarKontaks:
    get:
      tags:
        - DaftarKontak
      summary: 'Find list DaftarKontak'
      description: 'Returns list of DaftarKontak'
      operationId: getDaftarKontak
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarKontak' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DaftarKontak' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DaftarKontak' } }
                type: object
        '404':
          description: 'DaftarKontak not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DaftarKontak
      summary: 'Add a new DaftarKontak to the store'
      operationId: addDaftarKontak
      requestBody:
        $ref: '#/components/requestBodies/DaftarKontak'
      responses:
        '201':
          description: 'Created DaftarKontak'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarKontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarKontak'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/daftarKontaks/{id}':
    get:
      tags:
        - DaftarKontak
      summary: 'Find DaftarKontak by ID'
      description: 'Returns a single DaftarKontak'
      operationId: getDaftarKontakById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DaftarKontak to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaftarKontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/DaftarKontak'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DaftarKontak not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DaftarKontak
      summary: 'Update an existing DaftarKontak'
      operationId: updateDaftarKontak
      parameters:
        -
          name: id
          in: path
          description: 'DaftarKontak id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DaftarKontak'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DaftarKontak not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DaftarKontak
      summary: 'Deletes a DaftarKontak'
      operationId: deleteDaftarKontak
      parameters:
        -
          name: id
          in: path
          description: 'DaftarKontak id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /dataPersilJenis:
    get:
      tags:
        - DataPersilJenis
      summary: 'Find list DataPersilJenis'
      description: 'Returns list of DataPersilJenis'
      operationId: getDataPersilJenis
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersilJenis' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersilJenis' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DataPersilJenis' } }
                type: object
        '404':
          description: 'DataPersilJenis not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DataPersilJenis
      summary: 'Add a new DataPersilJenis to the store'
      operationId: addDataPersilJenis
      requestBody:
        $ref: '#/components/requestBodies/DataPersilJenis'
      responses:
        '201':
          description: 'Created DataPersilJenis'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersilJenis'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersilJenis'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/dataPersilJenis/{id}':
    get:
      tags:
        - DataPersilJenis
      summary: 'Find DataPersilJenis by ID'
      description: 'Returns a single DataPersilJenis'
      operationId: getDataPersilJenisById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DataPersilJenis to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersilJenis'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersilJenis'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DataPersilJenis not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DataPersilJenis
      summary: 'Update an existing DataPersilJenis'
      operationId: updateDataPersilJenis
      parameters:
        -
          name: id
          in: path
          description: 'DataPersilJenis id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DataPersilJenis'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DataPersilJenis not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DataPersilJenis
      summary: 'Deletes a DataPersilJenis'
      operationId: deleteDataPersilJenis
      parameters:
        -
          name: id
          in: path
          description: 'DataPersilJenis id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /dataPersilPeruntukans:
    get:
      tags:
        - DataPersilPeruntukan
      summary: 'Find list DataPersilPeruntukan'
      description: 'Returns list of DataPersilPeruntukan'
      operationId: getDataPersilPeruntukan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersilPeruntukan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersilPeruntukan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DataPersilPeruntukan' } }
                type: object
        '404':
          description: 'DataPersilPeruntukan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DataPersilPeruntukan
      summary: 'Add a new DataPersilPeruntukan to the store'
      operationId: addDataPersilPeruntukan
      requestBody:
        $ref: '#/components/requestBodies/DataPersilPeruntukan'
      responses:
        '201':
          description: 'Created DataPersilPeruntukan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersilPeruntukan'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersilPeruntukan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/dataPersilPeruntukans/{id}':
    get:
      tags:
        - DataPersilPeruntukan
      summary: 'Find DataPersilPeruntukan by ID'
      description: 'Returns a single DataPersilPeruntukan'
      operationId: getDataPersilPeruntukanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DataPersilPeruntukan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersilPeruntukan'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersilPeruntukan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DataPersilPeruntukan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DataPersilPeruntukan
      summary: 'Update an existing DataPersilPeruntukan'
      operationId: updateDataPersilPeruntukan
      parameters:
        -
          name: id
          in: path
          description: 'DataPersilPeruntukan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DataPersilPeruntukan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DataPersilPeruntukan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DataPersilPeruntukan
      summary: 'Deletes a DataPersilPeruntukan'
      operationId: deleteDataPersilPeruntukan
      parameters:
        -
          name: id
          in: path
          description: 'DataPersilPeruntukan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /dataPersils:
    get:
      tags:
        - DataPersil
      summary: 'Find list DataPersil'
      description: 'Returns list of DataPersil'
      operationId: getDataPersil
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersil' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DataPersil' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DataPersil' } }
                type: object
        '404':
          description: 'DataPersil not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DataPersil
      summary: 'Add a new DataPersil to the store'
      operationId: addDataPersil
      requestBody:
        $ref: '#/components/requestBodies/DataPersil'
      responses:
        '201':
          description: 'Created DataPersil'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersil'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersil'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/dataPersils/{id}':
    get:
      tags:
        - DataPersil
      summary: 'Find DataPersil by ID'
      description: 'Returns a single DataPersil'
      operationId: getDataPersilById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DataPersil to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPersil'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataPersil'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DataPersil not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DataPersil
      summary: 'Update an existing DataPersil'
      operationId: updateDataPersil
      parameters:
        -
          name: id
          in: path
          description: 'DataPersil id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DataPersil'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DataPersil not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DataPersil
      summary: 'Deletes a DataPersil'
      operationId: deleteDataPersil
      parameters:
        -
          name: id
          in: path
          description: 'DataPersil id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /detailLogPenduduks:
    get:
      tags:
        - DetailLogPenduduk
      summary: 'Find list DetailLogPenduduk'
      description: 'Returns list of DetailLogPenduduk'
      operationId: getDetailLogPenduduk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DetailLogPenduduk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DetailLogPenduduk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DetailLogPenduduk' } }
                type: object
        '404':
          description: 'DetailLogPenduduk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DetailLogPenduduk
      summary: 'Add a new DetailLogPenduduk to the store'
      operationId: addDetailLogPenduduk
      requestBody:
        $ref: '#/components/requestBodies/DetailLogPenduduk'
      responses:
        '201':
          description: 'Created DetailLogPenduduk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailLogPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/DetailLogPenduduk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/detailLogPenduduks/{id}':
    get:
      tags:
        - DetailLogPenduduk
      summary: 'Find DetailLogPenduduk by ID'
      description: 'Returns a single DetailLogPenduduk'
      operationId: getDetailLogPendudukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DetailLogPenduduk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailLogPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/DetailLogPenduduk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DetailLogPenduduk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DetailLogPenduduk
      summary: 'Update an existing DetailLogPenduduk'
      operationId: updateDetailLogPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'DetailLogPenduduk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DetailLogPenduduk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DetailLogPenduduk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DetailLogPenduduk
      summary: 'Deletes a DetailLogPenduduk'
      operationId: deleteDetailLogPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'DetailLogPenduduk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /disposisiSuratMasuks:
    get:
      tags:
        - DisposisiSuratMasuk
      summary: 'Find list DisposisiSuratMasuk'
      description: 'Returns list of DisposisiSuratMasuk'
      operationId: getDisposisiSuratMasuk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DisposisiSuratMasuk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DisposisiSuratMasuk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DisposisiSuratMasuk' } }
                type: object
        '404':
          description: 'DisposisiSuratMasuk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DisposisiSuratMasuk
      summary: 'Add a new DisposisiSuratMasuk to the store'
      operationId: addDisposisiSuratMasuk
      requestBody:
        $ref: '#/components/requestBodies/DisposisiSuratMasuk'
      responses:
        '201':
          description: 'Created DisposisiSuratMasuk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposisiSuratMasuk'
            application/xml:
              schema:
                $ref: '#/components/schemas/DisposisiSuratMasuk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/disposisiSuratMasuks/{id}':
    get:
      tags:
        - DisposisiSuratMasuk
      summary: 'Find DisposisiSuratMasuk by ID'
      description: 'Returns a single DisposisiSuratMasuk'
      operationId: getDisposisiSuratMasukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DisposisiSuratMasuk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposisiSuratMasuk'
            application/xml:
              schema:
                $ref: '#/components/schemas/DisposisiSuratMasuk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DisposisiSuratMasuk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DisposisiSuratMasuk
      summary: 'Update an existing DisposisiSuratMasuk'
      operationId: updateDisposisiSuratMasuk
      parameters:
        -
          name: id
          in: path
          description: 'DisposisiSuratMasuk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DisposisiSuratMasuk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DisposisiSuratMasuk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DisposisiSuratMasuk
      summary: 'Deletes a DisposisiSuratMasuk'
      operationId: deleteDisposisiSuratMasuk
      parameters:
        -
          name: id
          in: path
          description: 'DisposisiSuratMasuk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /dokumenHidups:
    get:
      tags:
        - DokumenHidup
      summary: 'Find list DokumenHidup'
      description: 'Returns list of DokumenHidup'
      operationId: getDokumenHidup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DokumenHidup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DokumenHidup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/DokumenHidup' } }
                type: object
        '404':
          description: 'DokumenHidup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - DokumenHidup
      summary: 'Add a new DokumenHidup to the store'
      operationId: addDokumenHidup
      requestBody:
        $ref: '#/components/requestBodies/DokumenHidup'
      responses:
        '201':
          description: 'Created DokumenHidup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenHidup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DokumenHidup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/dokumenHidups/{id}':
    get:
      tags:
        - DokumenHidup
      summary: 'Find DokumenHidup by ID'
      description: 'Returns a single DokumenHidup'
      operationId: getDokumenHidupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of DokumenHidup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenHidup'
            application/xml:
              schema:
                $ref: '#/components/schemas/DokumenHidup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'DokumenHidup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - DokumenHidup
      summary: 'Update an existing DokumenHidup'
      operationId: updateDokumenHidup
      parameters:
        -
          name: id
          in: path
          description: 'DokumenHidup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/DokumenHidup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'DokumenHidup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - DokumenHidup
      summary: 'Deletes a DokumenHidup'
      operationId: deleteDokumenHidup
      parameters:
        -
          name: id
          in: path
          description: 'DokumenHidup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /dokumens:
    get:
      tags:
        - Dokumen
      summary: 'Find list Dokumen'
      description: 'Returns list of Dokumen'
      operationId: getDokumen
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Dokumen' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Dokumen' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Dokumen' } }
                type: object
        '404':
          description: 'Dokumen not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Dokumen
      summary: 'Add a new Dokumen to the store'
      operationId: addDokumen
      requestBody:
        $ref: '#/components/requestBodies/Dokumen'
      responses:
        '201':
          description: 'Created Dokumen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumen'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dokumen'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/dokumens/{id}':
    get:
      tags:
        - Dokumen
      summary: 'Find Dokumen by ID'
      description: 'Returns a single Dokumen'
      operationId: getDokumenById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Dokumen to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumen'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dokumen'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Dokumen not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Dokumen
      summary: 'Update an existing Dokumen'
      operationId: updateDokumen
      parameters:
        -
          name: id
          in: path
          description: 'Dokumen id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Dokumen'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Dokumen not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Dokumen
      summary: 'Deletes a Dokumen'
      operationId: deleteDokumen
      parameters:
        -
          name: id
          in: path
          description: 'Dokumen id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /gambarGalleries:
    get:
      tags:
        - GambarGallery
      summary: 'Find list GambarGallery'
      description: 'Returns list of GambarGallery'
      operationId: getGambarGallery
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/GambarGallery' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/GambarGallery' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/GambarGallery' } }
                type: object
        '404':
          description: 'GambarGallery not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - GambarGallery
      summary: 'Add a new GambarGallery to the store'
      operationId: addGambarGallery
      requestBody:
        $ref: '#/components/requestBodies/GambarGallery'
      responses:
        '201':
          description: 'Created GambarGallery'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GambarGallery'
            application/xml:
              schema:
                $ref: '#/components/schemas/GambarGallery'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/gambarGalleries/{id}':
    get:
      tags:
        - GambarGallery
      summary: 'Find GambarGallery by ID'
      description: 'Returns a single GambarGallery'
      operationId: getGambarGalleryById
      parameters:
        -
          name: id
          in: path
          description: 'ID of GambarGallery to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GambarGallery'
            application/xml:
              schema:
                $ref: '#/components/schemas/GambarGallery'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'GambarGallery not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - GambarGallery
      summary: 'Update an existing GambarGallery'
      operationId: updateGambarGallery
      parameters:
        -
          name: id
          in: path
          description: 'GambarGallery id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/GambarGallery'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'GambarGallery not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - GambarGallery
      summary: 'Deletes a GambarGallery'
      operationId: deleteGambarGallery
      parameters:
        -
          name: id
          in: path
          description: 'GambarGallery id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /garis:
    get:
      tags:
        - Garis
      summary: 'Find list Garis'
      description: 'Returns list of Garis'
      operationId: getGaris
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Garis' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Garis' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Garis' } }
                type: object
        '404':
          description: 'Garis not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Garis
      summary: 'Add a new Garis to the store'
      operationId: addGaris
      requestBody:
        $ref: '#/components/requestBodies/Garis'
      responses:
        '201':
          description: 'Created Garis'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Garis'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/garis/{id}':
    get:
      tags:
        - Garis
      summary: 'Find Garis by ID'
      description: 'Returns a single Garis'
      operationId: getGarisById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Garis to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Garis'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Garis not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Garis
      summary: 'Update an existing Garis'
      operationId: updateGaris
      parameters:
        -
          name: id
          in: path
          description: 'Garis id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Garis'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Garis not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Garis
      summary: 'Deletes a Garis'
      operationId: deleteGaris
      parameters:
        -
          name: id
          in: path
          description: 'Garis id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /gisSimbols:
    get:
      tags:
        - GisSimbol
      summary: 'Find list GisSimbol'
      description: 'Returns list of GisSimbol'
      operationId: getGisSimbol
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/GisSimbol' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/GisSimbol' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/GisSimbol' } }
                type: object
        '404':
          description: 'GisSimbol not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - GisSimbol
      summary: 'Add a new GisSimbol to the store'
      operationId: addGisSimbol
      requestBody:
        $ref: '#/components/requestBodies/GisSimbol'
      responses:
        '201':
          description: 'Created GisSimbol'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GisSimbol'
            application/xml:
              schema:
                $ref: '#/components/schemas/GisSimbol'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/gisSimbols/{id}':
    get:
      tags:
        - GisSimbol
      summary: 'Find GisSimbol by ID'
      description: 'Returns a single GisSimbol'
      operationId: getGisSimbolById
      parameters:
        -
          name: id
          in: path
          description: 'ID of GisSimbol to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GisSimbol'
            application/xml:
              schema:
                $ref: '#/components/schemas/GisSimbol'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'GisSimbol not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - GisSimbol
      summary: 'Update an existing GisSimbol'
      operationId: updateGisSimbol
      parameters:
        -
          name: id
          in: path
          description: 'GisSimbol id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/GisSimbol'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'GisSimbol not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - GisSimbol
      summary: 'Deletes a GisSimbol'
      operationId: deleteGisSimbol
      parameters:
        -
          name: id
          in: path
          description: 'GisSimbol id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inboxes:
    get:
      tags:
        - Inbox
      summary: 'Find list Inbox'
      description: 'Returns list of Inbox'
      operationId: getInbox
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Inbox' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Inbox' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Inbox' } }
                type: object
        '404':
          description: 'Inbox not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Inbox
      summary: 'Add a new Inbox to the store'
      operationId: addInbox
      requestBody:
        $ref: '#/components/requestBodies/Inbox'
      responses:
        '201':
          description: 'Created Inbox'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
            application/xml:
              schema:
                $ref: '#/components/schemas/Inbox'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inboxes/{id}':
    get:
      tags:
        - Inbox
      summary: 'Find Inbox by ID'
      description: 'Returns a single Inbox'
      operationId: getInboxById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Inbox to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
            application/xml:
              schema:
                $ref: '#/components/schemas/Inbox'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Inbox not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Inbox
      summary: 'Update an existing Inbox'
      operationId: updateInbox
      parameters:
        -
          name: id
          in: path
          description: 'Inbox id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Inbox'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Inbox not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Inbox
      summary: 'Deletes a Inbox'
      operationId: deleteInbox
      parameters:
        -
          name: id
          in: path
          description: 'Inbox id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisAssets:
    get:
      tags:
        - InventarisAsset
      summary: 'Find list InventarisAsset'
      description: 'Returns list of InventarisAsset'
      operationId: getInventarisAsset
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisAsset' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisAsset' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisAsset' } }
                type: object
        '404':
          description: 'InventarisAsset not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisAsset
      summary: 'Add a new InventarisAsset to the store'
      operationId: addInventarisAsset
      requestBody:
        $ref: '#/components/requestBodies/InventarisAsset'
      responses:
        '201':
          description: 'Created InventarisAsset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisAsset'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisAssets/{id}':
    get:
      tags:
        - InventarisAsset
      summary: 'Find InventarisAsset by ID'
      description: 'Returns a single InventarisAsset'
      operationId: getInventarisAssetById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisAsset to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisAsset'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisAsset not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisAsset
      summary: 'Update an existing InventarisAsset'
      operationId: updateInventarisAsset
      parameters:
        -
          name: id
          in: path
          description: 'InventarisAsset id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisAsset'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisAsset not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisAsset
      summary: 'Deletes a InventarisAsset'
      operationId: deleteInventarisAsset
      parameters:
        -
          name: id
          in: path
          description: 'InventarisAsset id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisGedungs:
    get:
      tags:
        - InventarisGedung
      summary: 'Find list InventarisGedung'
      description: 'Returns list of InventarisGedung'
      operationId: getInventarisGedung
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisGedung' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisGedung' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisGedung' } }
                type: object
        '404':
          description: 'InventarisGedung not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisGedung
      summary: 'Add a new InventarisGedung to the store'
      operationId: addInventarisGedung
      requestBody:
        $ref: '#/components/requestBodies/InventarisGedung'
      responses:
        '201':
          description: 'Created InventarisGedung'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisGedung'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisGedung'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisGedungs/{id}':
    get:
      tags:
        - InventarisGedung
      summary: 'Find InventarisGedung by ID'
      description: 'Returns a single InventarisGedung'
      operationId: getInventarisGedungById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisGedung to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisGedung'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisGedung'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisGedung not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisGedung
      summary: 'Update an existing InventarisGedung'
      operationId: updateInventarisGedung
      parameters:
        -
          name: id
          in: path
          description: 'InventarisGedung id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisGedung'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisGedung not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisGedung
      summary: 'Deletes a InventarisGedung'
      operationId: deleteInventarisGedung
      parameters:
        -
          name: id
          in: path
          description: 'InventarisGedung id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisJalans:
    get:
      tags:
        - InventarisJalan
      summary: 'Find list InventarisJalan'
      description: 'Returns list of InventarisJalan'
      operationId: getInventarisJalan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisJalan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisJalan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisJalan' } }
                type: object
        '404':
          description: 'InventarisJalan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisJalan
      summary: 'Add a new InventarisJalan to the store'
      operationId: addInventarisJalan
      requestBody:
        $ref: '#/components/requestBodies/InventarisJalan'
      responses:
        '201':
          description: 'Created InventarisJalan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisJalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisJalan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisJalans/{id}':
    get:
      tags:
        - InventarisJalan
      summary: 'Find InventarisJalan by ID'
      description: 'Returns a single InventarisJalan'
      operationId: getInventarisJalanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisJalan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisJalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisJalan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisJalan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisJalan
      summary: 'Update an existing InventarisJalan'
      operationId: updateInventarisJalan
      parameters:
        -
          name: id
          in: path
          description: 'InventarisJalan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisJalan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisJalan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisJalan
      summary: 'Deletes a InventarisJalan'
      operationId: deleteInventarisJalan
      parameters:
        -
          name: id
          in: path
          description: 'InventarisJalan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisKontruksis:
    get:
      tags:
        - InventarisKontruksi
      summary: 'Find list InventarisKontruksi'
      description: 'Returns list of InventarisKontruksi'
      operationId: getInventarisKontruksi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisKontruksi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisKontruksi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisKontruksi' } }
                type: object
        '404':
          description: 'InventarisKontruksi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisKontruksi
      summary: 'Add a new InventarisKontruksi to the store'
      operationId: addInventarisKontruksi
      requestBody:
        $ref: '#/components/requestBodies/InventarisKontruksi'
      responses:
        '201':
          description: 'Created InventarisKontruksi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisKontruksi'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisKontruksi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisKontruksis/{id}':
    get:
      tags:
        - InventarisKontruksi
      summary: 'Find InventarisKontruksi by ID'
      description: 'Returns a single InventarisKontruksi'
      operationId: getInventarisKontruksiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisKontruksi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisKontruksi'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisKontruksi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisKontruksi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisKontruksi
      summary: 'Update an existing InventarisKontruksi'
      operationId: updateInventarisKontruksi
      parameters:
        -
          name: id
          in: path
          description: 'InventarisKontruksi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisKontruksi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisKontruksi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisKontruksi
      summary: 'Deletes a InventarisKontruksi'
      operationId: deleteInventarisKontruksi
      parameters:
        -
          name: id
          in: path
          description: 'InventarisKontruksi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisPeralatans:
    get:
      tags:
        - InventarisPeralatan
      summary: 'Find list InventarisPeralatan'
      description: 'Returns list of InventarisPeralatan'
      operationId: getInventarisPeralatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisPeralatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisPeralatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisPeralatan' } }
                type: object
        '404':
          description: 'InventarisPeralatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisPeralatan
      summary: 'Add a new InventarisPeralatan to the store'
      operationId: addInventarisPeralatan
      requestBody:
        $ref: '#/components/requestBodies/InventarisPeralatan'
      responses:
        '201':
          description: 'Created InventarisPeralatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisPeralatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisPeralatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisPeralatans/{id}':
    get:
      tags:
        - InventarisPeralatan
      summary: 'Find InventarisPeralatan by ID'
      description: 'Returns a single InventarisPeralatan'
      operationId: getInventarisPeralatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisPeralatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisPeralatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisPeralatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisPeralatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisPeralatan
      summary: 'Update an existing InventarisPeralatan'
      operationId: updateInventarisPeralatan
      parameters:
        -
          name: id
          in: path
          description: 'InventarisPeralatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisPeralatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisPeralatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisPeralatan
      summary: 'Deletes a InventarisPeralatan'
      operationId: deleteInventarisPeralatan
      parameters:
        -
          name: id
          in: path
          description: 'InventarisPeralatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /inventarisTanahs:
    get:
      tags:
        - InventarisTanah
      summary: 'Find list InventarisTanah'
      description: 'Returns list of InventarisTanah'
      operationId: getInventarisTanah
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisTanah' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventarisTanah' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/InventarisTanah' } }
                type: object
        '404':
          description: 'InventarisTanah not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - InventarisTanah
      summary: 'Add a new InventarisTanah to the store'
      operationId: addInventarisTanah
      requestBody:
        $ref: '#/components/requestBodies/InventarisTanah'
      responses:
        '201':
          description: 'Created InventarisTanah'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisTanah'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisTanah'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/inventarisTanahs/{id}':
    get:
      tags:
        - InventarisTanah
      summary: 'Find InventarisTanah by ID'
      description: 'Returns a single InventarisTanah'
      operationId: getInventarisTanahById
      parameters:
        -
          name: id
          in: path
          description: 'ID of InventarisTanah to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventarisTanah'
            application/xml:
              schema:
                $ref: '#/components/schemas/InventarisTanah'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'InventarisTanah not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - InventarisTanah
      summary: 'Update an existing InventarisTanah'
      operationId: updateInventarisTanah
      parameters:
        -
          name: id
          in: path
          description: 'InventarisTanah id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/InventarisTanah'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'InventarisTanah not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - InventarisTanah
      summary: 'Deletes a InventarisTanah'
      operationId: deleteInventarisTanah
      parameters:
        -
          name: id
          in: path
          description: 'InventarisTanah id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kategoris:
    get:
      tags:
        - Kategori
      summary: 'Find list Kategori'
      description: 'Returns list of Kategori'
      operationId: getKategori
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kategori' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kategori' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Kategori' } }
                type: object
        '404':
          description: 'Kategori not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Kategori
      summary: 'Add a new Kategori to the store'
      operationId: addKategori
      requestBody:
        $ref: '#/components/requestBodies/Kategori'
      responses:
        '201':
          description: 'Created Kategori'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kategori'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kategori'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kategoris/{id}':
    get:
      tags:
        - Kategori
      summary: 'Find Kategori by ID'
      description: 'Returns a single Kategori'
      operationId: getKategoriById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Kategori to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kategori'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kategori'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Kategori not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Kategori
      summary: 'Update an existing Kategori'
      operationId: updateKategori
      parameters:
        -
          name: id
          in: path
          description: 'Kategori id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Kategori'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Kategori not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Kategori
      summary: 'Deletes a Kategori'
      operationId: deleteKategori
      parameters:
        -
          name: id
          in: path
          description: 'Kategori id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kelompokAnggotas:
    get:
      tags:
        - KelompokAnggota
      summary: 'Find list KelompokAnggota'
      description: 'Returns list of KelompokAnggota'
      operationId: getKelompokAnggota
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KelompokAnggota' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KelompokAnggota' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KelompokAnggota' } }
                type: object
        '404':
          description: 'KelompokAnggota not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KelompokAnggota
      summary: 'Add a new KelompokAnggota to the store'
      operationId: addKelompokAnggota
      requestBody:
        $ref: '#/components/requestBodies/KelompokAnggota'
      responses:
        '201':
          description: 'Created KelompokAnggota'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KelompokAnggota'
            application/xml:
              schema:
                $ref: '#/components/schemas/KelompokAnggota'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kelompokAnggotas/{id}':
    get:
      tags:
        - KelompokAnggota
      summary: 'Find KelompokAnggota by ID'
      description: 'Returns a single KelompokAnggota'
      operationId: getKelompokAnggotaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KelompokAnggota to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KelompokAnggota'
            application/xml:
              schema:
                $ref: '#/components/schemas/KelompokAnggota'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KelompokAnggota not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KelompokAnggota
      summary: 'Update an existing KelompokAnggota'
      operationId: updateKelompokAnggota
      parameters:
        -
          name: id
          in: path
          description: 'KelompokAnggota id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KelompokAnggota'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KelompokAnggota not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KelompokAnggota
      summary: 'Deletes a KelompokAnggota'
      operationId: deleteKelompokAnggota
      parameters:
        -
          name: id
          in: path
          description: 'KelompokAnggota id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kelompokMasters:
    get:
      tags:
        - KelompokMaster
      summary: 'Find list KelompokMaster'
      description: 'Returns list of KelompokMaster'
      operationId: getKelompokMaster
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KelompokMaster' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KelompokMaster' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KelompokMaster' } }
                type: object
        '404':
          description: 'KelompokMaster not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KelompokMaster
      summary: 'Add a new KelompokMaster to the store'
      operationId: addKelompokMaster
      requestBody:
        $ref: '#/components/requestBodies/KelompokMaster'
      responses:
        '201':
          description: 'Created KelompokMaster'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KelompokMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/KelompokMaster'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kelompokMasters/{id}':
    get:
      tags:
        - KelompokMaster
      summary: 'Find KelompokMaster by ID'
      description: 'Returns a single KelompokMaster'
      operationId: getKelompokMasterById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KelompokMaster to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KelompokMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/KelompokMaster'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KelompokMaster not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KelompokMaster
      summary: 'Update an existing KelompokMaster'
      operationId: updateKelompokMaster
      parameters:
        -
          name: id
          in: path
          description: 'KelompokMaster id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KelompokMaster'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KelompokMaster not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KelompokMaster
      summary: 'Deletes a KelompokMaster'
      operationId: deleteKelompokMaster
      parameters:
        -
          name: id
          in: path
          description: 'KelompokMaster id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kelompoks:
    get:
      tags:
        - Kelompok
      summary: 'Find list Kelompok'
      description: 'Returns list of Kelompok'
      operationId: getKelompok
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kelompok' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kelompok' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Kelompok' } }
                type: object
        '404':
          description: 'Kelompok not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Kelompok
      summary: 'Add a new Kelompok to the store'
      operationId: addKelompok
      requestBody:
        $ref: '#/components/requestBodies/Kelompok'
      responses:
        '201':
          description: 'Created Kelompok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kelompok'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kelompok'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kelompoks/{id}':
    get:
      tags:
        - Kelompok
      summary: 'Find Kelompok by ID'
      description: 'Returns a single Kelompok'
      operationId: getKelompokById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Kelompok to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kelompok'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kelompok'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Kelompok not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Kelompok
      summary: 'Update an existing Kelompok'
      operationId: updateKelompok
      parameters:
        -
          name: id
          in: path
          description: 'Kelompok id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Kelompok'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Kelompok not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Kelompok
      summary: 'Deletes a Kelompok'
      operationId: deleteKelompok
      parameters:
        -
          name: id
          in: path
          description: 'Kelompok id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keluargaAktifs:
    get:
      tags:
        - KeluargaAktif
      summary: 'Find list KeluargaAktif'
      description: 'Returns list of KeluargaAktif'
      operationId: getKeluargaAktif
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeluargaAktif' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeluargaAktif' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeluargaAktif' } }
                type: object
        '404':
          description: 'KeluargaAktif not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeluargaAktif
      summary: 'Add a new KeluargaAktif to the store'
      operationId: addKeluargaAktif
      requestBody:
        $ref: '#/components/requestBodies/KeluargaAktif'
      responses:
        '201':
          description: 'Created KeluargaAktif'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeluargaAktif'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeluargaAktif'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keluargaAktifs/{id}':
    get:
      tags:
        - KeluargaAktif
      summary: 'Find KeluargaAktif by ID'
      description: 'Returns a single KeluargaAktif'
      operationId: getKeluargaAktifById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeluargaAktif to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeluargaAktif'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeluargaAktif'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeluargaAktif not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeluargaAktif
      summary: 'Update an existing KeluargaAktif'
      operationId: updateKeluargaAktif
      parameters:
        -
          name: id
          in: path
          description: 'KeluargaAktif id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeluargaAktif'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeluargaAktif not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeluargaAktif
      summary: 'Deletes a KeluargaAktif'
      operationId: deleteKeluargaAktif
      parameters:
        -
          name: id
          in: path
          description: 'KeluargaAktif id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganMasters:
    get:
      tags:
        - KeuanganMaster
      summary: 'Find list KeuanganMaster'
      description: 'Returns list of KeuanganMaster'
      operationId: getKeuanganMaster
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganMaster' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganMaster' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganMaster' } }
                type: object
        '404':
          description: 'KeuanganMaster not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganMaster
      summary: 'Add a new KeuanganMaster to the store'
      operationId: addKeuanganMaster
      requestBody:
        $ref: '#/components/requestBodies/KeuanganMaster'
      responses:
        '201':
          description: 'Created KeuanganMaster'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganMaster'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganMasters/{id}':
    get:
      tags:
        - KeuanganMaster
      summary: 'Find KeuanganMaster by ID'
      description: 'Returns a single KeuanganMaster'
      operationId: getKeuanganMasterById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganMaster to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganMaster'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganMaster'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganMaster not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganMaster
      summary: 'Update an existing KeuanganMaster'
      operationId: updateKeuanganMaster
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganMaster id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganMaster'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganMaster not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganMaster
      summary: 'Deletes a KeuanganMaster'
      operationId: deleteKeuanganMaster
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganMaster id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefBankDesas:
    get:
      tags:
        - KeuanganRefBankDesa
      summary: 'Find list KeuanganRefBankDesa'
      description: 'Returns list of KeuanganRefBankDesa'
      operationId: getKeuanganRefBankDesa
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBankDesa' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBankDesa' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBankDesa' } }
                type: object
        '404':
          description: 'KeuanganRefBankDesa not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefBankDesa
      summary: 'Add a new KeuanganRefBankDesa to the store'
      operationId: addKeuanganRefBankDesa
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBankDesa'
      responses:
        '201':
          description: 'Created KeuanganRefBankDesa'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBankDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBankDesa'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefBankDesas/{id}':
    get:
      tags:
        - KeuanganRefBankDesa
      summary: 'Find KeuanganRefBankDesa by ID'
      description: 'Returns a single KeuanganRefBankDesa'
      operationId: getKeuanganRefBankDesaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefBankDesa to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBankDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBankDesa'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefBankDesa not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefBankDesa
      summary: 'Update an existing KeuanganRefBankDesa'
      operationId: updateKeuanganRefBankDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBankDesa id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBankDesa'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefBankDesa not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefBankDesa
      summary: 'Deletes a KeuanganRefBankDesa'
      operationId: deleteKeuanganRefBankDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBankDesa id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefBelOperasionals:
    get:
      tags:
        - KeuanganRefBelOperasional
      summary: 'Find list KeuanganRefBelOperasional'
      description: 'Returns list of KeuanganRefBelOperasional'
      operationId: getKeuanganRefBelOperasional
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBelOperasional' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBelOperasional' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBelOperasional' } }
                type: object
        '404':
          description: 'KeuanganRefBelOperasional not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefBelOperasional
      summary: 'Add a new KeuanganRefBelOperasional to the store'
      operationId: addKeuanganRefBelOperasional
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBelOperasional'
      responses:
        '201':
          description: 'Created KeuanganRefBelOperasional'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBelOperasional'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBelOperasional'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefBelOperasionals/{id}':
    get:
      tags:
        - KeuanganRefBelOperasional
      summary: 'Find KeuanganRefBelOperasional by ID'
      description: 'Returns a single KeuanganRefBelOperasional'
      operationId: getKeuanganRefBelOperasionalById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefBelOperasional to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBelOperasional'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBelOperasional'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefBelOperasional not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefBelOperasional
      summary: 'Update an existing KeuanganRefBelOperasional'
      operationId: updateKeuanganRefBelOperasional
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBelOperasional id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBelOperasional'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefBelOperasional not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefBelOperasional
      summary: 'Deletes a KeuanganRefBelOperasional'
      operationId: deleteKeuanganRefBelOperasional
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBelOperasional id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefBidangs:
    get:
      tags:
        - KeuanganRefBidang
      summary: 'Find list KeuanganRefBidang'
      description: 'Returns list of KeuanganRefBidang'
      operationId: getKeuanganRefBidang
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBidang' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBidang' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBidang' } }
                type: object
        '404':
          description: 'KeuanganRefBidang not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefBidang
      summary: 'Add a new KeuanganRefBidang to the store'
      operationId: addKeuanganRefBidang
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBidang'
      responses:
        '201':
          description: 'Created KeuanganRefBidang'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBidang'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefBidangs/{id}':
    get:
      tags:
        - KeuanganRefBidang
      summary: 'Find KeuanganRefBidang by ID'
      description: 'Returns a single KeuanganRefBidang'
      operationId: getKeuanganRefBidangById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefBidang to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBidang'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefBidang not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefBidang
      summary: 'Update an existing KeuanganRefBidang'
      operationId: updateKeuanganRefBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBidang id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBidang'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefBidang not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefBidang
      summary: 'Deletes a KeuanganRefBidang'
      operationId: deleteKeuanganRefBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBidang id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefBungas:
    get:
      tags:
        - KeuanganRefBunga
      summary: 'Find list KeuanganRefBunga'
      description: 'Returns list of KeuanganRefBunga'
      operationId: getKeuanganRefBunga
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBunga' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBunga' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefBunga' } }
                type: object
        '404':
          description: 'KeuanganRefBunga not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefBunga
      summary: 'Add a new KeuanganRefBunga to the store'
      operationId: addKeuanganRefBunga
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBunga'
      responses:
        '201':
          description: 'Created KeuanganRefBunga'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBunga'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBunga'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefBungas/{id}':
    get:
      tags:
        - KeuanganRefBunga
      summary: 'Find KeuanganRefBunga by ID'
      description: 'Returns a single KeuanganRefBunga'
      operationId: getKeuanganRefBungaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefBunga to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefBunga'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefBunga'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefBunga not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefBunga
      summary: 'Update an existing KeuanganRefBunga'
      operationId: updateKeuanganRefBunga
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBunga id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefBunga'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefBunga not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefBunga
      summary: 'Deletes a KeuanganRefBunga'
      operationId: deleteKeuanganRefBunga
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefBunga id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefDesas:
    get:
      tags:
        - KeuanganRefDesa
      summary: 'Find list KeuanganRefDesa'
      description: 'Returns list of KeuanganRefDesa'
      operationId: getKeuanganRefDesa
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefDesa' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefDesa' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefDesa' } }
                type: object
        '404':
          description: 'KeuanganRefDesa not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefDesa
      summary: 'Add a new KeuanganRefDesa to the store'
      operationId: addKeuanganRefDesa
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefDesa'
      responses:
        '201':
          description: 'Created KeuanganRefDesa'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefDesa'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefDesas/{id}':
    get:
      tags:
        - KeuanganRefDesa
      summary: 'Find KeuanganRefDesa by ID'
      description: 'Returns a single KeuanganRefDesa'
      operationId: getKeuanganRefDesaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefDesa to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefDesa'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefDesa not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefDesa
      summary: 'Update an existing KeuanganRefDesa'
      operationId: updateKeuanganRefDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefDesa id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefDesa'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefDesa not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefDesa
      summary: 'Deletes a KeuanganRefDesa'
      operationId: deleteKeuanganRefDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefDesa id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefKecamatans:
    get:
      tags:
        - KeuanganRefKecamatan
      summary: 'Find list KeuanganRefKecamatan'
      description: 'Returns list of KeuanganRefKecamatan'
      operationId: getKeuanganRefKecamatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKecamatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKecamatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKecamatan' } }
                type: object
        '404':
          description: 'KeuanganRefKecamatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefKecamatan
      summary: 'Add a new KeuanganRefKecamatan to the store'
      operationId: addKeuanganRefKecamatan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKecamatan'
      responses:
        '201':
          description: 'Created KeuanganRefKecamatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKecamatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKecamatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefKecamatans/{id}':
    get:
      tags:
        - KeuanganRefKecamatan
      summary: 'Find KeuanganRefKecamatan by ID'
      description: 'Returns a single KeuanganRefKecamatan'
      operationId: getKeuanganRefKecamatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefKecamatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKecamatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKecamatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefKecamatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefKecamatan
      summary: 'Update an existing KeuanganRefKecamatan'
      operationId: updateKeuanganRefKecamatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKecamatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKecamatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefKecamatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefKecamatan
      summary: 'Deletes a KeuanganRefKecamatan'
      operationId: deleteKeuanganRefKecamatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKecamatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefKegiatans:
    get:
      tags:
        - KeuanganRefKegiatan
      summary: 'Find list KeuanganRefKegiatan'
      description: 'Returns list of KeuanganRefKegiatan'
      operationId: getKeuanganRefKegiatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKegiatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKegiatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKegiatan' } }
                type: object
        '404':
          description: 'KeuanganRefKegiatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefKegiatan
      summary: 'Add a new KeuanganRefKegiatan to the store'
      operationId: addKeuanganRefKegiatan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKegiatan'
      responses:
        '201':
          description: 'Created KeuanganRefKegiatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKegiatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefKegiatans/{id}':
    get:
      tags:
        - KeuanganRefKegiatan
      summary: 'Find KeuanganRefKegiatan by ID'
      description: 'Returns a single KeuanganRefKegiatan'
      operationId: getKeuanganRefKegiatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefKegiatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKegiatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefKegiatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefKegiatan
      summary: 'Update an existing KeuanganRefKegiatan'
      operationId: updateKeuanganRefKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKegiatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKegiatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefKegiatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefKegiatan
      summary: 'Deletes a KeuanganRefKegiatan'
      operationId: deleteKeuanganRefKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKegiatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefKorolaris:
    get:
      tags:
        - KeuanganRefKorolari
      summary: 'Find list KeuanganRefKorolari'
      description: 'Returns list of KeuanganRefKorolari'
      operationId: getKeuanganRefKorolari
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKorolari' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKorolari' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefKorolari' } }
                type: object
        '404':
          description: 'KeuanganRefKorolari not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefKorolari
      summary: 'Add a new KeuanganRefKorolari to the store'
      operationId: addKeuanganRefKorolari
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKorolari'
      responses:
        '201':
          description: 'Created KeuanganRefKorolari'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKorolari'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKorolari'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefKorolaris/{id}':
    get:
      tags:
        - KeuanganRefKorolari
      summary: 'Find KeuanganRefKorolari by ID'
      description: 'Returns a single KeuanganRefKorolari'
      operationId: getKeuanganRefKorolariById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefKorolari to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefKorolari'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefKorolari'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefKorolari not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefKorolari
      summary: 'Update an existing KeuanganRefKorolari'
      operationId: updateKeuanganRefKorolari
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKorolari id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefKorolari'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefKorolari not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefKorolari
      summary: 'Deletes a KeuanganRefKorolari'
      operationId: deleteKeuanganRefKorolari
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefKorolari id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefNeracaCloses:
    get:
      tags:
        - KeuanganRefNeracaClose
      summary: 'Find list KeuanganRefNeracaClose'
      description: 'Returns list of KeuanganRefNeracaClose'
      operationId: getKeuanganRefNeracaClose
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefNeracaClose' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefNeracaClose' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefNeracaClose' } }
                type: object
        '404':
          description: 'KeuanganRefNeracaClose not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefNeracaClose
      summary: 'Add a new KeuanganRefNeracaClose to the store'
      operationId: addKeuanganRefNeracaClose
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefNeracaClose'
      responses:
        '201':
          description: 'Created KeuanganRefNeracaClose'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefNeracaClose'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefNeracaClose'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefNeracaCloses/{id}':
    get:
      tags:
        - KeuanganRefNeracaClose
      summary: 'Find KeuanganRefNeracaClose by ID'
      description: 'Returns a single KeuanganRefNeracaClose'
      operationId: getKeuanganRefNeracaCloseById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefNeracaClose to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefNeracaClose'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefNeracaClose'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefNeracaClose not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefNeracaClose
      summary: 'Update an existing KeuanganRefNeracaClose'
      operationId: updateKeuanganRefNeracaClose
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefNeracaClose id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefNeracaClose'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefNeracaClose not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefNeracaClose
      summary: 'Deletes a KeuanganRefNeracaClose'
      operationId: deleteKeuanganRefNeracaClose
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefNeracaClose id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefPerangkats:
    get:
      tags:
        - KeuanganRefPerangkat
      summary: 'Find list KeuanganRefPerangkat'
      description: 'Returns list of KeuanganRefPerangkat'
      operationId: getKeuanganRefPerangkat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPerangkat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPerangkat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPerangkat' } }
                type: object
        '404':
          description: 'KeuanganRefPerangkat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefPerangkat
      summary: 'Add a new KeuanganRefPerangkat to the store'
      operationId: addKeuanganRefPerangkat
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefPerangkat'
      responses:
        '201':
          description: 'Created KeuanganRefPerangkat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefPerangkat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefPerangkat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefPerangkats/{id}':
    get:
      tags:
        - KeuanganRefPerangkat
      summary: 'Find KeuanganRefPerangkat by ID'
      description: 'Returns a single KeuanganRefPerangkat'
      operationId: getKeuanganRefPerangkatById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefPerangkat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefPerangkat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefPerangkat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefPerangkat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefPerangkat
      summary: 'Update an existing KeuanganRefPerangkat'
      operationId: updateKeuanganRefPerangkat
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefPerangkat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefPerangkat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefPerangkat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefPerangkat
      summary: 'Deletes a KeuanganRefPerangkat'
      operationId: deleteKeuanganRefPerangkat
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefPerangkat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefPotongans:
    get:
      tags:
        - KeuanganRefPotongan
      summary: 'Find list KeuanganRefPotongan'
      description: 'Returns list of KeuanganRefPotongan'
      operationId: getKeuanganRefPotongan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPotongan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPotongan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefPotongan' } }
                type: object
        '404':
          description: 'KeuanganRefPotongan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefPotongan
      summary: 'Add a new KeuanganRefPotongan to the store'
      operationId: addKeuanganRefPotongan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefPotongan'
      responses:
        '201':
          description: 'Created KeuanganRefPotongan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefPotongan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefPotongan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefPotongans/{id}':
    get:
      tags:
        - KeuanganRefPotongan
      summary: 'Find KeuanganRefPotongan by ID'
      description: 'Returns a single KeuanganRefPotongan'
      operationId: getKeuanganRefPotonganById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefPotongan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefPotongan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefPotongan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefPotongan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefPotongan
      summary: 'Update an existing KeuanganRefPotongan'
      operationId: updateKeuanganRefPotongan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefPotongan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefPotongan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefPotongan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefPotongan
      summary: 'Deletes a KeuanganRefPotongan'
      operationId: deleteKeuanganRefPotongan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefPotongan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefRek1s:
    get:
      tags:
        - KeuanganRefRek1
      summary: 'Find list KeuanganRefRek1'
      description: 'Returns list of KeuanganRefRek1'
      operationId: getKeuanganRefRek1
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek1' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek1' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek1' } }
                type: object
        '404':
          description: 'KeuanganRefRek1 not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefRek1
      summary: 'Add a new KeuanganRefRek1 to the store'
      operationId: addKeuanganRefRek1
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek1'
      responses:
        '201':
          description: 'Created KeuanganRefRek1'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek1'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek1'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefRek1s/{id}':
    get:
      tags:
        - KeuanganRefRek1
      summary: 'Find KeuanganRefRek1 by ID'
      description: 'Returns a single KeuanganRefRek1'
      operationId: getKeuanganRefRek1ById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefRek1 to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek1'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek1'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefRek1 not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefRek1
      summary: 'Update an existing KeuanganRefRek1'
      operationId: updateKeuanganRefRek1
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek1 id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek1'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefRek1 not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefRek1
      summary: 'Deletes a KeuanganRefRek1'
      operationId: deleteKeuanganRefRek1
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek1 id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefRek2s:
    get:
      tags:
        - KeuanganRefRek2
      summary: 'Find list KeuanganRefRek2'
      description: 'Returns list of KeuanganRefRek2'
      operationId: getKeuanganRefRek2
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek2' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek2' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek2' } }
                type: object
        '404':
          description: 'KeuanganRefRek2 not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefRek2
      summary: 'Add a new KeuanganRefRek2 to the store'
      operationId: addKeuanganRefRek2
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek2'
      responses:
        '201':
          description: 'Created KeuanganRefRek2'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek2'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek2'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefRek2s/{id}':
    get:
      tags:
        - KeuanganRefRek2
      summary: 'Find KeuanganRefRek2 by ID'
      description: 'Returns a single KeuanganRefRek2'
      operationId: getKeuanganRefRek2ById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefRek2 to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek2'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek2'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefRek2 not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefRek2
      summary: 'Update an existing KeuanganRefRek2'
      operationId: updateKeuanganRefRek2
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek2 id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek2'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefRek2 not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefRek2
      summary: 'Deletes a KeuanganRefRek2'
      operationId: deleteKeuanganRefRek2
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek2 id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefRek3s:
    get:
      tags:
        - KeuanganRefRek3
      summary: 'Find list KeuanganRefRek3'
      description: 'Returns list of KeuanganRefRek3'
      operationId: getKeuanganRefRek3
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek3' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek3' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek3' } }
                type: object
        '404':
          description: 'KeuanganRefRek3 not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefRek3
      summary: 'Add a new KeuanganRefRek3 to the store'
      operationId: addKeuanganRefRek3
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek3'
      responses:
        '201':
          description: 'Created KeuanganRefRek3'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek3'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek3'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefRek3s/{id}':
    get:
      tags:
        - KeuanganRefRek3
      summary: 'Find KeuanganRefRek3 by ID'
      description: 'Returns a single KeuanganRefRek3'
      operationId: getKeuanganRefRek3ById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefRek3 to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek3'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek3'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefRek3 not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefRek3
      summary: 'Update an existing KeuanganRefRek3'
      operationId: updateKeuanganRefRek3
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek3 id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek3'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefRek3 not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefRek3
      summary: 'Deletes a KeuanganRefRek3'
      operationId: deleteKeuanganRefRek3
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek3 id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefRek4s:
    get:
      tags:
        - KeuanganRefRek4
      summary: 'Find list KeuanganRefRek4'
      description: 'Returns list of KeuanganRefRek4'
      operationId: getKeuanganRefRek4
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek4' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek4' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefRek4' } }
                type: object
        '404':
          description: 'KeuanganRefRek4 not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefRek4
      summary: 'Add a new KeuanganRefRek4 to the store'
      operationId: addKeuanganRefRek4
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek4'
      responses:
        '201':
          description: 'Created KeuanganRefRek4'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek4'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek4'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefRek4s/{id}':
    get:
      tags:
        - KeuanganRefRek4
      summary: 'Find KeuanganRefRek4 by ID'
      description: 'Returns a single KeuanganRefRek4'
      operationId: getKeuanganRefRek4ById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefRek4 to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek4'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefRek4'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefRek4 not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefRek4
      summary: 'Update an existing KeuanganRefRek4'
      operationId: updateKeuanganRefRek4
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek4 id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefRek4'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefRek4 not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefRek4
      summary: 'Deletes a KeuanganRefRek4'
      operationId: deleteKeuanganRefRek4
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefRek4 id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefSbus:
    get:
      tags:
        - KeuanganRefSbu
      summary: 'Find list KeuanganRefSbu'
      description: 'Returns list of KeuanganRefSbu'
      operationId: getKeuanganRefSbu
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSbu' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSbu' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSbu' } }
                type: object
        '404':
          description: 'KeuanganRefSbu not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefSbu
      summary: 'Add a new KeuanganRefSbu to the store'
      operationId: addKeuanganRefSbu
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefSbu'
      responses:
        '201':
          description: 'Created KeuanganRefSbu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefSbu'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefSbu'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefSbus/{id}':
    get:
      tags:
        - KeuanganRefSbu
      summary: 'Find KeuanganRefSbu by ID'
      description: 'Returns a single KeuanganRefSbu'
      operationId: getKeuanganRefSbuById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefSbu to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefSbu'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefSbu'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefSbu not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefSbu
      summary: 'Update an existing KeuanganRefSbu'
      operationId: updateKeuanganRefSbu
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefSbu id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefSbu'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefSbu not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefSbu
      summary: 'Deletes a KeuanganRefSbu'
      operationId: deleteKeuanganRefSbu
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefSbu id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganRefSumbers:
    get:
      tags:
        - KeuanganRefSumber
      summary: 'Find list KeuanganRefSumber'
      description: 'Returns list of KeuanganRefSumber'
      operationId: getKeuanganRefSumber
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSumber' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSumber' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganRefSumber' } }
                type: object
        '404':
          description: 'KeuanganRefSumber not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganRefSumber
      summary: 'Add a new KeuanganRefSumber to the store'
      operationId: addKeuanganRefSumber
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefSumber'
      responses:
        '201':
          description: 'Created KeuanganRefSumber'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefSumber'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefSumber'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganRefSumbers/{id}':
    get:
      tags:
        - KeuanganRefSumber
      summary: 'Find KeuanganRefSumber by ID'
      description: 'Returns a single KeuanganRefSumber'
      operationId: getKeuanganRefSumberById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganRefSumber to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganRefSumber'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganRefSumber'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganRefSumber not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganRefSumber
      summary: 'Update an existing KeuanganRefSumber'
      operationId: updateKeuanganRefSumber
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefSumber id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganRefSumber'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganRefSumber not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganRefSumber
      summary: 'Deletes a KeuanganRefSumber'
      operationId: deleteKeuanganRefSumber
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganRefSumber id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaAnggaranLogs:
    get:
      tags:
        - KeuanganTaAnggaranLog
      summary: 'Find list KeuanganTaAnggaranLog'
      description: 'Returns list of KeuanganTaAnggaranLog'
      operationId: getKeuanganTaAnggaranLog
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranLog' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranLog' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranLog' } }
                type: object
        '404':
          description: 'KeuanganTaAnggaranLog not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaAnggaranLog
      summary: 'Add a new KeuanganTaAnggaranLog to the store'
      operationId: addKeuanganTaAnggaranLog
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaranLog'
      responses:
        '201':
          description: 'Created KeuanganTaAnggaranLog'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranLog'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranLog'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaAnggaranLogs/{id}':
    get:
      tags:
        - KeuanganTaAnggaranLog
      summary: 'Find KeuanganTaAnggaranLog by ID'
      description: 'Returns a single KeuanganTaAnggaranLog'
      operationId: getKeuanganTaAnggaranLogById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaAnggaranLog to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranLog'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranLog'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaAnggaranLog not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaAnggaranLog
      summary: 'Update an existing KeuanganTaAnggaranLog'
      operationId: updateKeuanganTaAnggaranLog
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaranLog id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaranLog'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaAnggaranLog not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaAnggaranLog
      summary: 'Deletes a KeuanganTaAnggaranLog'
      operationId: deleteKeuanganTaAnggaranLog
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaranLog id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaAnggaranRincis:
    get:
      tags:
        - KeuanganTaAnggaranRinci
      summary: 'Find list KeuanganTaAnggaranRinci'
      description: 'Returns list of KeuanganTaAnggaranRinci'
      operationId: getKeuanganTaAnggaranRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaranRinci' } }
                type: object
        '404':
          description: 'KeuanganTaAnggaranRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaAnggaranRinci
      summary: 'Add a new KeuanganTaAnggaranRinci to the store'
      operationId: addKeuanganTaAnggaranRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaranRinci'
      responses:
        '201':
          description: 'Created KeuanganTaAnggaranRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaAnggaranRincis/{id}':
    get:
      tags:
        - KeuanganTaAnggaranRinci
      summary: 'Find KeuanganTaAnggaranRinci by ID'
      description: 'Returns a single KeuanganTaAnggaranRinci'
      operationId: getKeuanganTaAnggaranRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaAnggaranRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaAnggaranRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaAnggaranRinci
      summary: 'Update an existing KeuanganTaAnggaranRinci'
      operationId: updateKeuanganTaAnggaranRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaranRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaranRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaAnggaranRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaAnggaranRinci
      summary: 'Deletes a KeuanganTaAnggaranRinci'
      operationId: deleteKeuanganTaAnggaranRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaranRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaAnggarans:
    get:
      tags:
        - KeuanganTaAnggaran
      summary: 'Find list KeuanganTaAnggaran'
      description: 'Returns list of KeuanganTaAnggaran'
      operationId: getKeuanganTaAnggaran
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaran' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaran' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaAnggaran' } }
                type: object
        '404':
          description: 'KeuanganTaAnggaran not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaAnggaran
      summary: 'Add a new KeuanganTaAnggaran to the store'
      operationId: addKeuanganTaAnggaran
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaran'
      responses:
        '201':
          description: 'Created KeuanganTaAnggaran'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaran'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaran'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaAnggarans/{id}':
    get:
      tags:
        - KeuanganTaAnggaran
      summary: 'Find KeuanganTaAnggaran by ID'
      description: 'Returns a single KeuanganTaAnggaran'
      operationId: getKeuanganTaAnggaranById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaAnggaran to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaran'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaAnggaran'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaAnggaran not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaAnggaran
      summary: 'Update an existing KeuanganTaAnggaran'
      operationId: updateKeuanganTaAnggaran
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaran id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaAnggaran'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaAnggaran not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaAnggaran
      summary: 'Deletes a KeuanganTaAnggaran'
      operationId: deleteKeuanganTaAnggaran
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaAnggaran id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaBidangs:
    get:
      tags:
        - KeuanganTaBidang
      summary: 'Find list KeuanganTaBidang'
      description: 'Returns list of KeuanganTaBidang'
      operationId: getKeuanganTaBidang
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaBidang' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaBidang' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaBidang' } }
                type: object
        '404':
          description: 'KeuanganTaBidang not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaBidang
      summary: 'Add a new KeuanganTaBidang to the store'
      operationId: addKeuanganTaBidang
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaBidang'
      responses:
        '201':
          description: 'Created KeuanganTaBidang'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaBidang'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaBidangs/{id}':
    get:
      tags:
        - KeuanganTaBidang
      summary: 'Find KeuanganTaBidang by ID'
      description: 'Returns a single KeuanganTaBidang'
      operationId: getKeuanganTaBidangById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaBidang to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaBidang'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaBidang not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaBidang
      summary: 'Update an existing KeuanganTaBidang'
      operationId: updateKeuanganTaBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaBidang id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaBidang'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaBidang not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaBidang
      summary: 'Deletes a KeuanganTaBidang'
      operationId: deleteKeuanganTaBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaBidang id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaDesas:
    get:
      tags:
        - KeuanganTaDesa
      summary: 'Find list KeuanganTaDesa'
      description: 'Returns list of KeuanganTaDesa'
      operationId: getKeuanganTaDesa
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaDesa' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaDesa' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaDesa' } }
                type: object
        '404':
          description: 'KeuanganTaDesa not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaDesa
      summary: 'Add a new KeuanganTaDesa to the store'
      operationId: addKeuanganTaDesa
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaDesa'
      responses:
        '201':
          description: 'Created KeuanganTaDesa'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaDesa'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaDesas/{id}':
    get:
      tags:
        - KeuanganTaDesa
      summary: 'Find KeuanganTaDesa by ID'
      description: 'Returns a single KeuanganTaDesa'
      operationId: getKeuanganTaDesaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaDesa to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaDesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaDesa'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaDesa not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaDesa
      summary: 'Update an existing KeuanganTaDesa'
      operationId: updateKeuanganTaDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaDesa id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaDesa'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaDesa not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaDesa
      summary: 'Deletes a KeuanganTaDesa'
      operationId: deleteKeuanganTaDesa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaDesa id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaJurnalUmumRincis:
    get:
      tags:
        - KeuanganTaJurnalUmumRinci
      summary: 'Find list KeuanganTaJurnalUmumRinci'
      description: 'Returns list of KeuanganTaJurnalUmumRinci'
      operationId: getKeuanganTaJurnalUmumRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci' } }
                type: object
        '404':
          description: 'KeuanganTaJurnalUmumRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaJurnalUmumRinci
      summary: 'Add a new KeuanganTaJurnalUmumRinci to the store'
      operationId: addKeuanganTaJurnalUmumRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaJurnalUmumRinci'
      responses:
        '201':
          description: 'Created KeuanganTaJurnalUmumRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaJurnalUmumRincis/{id}':
    get:
      tags:
        - KeuanganTaJurnalUmumRinci
      summary: 'Find KeuanganTaJurnalUmumRinci by ID'
      description: 'Returns a single KeuanganTaJurnalUmumRinci'
      operationId: getKeuanganTaJurnalUmumRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaJurnalUmumRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaJurnalUmumRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaJurnalUmumRinci
      summary: 'Update an existing KeuanganTaJurnalUmumRinci'
      operationId: updateKeuanganTaJurnalUmumRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaJurnalUmumRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaJurnalUmumRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaJurnalUmumRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaJurnalUmumRinci
      summary: 'Deletes a KeuanganTaJurnalUmumRinci'
      operationId: deleteKeuanganTaJurnalUmumRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaJurnalUmumRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaJurnalUmums:
    get:
      tags:
        - KeuanganTaJurnalUmum
      summary: 'Find list KeuanganTaJurnalUmum'
      description: 'Returns list of KeuanganTaJurnalUmum'
      operationId: getKeuanganTaJurnalUmum
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmum' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmum' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaJurnalUmum' } }
                type: object
        '404':
          description: 'KeuanganTaJurnalUmum not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaJurnalUmum
      summary: 'Add a new KeuanganTaJurnalUmum to the store'
      operationId: addKeuanganTaJurnalUmum
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaJurnalUmum'
      responses:
        '201':
          description: 'Created KeuanganTaJurnalUmum'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmum'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmum'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaJurnalUmums/{id}':
    get:
      tags:
        - KeuanganTaJurnalUmum
      summary: 'Find KeuanganTaJurnalUmum by ID'
      description: 'Returns a single KeuanganTaJurnalUmum'
      operationId: getKeuanganTaJurnalUmumById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaJurnalUmum to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmum'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaJurnalUmum'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaJurnalUmum not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaJurnalUmum
      summary: 'Update an existing KeuanganTaJurnalUmum'
      operationId: updateKeuanganTaJurnalUmum
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaJurnalUmum id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaJurnalUmum'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaJurnalUmum not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaJurnalUmum
      summary: 'Deletes a KeuanganTaJurnalUmum'
      operationId: deleteKeuanganTaJurnalUmum
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaJurnalUmum id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaKegiatans:
    get:
      tags:
        - KeuanganTaKegiatan
      summary: 'Find list KeuanganTaKegiatan'
      description: 'Returns list of KeuanganTaKegiatan'
      operationId: getKeuanganTaKegiatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaKegiatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaKegiatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaKegiatan' } }
                type: object
        '404':
          description: 'KeuanganTaKegiatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaKegiatan
      summary: 'Add a new KeuanganTaKegiatan to the store'
      operationId: addKeuanganTaKegiatan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaKegiatan'
      responses:
        '201':
          description: 'Created KeuanganTaKegiatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaKegiatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaKegiatans/{id}':
    get:
      tags:
        - KeuanganTaKegiatan
      summary: 'Find KeuanganTaKegiatan by ID'
      description: 'Returns a single KeuanganTaKegiatan'
      operationId: getKeuanganTaKegiatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaKegiatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaKegiatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaKegiatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaKegiatan
      summary: 'Update an existing KeuanganTaKegiatan'
      operationId: updateKeuanganTaKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaKegiatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaKegiatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaKegiatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaKegiatan
      summary: 'Deletes a KeuanganTaKegiatan'
      operationId: deleteKeuanganTaKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaKegiatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaMutasis:
    get:
      tags:
        - KeuanganTaMutasi
      summary: 'Find list KeuanganTaMutasi'
      description: 'Returns list of KeuanganTaMutasi'
      operationId: getKeuanganTaMutasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaMutasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaMutasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaMutasi' } }
                type: object
        '404':
          description: 'KeuanganTaMutasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaMutasi
      summary: 'Add a new KeuanganTaMutasi to the store'
      operationId: addKeuanganTaMutasi
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaMutasi'
      responses:
        '201':
          description: 'Created KeuanganTaMutasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaMutasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaMutasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaMutasis/{id}':
    get:
      tags:
        - KeuanganTaMutasi
      summary: 'Find KeuanganTaMutasi by ID'
      description: 'Returns a single KeuanganTaMutasi'
      operationId: getKeuanganTaMutasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaMutasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaMutasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaMutasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaMutasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaMutasi
      summary: 'Update an existing KeuanganTaMutasi'
      operationId: updateKeuanganTaMutasi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaMutasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaMutasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaMutasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaMutasi
      summary: 'Deletes a KeuanganTaMutasi'
      operationId: deleteKeuanganTaMutasi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaMutasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaPajakRincis:
    get:
      tags:
        - KeuanganTaPajakRinci
      summary: 'Find list KeuanganTaPajakRinci'
      description: 'Returns list of KeuanganTaPajakRinci'
      operationId: getKeuanganTaPajakRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajakRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajakRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajakRinci' } }
                type: object
        '404':
          description: 'KeuanganTaPajakRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaPajakRinci
      summary: 'Add a new KeuanganTaPajakRinci to the store'
      operationId: addKeuanganTaPajakRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPajakRinci'
      responses:
        '201':
          description: 'Created KeuanganTaPajakRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajakRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajakRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaPajakRincis/{id}':
    get:
      tags:
        - KeuanganTaPajakRinci
      summary: 'Find KeuanganTaPajakRinci by ID'
      description: 'Returns a single KeuanganTaPajakRinci'
      operationId: getKeuanganTaPajakRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaPajakRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajakRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajakRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaPajakRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaPajakRinci
      summary: 'Update an existing KeuanganTaPajakRinci'
      operationId: updateKeuanganTaPajakRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPajakRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPajakRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaPajakRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaPajakRinci
      summary: 'Deletes a KeuanganTaPajakRinci'
      operationId: deleteKeuanganTaPajakRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPajakRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaPajaks:
    get:
      tags:
        - KeuanganTaPajak
      summary: 'Find list KeuanganTaPajak'
      description: 'Returns list of KeuanganTaPajak'
      operationId: getKeuanganTaPajak
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajak' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajak' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPajak' } }
                type: object
        '404':
          description: 'KeuanganTaPajak not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaPajak
      summary: 'Add a new KeuanganTaPajak to the store'
      operationId: addKeuanganTaPajak
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPajak'
      responses:
        '201':
          description: 'Created KeuanganTaPajak'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajak'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajak'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaPajaks/{id}':
    get:
      tags:
        - KeuanganTaPajak
      summary: 'Find KeuanganTaPajak by ID'
      description: 'Returns a single KeuanganTaPajak'
      operationId: getKeuanganTaPajakById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaPajak to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajak'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPajak'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaPajak not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaPajak
      summary: 'Update an existing KeuanganTaPajak'
      operationId: updateKeuanganTaPajak
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPajak id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPajak'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaPajak not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaPajak
      summary: 'Deletes a KeuanganTaPajak'
      operationId: deleteKeuanganTaPajak
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPajak id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaPemdas:
    get:
      tags:
        - KeuanganTaPemda
      summary: 'Find list KeuanganTaPemda'
      description: 'Returns list of KeuanganTaPemda'
      operationId: getKeuanganTaPemda
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPemda' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPemda' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPemda' } }
                type: object
        '404':
          description: 'KeuanganTaPemda not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaPemda
      summary: 'Add a new KeuanganTaPemda to the store'
      operationId: addKeuanganTaPemda
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPemda'
      responses:
        '201':
          description: 'Created KeuanganTaPemda'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPemda'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPemda'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaPemdas/{id}':
    get:
      tags:
        - KeuanganTaPemda
      summary: 'Find KeuanganTaPemda by ID'
      description: 'Returns a single KeuanganTaPemda'
      operationId: getKeuanganTaPemdaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaPemda to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPemda'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPemda'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaPemda not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaPemda
      summary: 'Update an existing KeuanganTaPemda'
      operationId: updateKeuanganTaPemda
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPemda id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPemda'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaPemda not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaPemda
      summary: 'Deletes a KeuanganTaPemda'
      operationId: deleteKeuanganTaPemda
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPemda id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaPencairans:
    get:
      tags:
        - KeuanganTaPencairan
      summary: 'Find list KeuanganTaPencairan'
      description: 'Returns list of KeuanganTaPencairan'
      operationId: getKeuanganTaPencairan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPencairan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPencairan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPencairan' } }
                type: object
        '404':
          description: 'KeuanganTaPencairan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaPencairan
      summary: 'Add a new KeuanganTaPencairan to the store'
      operationId: addKeuanganTaPencairan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPencairan'
      responses:
        '201':
          description: 'Created KeuanganTaPencairan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPencairan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPencairan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaPencairans/{id}':
    get:
      tags:
        - KeuanganTaPencairan
      summary: 'Find KeuanganTaPencairan by ID'
      description: 'Returns a single KeuanganTaPencairan'
      operationId: getKeuanganTaPencairanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaPencairan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPencairan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPencairan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaPencairan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaPencairan
      summary: 'Update an existing KeuanganTaPencairan'
      operationId: updateKeuanganTaPencairan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPencairan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPencairan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaPencairan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaPencairan
      summary: 'Deletes a KeuanganTaPencairan'
      operationId: deleteKeuanganTaPencairan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPencairan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaPerangkats:
    get:
      tags:
        - KeuanganTaPerangkat
      summary: 'Find list KeuanganTaPerangkat'
      description: 'Returns list of KeuanganTaPerangkat'
      operationId: getKeuanganTaPerangkat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPerangkat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPerangkat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaPerangkat' } }
                type: object
        '404':
          description: 'KeuanganTaPerangkat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaPerangkat
      summary: 'Add a new KeuanganTaPerangkat to the store'
      operationId: addKeuanganTaPerangkat
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPerangkat'
      responses:
        '201':
          description: 'Created KeuanganTaPerangkat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPerangkat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPerangkat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaPerangkats/{id}':
    get:
      tags:
        - KeuanganTaPerangkat
      summary: 'Find KeuanganTaPerangkat by ID'
      description: 'Returns a single KeuanganTaPerangkat'
      operationId: getKeuanganTaPerangkatById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaPerangkat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaPerangkat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaPerangkat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaPerangkat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaPerangkat
      summary: 'Update an existing KeuanganTaPerangkat'
      operationId: updateKeuanganTaPerangkat
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPerangkat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaPerangkat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaPerangkat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaPerangkat
      summary: 'Deletes a KeuanganTaPerangkat'
      operationId: deleteKeuanganTaPerangkat
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaPerangkat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRabRincis:
    get:
      tags:
        - KeuanganTaRabRinci
      summary: 'Find list KeuanganTaRabRinci'
      description: 'Returns list of KeuanganTaRabRinci'
      operationId: getKeuanganTaRabRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabRinci' } }
                type: object
        '404':
          description: 'KeuanganTaRabRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRabRinci
      summary: 'Add a new KeuanganTaRabRinci to the store'
      operationId: addKeuanganTaRabRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRabRinci'
      responses:
        '201':
          description: 'Created KeuanganTaRabRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRabRincis/{id}':
    get:
      tags:
        - KeuanganTaRabRinci
      summary: 'Find KeuanganTaRabRinci by ID'
      description: 'Returns a single KeuanganTaRabRinci'
      operationId: getKeuanganTaRabRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRabRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRabRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRabRinci
      summary: 'Update an existing KeuanganTaRabRinci'
      operationId: updateKeuanganTaRabRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRabRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRabRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRabRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRabRinci
      summary: 'Deletes a KeuanganTaRabRinci'
      operationId: deleteKeuanganTaRabRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRabRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRabSubs:
    get:
      tags:
        - KeuanganTaRabSub
      summary: 'Find list KeuanganTaRabSub'
      description: 'Returns list of KeuanganTaRabSub'
      operationId: getKeuanganTaRabSub
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabSub' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabSub' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRabSub' } }
                type: object
        '404':
          description: 'KeuanganTaRabSub not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRabSub
      summary: 'Add a new KeuanganTaRabSub to the store'
      operationId: addKeuanganTaRabSub
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRabSub'
      responses:
        '201':
          description: 'Created KeuanganTaRabSub'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabSub'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabSub'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRabSubs/{id}':
    get:
      tags:
        - KeuanganTaRabSub
      summary: 'Find KeuanganTaRabSub by ID'
      description: 'Returns a single KeuanganTaRabSub'
      operationId: getKeuanganTaRabSubById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRabSub to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabSub'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRabSub'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRabSub not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRabSub
      summary: 'Update an existing KeuanganTaRabSub'
      operationId: updateKeuanganTaRabSub
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRabSub id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRabSub'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRabSub not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRabSub
      summary: 'Deletes a KeuanganTaRabSub'
      operationId: deleteKeuanganTaRabSub
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRabSub id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRabs:
    get:
      tags:
        - KeuanganTaRab
      summary: 'Find list KeuanganTaRab'
      description: 'Returns list of KeuanganTaRab'
      operationId: getKeuanganTaRab
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRab' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRab' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRab' } }
                type: object
        '404':
          description: 'KeuanganTaRab not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRab
      summary: 'Add a new KeuanganTaRab to the store'
      operationId: addKeuanganTaRab
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRab'
      responses:
        '201':
          description: 'Created KeuanganTaRab'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRab'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRab'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRabs/{id}':
    get:
      tags:
        - KeuanganTaRab
      summary: 'Find KeuanganTaRab by ID'
      description: 'Returns a single KeuanganTaRab'
      operationId: getKeuanganTaRabById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRab to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRab'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRab'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRab not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRab
      summary: 'Update an existing KeuanganTaRab'
      operationId: updateKeuanganTaRab
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRab id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRab'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRab not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRab
      summary: 'Deletes a KeuanganTaRab'
      operationId: deleteKeuanganTaRab
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRab id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmBidangs:
    get:
      tags:
        - KeuanganTaRpjmBidang
      summary: 'Find list KeuanganTaRpjmBidang'
      description: 'Returns list of KeuanganTaRpjmBidang'
      operationId: getKeuanganTaRpjmBidang
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmBidang' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmBidang' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmBidang' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmBidang not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmBidang
      summary: 'Add a new KeuanganTaRpjmBidang to the store'
      operationId: addKeuanganTaRpjmBidang
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmBidang'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmBidang'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmBidang'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmBidangs/{id}':
    get:
      tags:
        - KeuanganTaRpjmBidang
      summary: 'Find KeuanganTaRpjmBidang by ID'
      description: 'Returns a single KeuanganTaRpjmBidang'
      operationId: getKeuanganTaRpjmBidangById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmBidang to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmBidang'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmBidang'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmBidang not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmBidang
      summary: 'Update an existing KeuanganTaRpjmBidang'
      operationId: updateKeuanganTaRpjmBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmBidang id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmBidang'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmBidang not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmBidang
      summary: 'Deletes a KeuanganTaRpjmBidang'
      operationId: deleteKeuanganTaRpjmBidang
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmBidang id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmKegiatans:
    get:
      tags:
        - KeuanganTaRpjmKegiatan
      summary: 'Find list KeuanganTaRpjmKegiatan'
      description: 'Returns list of KeuanganTaRpjmKegiatan'
      operationId: getKeuanganTaRpjmKegiatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmKegiatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmKegiatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmKegiatan' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmKegiatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmKegiatan
      summary: 'Add a new KeuanganTaRpjmKegiatan to the store'
      operationId: addKeuanganTaRpjmKegiatan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmKegiatan'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmKegiatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmKegiatans/{id}':
    get:
      tags:
        - KeuanganTaRpjmKegiatan
      summary: 'Find KeuanganTaRpjmKegiatan by ID'
      description: 'Returns a single KeuanganTaRpjmKegiatan'
      operationId: getKeuanganTaRpjmKegiatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmKegiatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmKegiatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmKegiatan
      summary: 'Update an existing KeuanganTaRpjmKegiatan'
      operationId: updateKeuanganTaRpjmKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmKegiatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmKegiatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmKegiatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmKegiatan
      summary: 'Deletes a KeuanganTaRpjmKegiatan'
      operationId: deleteKeuanganTaRpjmKegiatan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmKegiatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmMisis:
    get:
      tags:
        - KeuanganTaRpjmMisi
      summary: 'Find list KeuanganTaRpjmMisi'
      description: 'Returns list of KeuanganTaRpjmMisi'
      operationId: getKeuanganTaRpjmMisi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmMisi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmMisi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmMisi' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmMisi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmMisi
      summary: 'Add a new KeuanganTaRpjmMisi to the store'
      operationId: addKeuanganTaRpjmMisi
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmMisi'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmMisi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmMisi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmMisi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmMisis/{id}':
    get:
      tags:
        - KeuanganTaRpjmMisi
      summary: 'Find KeuanganTaRpjmMisi by ID'
      description: 'Returns a single KeuanganTaRpjmMisi'
      operationId: getKeuanganTaRpjmMisiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmMisi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmMisi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmMisi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmMisi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmMisi
      summary: 'Update an existing KeuanganTaRpjmMisi'
      operationId: updateKeuanganTaRpjmMisi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmMisi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmMisi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmMisi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmMisi
      summary: 'Deletes a KeuanganTaRpjmMisi'
      operationId: deleteKeuanganTaRpjmMisi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmMisi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmPaguIndikatifs:
    get:
      tags:
        - KeuanganTaRpjmPaguIndikatif
      summary: 'Find list KeuanganTaRpjmPaguIndikatif'
      description: 'Returns list of KeuanganTaRpjmPaguIndikatif'
      operationId: getKeuanganTaRpjmPaguIndikatif
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmPaguIndikatif not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmPaguIndikatif
      summary: 'Add a new KeuanganTaRpjmPaguIndikatif to the store'
      operationId: addKeuanganTaRpjmPaguIndikatif
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmPaguIndikatif'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmPaguIndikatif'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmPaguIndikatifs/{id}':
    get:
      tags:
        - KeuanganTaRpjmPaguIndikatif
      summary: 'Find KeuanganTaRpjmPaguIndikatif by ID'
      description: 'Returns a single KeuanganTaRpjmPaguIndikatif'
      operationId: getKeuanganTaRpjmPaguIndikatifById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmPaguIndikatif to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmPaguIndikatif not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmPaguIndikatif
      summary: 'Update an existing KeuanganTaRpjmPaguIndikatif'
      operationId: updateKeuanganTaRpjmPaguIndikatif
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmPaguIndikatif id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmPaguIndikatif'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmPaguIndikatif not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmPaguIndikatif
      summary: 'Deletes a KeuanganTaRpjmPaguIndikatif'
      operationId: deleteKeuanganTaRpjmPaguIndikatif
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmPaguIndikatif id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmPaguTahunans:
    get:
      tags:
        - KeuanganTaRpjmPaguTahunan
      summary: 'Find list KeuanganTaRpjmPaguTahunan'
      description: 'Returns list of KeuanganTaRpjmPaguTahunan'
      operationId: getKeuanganTaRpjmPaguTahunan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmPaguTahunan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmPaguTahunan
      summary: 'Add a new KeuanganTaRpjmPaguTahunan to the store'
      operationId: addKeuanganTaRpjmPaguTahunan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmPaguTahunan'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmPaguTahunan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmPaguTahunans/{id}':
    get:
      tags:
        - KeuanganTaRpjmPaguTahunan
      summary: 'Find KeuanganTaRpjmPaguTahunan by ID'
      description: 'Returns a single KeuanganTaRpjmPaguTahunan'
      operationId: getKeuanganTaRpjmPaguTahunanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmPaguTahunan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmPaguTahunan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmPaguTahunan
      summary: 'Update an existing KeuanganTaRpjmPaguTahunan'
      operationId: updateKeuanganTaRpjmPaguTahunan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmPaguTahunan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmPaguTahunan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmPaguTahunan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmPaguTahunan
      summary: 'Deletes a KeuanganTaRpjmPaguTahunan'
      operationId: deleteKeuanganTaRpjmPaguTahunan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmPaguTahunan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmSasarans:
    get:
      tags:
        - KeuanganTaRpjmSasaran
      summary: 'Find list KeuanganTaRpjmSasaran'
      description: 'Returns list of KeuanganTaRpjmSasaran'
      operationId: getKeuanganTaRpjmSasaran
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmSasaran' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmSasaran' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmSasaran' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmSasaran not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmSasaran
      summary: 'Add a new KeuanganTaRpjmSasaran to the store'
      operationId: addKeuanganTaRpjmSasaran
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmSasaran'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmSasaran'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmSasarans/{id}':
    get:
      tags:
        - KeuanganTaRpjmSasaran
      summary: 'Find KeuanganTaRpjmSasaran by ID'
      description: 'Returns a single KeuanganTaRpjmSasaran'
      operationId: getKeuanganTaRpjmSasaranById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmSasaran to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmSasaran not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmSasaran
      summary: 'Update an existing KeuanganTaRpjmSasaran'
      operationId: updateKeuanganTaRpjmSasaran
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmSasaran id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmSasaran'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmSasaran not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmSasaran
      summary: 'Deletes a KeuanganTaRpjmSasaran'
      operationId: deleteKeuanganTaRpjmSasaran
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmSasaran id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmTujuans:
    get:
      tags:
        - KeuanganTaRpjmTujuan
      summary: 'Find list KeuanganTaRpjmTujuan'
      description: 'Returns list of KeuanganTaRpjmTujuan'
      operationId: getKeuanganTaRpjmTujuan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmTujuan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmTujuan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmTujuan' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmTujuan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmTujuan
      summary: 'Add a new KeuanganTaRpjmTujuan to the store'
      operationId: addKeuanganTaRpjmTujuan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmTujuan'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmTujuan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmTujuans/{id}':
    get:
      tags:
        - KeuanganTaRpjmTujuan
      summary: 'Find KeuanganTaRpjmTujuan by ID'
      description: 'Returns a single KeuanganTaRpjmTujuan'
      operationId: getKeuanganTaRpjmTujuanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmTujuan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmTujuan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmTujuan
      summary: 'Update an existing KeuanganTaRpjmTujuan'
      operationId: updateKeuanganTaRpjmTujuan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmTujuan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmTujuan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmTujuan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmTujuan
      summary: 'Deletes a KeuanganTaRpjmTujuan'
      operationId: deleteKeuanganTaRpjmTujuan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmTujuan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaRpjmVisis:
    get:
      tags:
        - KeuanganTaRpjmVisi
      summary: 'Find list KeuanganTaRpjmVisi'
      description: 'Returns list of KeuanganTaRpjmVisi'
      operationId: getKeuanganTaRpjmVisi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmVisi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmVisi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaRpjmVisi' } }
                type: object
        '404':
          description: 'KeuanganTaRpjmVisi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaRpjmVisi
      summary: 'Add a new KeuanganTaRpjmVisi to the store'
      operationId: addKeuanganTaRpjmVisi
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmVisi'
      responses:
        '201':
          description: 'Created KeuanganTaRpjmVisi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmVisi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmVisi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaRpjmVisis/{id}':
    get:
      tags:
        - KeuanganTaRpjmVisi
      summary: 'Find KeuanganTaRpjmVisi by ID'
      description: 'Returns a single KeuanganTaRpjmVisi'
      operationId: getKeuanganTaRpjmVisiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaRpjmVisi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmVisi'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaRpjmVisi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaRpjmVisi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaRpjmVisi
      summary: 'Update an existing KeuanganTaRpjmVisi'
      operationId: updateKeuanganTaRpjmVisi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmVisi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaRpjmVisi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaRpjmVisi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaRpjmVisi
      summary: 'Deletes a KeuanganTaRpjmVisi'
      operationId: deleteKeuanganTaRpjmVisi
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaRpjmVisi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSaldoAwals:
    get:
      tags:
        - KeuanganTaSaldoAwal
      summary: 'Find list KeuanganTaSaldoAwal'
      description: 'Returns list of KeuanganTaSaldoAwal'
      operationId: getKeuanganTaSaldoAwal
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSaldoAwal' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSaldoAwal' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSaldoAwal' } }
                type: object
        '404':
          description: 'KeuanganTaSaldoAwal not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSaldoAwal
      summary: 'Add a new KeuanganTaSaldoAwal to the store'
      operationId: addKeuanganTaSaldoAwal
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSaldoAwal'
      responses:
        '201':
          description: 'Created KeuanganTaSaldoAwal'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSaldoAwal'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSaldoAwal'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSaldoAwals/{id}':
    get:
      tags:
        - KeuanganTaSaldoAwal
      summary: 'Find KeuanganTaSaldoAwal by ID'
      description: 'Returns a single KeuanganTaSaldoAwal'
      operationId: getKeuanganTaSaldoAwalById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSaldoAwal to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSaldoAwal'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSaldoAwal'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSaldoAwal not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSaldoAwal
      summary: 'Update an existing KeuanganTaSaldoAwal'
      operationId: updateKeuanganTaSaldoAwal
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSaldoAwal id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSaldoAwal'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSaldoAwal not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSaldoAwal
      summary: 'Deletes a KeuanganTaSaldoAwal'
      operationId: deleteKeuanganTaSaldoAwal
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSaldoAwal id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpjBuktis:
    get:
      tags:
        - KeuanganTaSpjBukti
      summary: 'Find list KeuanganTaSpjBukti'
      description: 'Returns list of KeuanganTaSpjBukti'
      operationId: getKeuanganTaSpjBukti
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjBukti' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjBukti' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjBukti' } }
                type: object
        '404':
          description: 'KeuanganTaSpjBukti not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpjBukti
      summary: 'Add a new KeuanganTaSpjBukti to the store'
      operationId: addKeuanganTaSpjBukti
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjBukti'
      responses:
        '201':
          description: 'Created KeuanganTaSpjBukti'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjBukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjBukti'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpjBuktis/{id}':
    get:
      tags:
        - KeuanganTaSpjBukti
      summary: 'Find KeuanganTaSpjBukti by ID'
      description: 'Returns a single KeuanganTaSpjBukti'
      operationId: getKeuanganTaSpjBuktiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpjBukti to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjBukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjBukti'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpjBukti not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpjBukti
      summary: 'Update an existing KeuanganTaSpjBukti'
      operationId: updateKeuanganTaSpjBukti
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjBukti id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjBukti'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpjBukti not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpjBukti
      summary: 'Deletes a KeuanganTaSpjBukti'
      operationId: deleteKeuanganTaSpjBukti
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjBukti id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpjRincis:
    get:
      tags:
        - KeuanganTaSpjRinci
      summary: 'Find list KeuanganTaSpjRinci'
      description: 'Returns list of KeuanganTaSpjRinci'
      operationId: getKeuanganTaSpjRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjRinci' } }
                type: object
        '404':
          description: 'KeuanganTaSpjRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpjRinci
      summary: 'Add a new KeuanganTaSpjRinci to the store'
      operationId: addKeuanganTaSpjRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjRinci'
      responses:
        '201':
          description: 'Created KeuanganTaSpjRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpjRincis/{id}':
    get:
      tags:
        - KeuanganTaSpjRinci
      summary: 'Find KeuanganTaSpjRinci by ID'
      description: 'Returns a single KeuanganTaSpjRinci'
      operationId: getKeuanganTaSpjRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpjRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpjRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpjRinci
      summary: 'Update an existing KeuanganTaSpjRinci'
      operationId: updateKeuanganTaSpjRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpjRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpjRinci
      summary: 'Deletes a KeuanganTaSpjRinci'
      operationId: deleteKeuanganTaSpjRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpjSisas:
    get:
      tags:
        - KeuanganTaSpjSisa
      summary: 'Find list KeuanganTaSpjSisa'
      description: 'Returns list of KeuanganTaSpjSisa'
      operationId: getKeuanganTaSpjSisa
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjSisa' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjSisa' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjSisa' } }
                type: object
        '404':
          description: 'KeuanganTaSpjSisa not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpjSisa
      summary: 'Add a new KeuanganTaSpjSisa to the store'
      operationId: addKeuanganTaSpjSisa
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjSisa'
      responses:
        '201':
          description: 'Created KeuanganTaSpjSisa'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjSisa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjSisa'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpjSisas/{id}':
    get:
      tags:
        - KeuanganTaSpjSisa
      summary: 'Find KeuanganTaSpjSisa by ID'
      description: 'Returns a single KeuanganTaSpjSisa'
      operationId: getKeuanganTaSpjSisaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpjSisa to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjSisa'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjSisa'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpjSisa not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpjSisa
      summary: 'Update an existing KeuanganTaSpjSisa'
      operationId: updateKeuanganTaSpjSisa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjSisa id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjSisa'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpjSisa not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpjSisa
      summary: 'Deletes a KeuanganTaSpjSisa'
      operationId: deleteKeuanganTaSpjSisa
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjSisa id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpjpots:
    get:
      tags:
        - KeuanganTaSpjpot
      summary: 'Find list KeuanganTaSpjpot'
      description: 'Returns list of KeuanganTaSpjpot'
      operationId: getKeuanganTaSpjpot
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjpot' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjpot' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpjpot' } }
                type: object
        '404':
          description: 'KeuanganTaSpjpot not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpjpot
      summary: 'Add a new KeuanganTaSpjpot to the store'
      operationId: addKeuanganTaSpjpot
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjpot'
      responses:
        '201':
          description: 'Created KeuanganTaSpjpot'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjpot'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjpot'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpjpots/{id}':
    get:
      tags:
        - KeuanganTaSpjpot
      summary: 'Find KeuanganTaSpjpot by ID'
      description: 'Returns a single KeuanganTaSpjpot'
      operationId: getKeuanganTaSpjpotById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpjpot to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjpot'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpjpot'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpjpot not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpjpot
      summary: 'Update an existing KeuanganTaSpjpot'
      operationId: updateKeuanganTaSpjpot
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjpot id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpjpot'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpjpot not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpjpot
      summary: 'Deletes a KeuanganTaSpjpot'
      operationId: deleteKeuanganTaSpjpot
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpjpot id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpjs:
    get:
      tags:
        - KeuanganTaSpj
      summary: 'Find list KeuanganTaSpj'
      description: 'Returns list of KeuanganTaSpj'
      operationId: getKeuanganTaSpj
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpj' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpj' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpj' } }
                type: object
        '404':
          description: 'KeuanganTaSpj not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpj
      summary: 'Add a new KeuanganTaSpj to the store'
      operationId: addKeuanganTaSpj
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpj'
      responses:
        '201':
          description: 'Created KeuanganTaSpj'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpj'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpj'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpjs/{id}':
    get:
      tags:
        - KeuanganTaSpj
      summary: 'Find KeuanganTaSpj by ID'
      description: 'Returns a single KeuanganTaSpj'
      operationId: getKeuanganTaSpjById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpj to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpj'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpj'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpj not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpj
      summary: 'Update an existing KeuanganTaSpj'
      operationId: updateKeuanganTaSpj
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpj id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpj'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpj not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpj
      summary: 'Deletes a KeuanganTaSpj'
      operationId: deleteKeuanganTaSpj
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpj id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSppRincis:
    get:
      tags:
        - KeuanganTaSppRinci
      summary: 'Find list KeuanganTaSppRinci'
      description: 'Returns list of KeuanganTaSppRinci'
      operationId: getKeuanganTaSppRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppRinci' } }
                type: object
        '404':
          description: 'KeuanganTaSppRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSppRinci
      summary: 'Add a new KeuanganTaSppRinci to the store'
      operationId: addKeuanganTaSppRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSppRinci'
      responses:
        '201':
          description: 'Created KeuanganTaSppRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSppRincis/{id}':
    get:
      tags:
        - KeuanganTaSppRinci
      summary: 'Find KeuanganTaSppRinci by ID'
      description: 'Returns a single KeuanganTaSppRinci'
      operationId: getKeuanganTaSppRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSppRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSppRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSppRinci
      summary: 'Update an existing KeuanganTaSppRinci'
      operationId: updateKeuanganTaSppRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSppRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSppRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSppRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSppRinci
      summary: 'Deletes a KeuanganTaSppRinci'
      operationId: deleteKeuanganTaSppRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSppRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSppbuktis:
    get:
      tags:
        - KeuanganTaSppbukti
      summary: 'Find list KeuanganTaSppbukti'
      description: 'Returns list of KeuanganTaSppbukti'
      operationId: getKeuanganTaSppbukti
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppbukti' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppbukti' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSppbukti' } }
                type: object
        '404':
          description: 'KeuanganTaSppbukti not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSppbukti
      summary: 'Add a new KeuanganTaSppbukti to the store'
      operationId: addKeuanganTaSppbukti
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSppbukti'
      responses:
        '201':
          description: 'Created KeuanganTaSppbukti'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppbukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppbukti'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSppbuktis/{id}':
    get:
      tags:
        - KeuanganTaSppbukti
      summary: 'Find KeuanganTaSppbukti by ID'
      description: 'Returns a single KeuanganTaSppbukti'
      operationId: getKeuanganTaSppbuktiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSppbukti to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppbukti'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSppbukti'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSppbukti not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSppbukti
      summary: 'Update an existing KeuanganTaSppbukti'
      operationId: updateKeuanganTaSppbukti
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSppbukti id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSppbukti'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSppbukti not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSppbukti
      summary: 'Deletes a KeuanganTaSppbukti'
      operationId: deleteKeuanganTaSppbukti
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSppbukti id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpppots:
    get:
      tags:
        - KeuanganTaSpppot
      summary: 'Find list KeuanganTaSpppot'
      description: 'Returns list of KeuanganTaSpppot'
      operationId: getKeuanganTaSpppot
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpppot' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpppot' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpppot' } }
                type: object
        '404':
          description: 'KeuanganTaSpppot not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpppot
      summary: 'Add a new KeuanganTaSpppot to the store'
      operationId: addKeuanganTaSpppot
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpppot'
      responses:
        '201':
          description: 'Created KeuanganTaSpppot'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpppot'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpppot'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpppots/{id}':
    get:
      tags:
        - KeuanganTaSpppot
      summary: 'Find KeuanganTaSpppot by ID'
      description: 'Returns a single KeuanganTaSpppot'
      operationId: getKeuanganTaSpppotById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpppot to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpppot'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpppot'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpppot not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpppot
      summary: 'Update an existing KeuanganTaSpppot'
      operationId: updateKeuanganTaSpppot
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpppot id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpppot'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpppot not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpppot
      summary: 'Deletes a KeuanganTaSpppot'
      operationId: deleteKeuanganTaSpppot
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpppot id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSpps:
    get:
      tags:
        - KeuanganTaSpp
      summary: 'Find list KeuanganTaSpp'
      description: 'Returns list of KeuanganTaSpp'
      operationId: getKeuanganTaSpp
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpp' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpp' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSpp' } }
                type: object
        '404':
          description: 'KeuanganTaSpp not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSpp
      summary: 'Add a new KeuanganTaSpp to the store'
      operationId: addKeuanganTaSpp
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpp'
      responses:
        '201':
          description: 'Created KeuanganTaSpp'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpp'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpp'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSpps/{id}':
    get:
      tags:
        - KeuanganTaSpp
      summary: 'Find KeuanganTaSpp by ID'
      description: 'Returns a single KeuanganTaSpp'
      operationId: getKeuanganTaSppById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSpp to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpp'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSpp'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSpp not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSpp
      summary: 'Update an existing KeuanganTaSpp'
      operationId: updateKeuanganTaSpp
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpp id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSpp'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSpp not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSpp
      summary: 'Deletes a KeuanganTaSpp'
      operationId: deleteKeuanganTaSpp
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSpp id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaSts:
    get:
      tags:
        - KeuanganTaSts
      summary: 'Find list KeuanganTaSts'
      description: 'Returns list of KeuanganTaSts'
      operationId: getKeuanganTaSts
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSts' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSts' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaSts' } }
                type: object
        '404':
          description: 'KeuanganTaSts not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaSts
      summary: 'Add a new KeuanganTaSts to the store'
      operationId: addKeuanganTaSts
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSts'
      responses:
        '201':
          description: 'Created KeuanganTaSts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSts'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSts'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaSts/{id}':
    get:
      tags:
        - KeuanganTaSts
      summary: 'Find KeuanganTaSts by ID'
      description: 'Returns a single KeuanganTaSts'
      operationId: getKeuanganTaStsById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaSts to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaSts'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaSts'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaSts not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaSts
      summary: 'Update an existing KeuanganTaSts'
      operationId: updateKeuanganTaSts
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSts id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaSts'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaSts not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaSts
      summary: 'Deletes a KeuanganTaSts'
      operationId: deleteKeuanganTaSts
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaSts id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaStsRincis:
    get:
      tags:
        - KeuanganTaStsRinci
      summary: 'Find list KeuanganTaStsRinci'
      description: 'Returns list of KeuanganTaStsRinci'
      operationId: getKeuanganTaStsRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaStsRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaStsRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaStsRinci' } }
                type: object
        '404':
          description: 'KeuanganTaStsRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaStsRinci
      summary: 'Add a new KeuanganTaStsRinci to the store'
      operationId: addKeuanganTaStsRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaStsRinci'
      responses:
        '201':
          description: 'Created KeuanganTaStsRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaStsRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaStsRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaStsRincis/{id}':
    get:
      tags:
        - KeuanganTaStsRinci
      summary: 'Find KeuanganTaStsRinci by ID'
      description: 'Returns a single KeuanganTaStsRinci'
      operationId: getKeuanganTaStsRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaStsRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaStsRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaStsRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaStsRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaStsRinci
      summary: 'Update an existing KeuanganTaStsRinci'
      operationId: updateKeuanganTaStsRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaStsRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaStsRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaStsRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaStsRinci
      summary: 'Deletes a KeuanganTaStsRinci'
      operationId: deleteKeuanganTaStsRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaStsRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaTbpRincis:
    get:
      tags:
        - KeuanganTaTbpRinci
      summary: 'Find list KeuanganTaTbpRinci'
      description: 'Returns list of KeuanganTaTbpRinci'
      operationId: getKeuanganTaTbpRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbpRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbpRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbpRinci' } }
                type: object
        '404':
          description: 'KeuanganTaTbpRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaTbpRinci
      summary: 'Add a new KeuanganTaTbpRinci to the store'
      operationId: addKeuanganTaTbpRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTbpRinci'
      responses:
        '201':
          description: 'Created KeuanganTaTbpRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbpRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbpRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaTbpRincis/{id}':
    get:
      tags:
        - KeuanganTaTbpRinci
      summary: 'Find KeuanganTaTbpRinci by ID'
      description: 'Returns a single KeuanganTaTbpRinci'
      operationId: getKeuanganTaTbpRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaTbpRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbpRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbpRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaTbpRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaTbpRinci
      summary: 'Update an existing KeuanganTaTbpRinci'
      operationId: updateKeuanganTaTbpRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTbpRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTbpRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaTbpRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaTbpRinci
      summary: 'Deletes a KeuanganTaTbpRinci'
      operationId: deleteKeuanganTaTbpRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTbpRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaTbps:
    get:
      tags:
        - KeuanganTaTbp
      summary: 'Find list KeuanganTaTbp'
      description: 'Returns list of KeuanganTaTbp'
      operationId: getKeuanganTaTbp
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbp' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbp' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTbp' } }
                type: object
        '404':
          description: 'KeuanganTaTbp not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaTbp
      summary: 'Add a new KeuanganTaTbp to the store'
      operationId: addKeuanganTaTbp
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTbp'
      responses:
        '201':
          description: 'Created KeuanganTaTbp'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbp'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbp'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaTbps/{id}':
    get:
      tags:
        - KeuanganTaTbp
      summary: 'Find KeuanganTaTbp by ID'
      description: 'Returns a single KeuanganTaTbp'
      operationId: getKeuanganTaTbpById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaTbp to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbp'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTbp'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaTbp not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaTbp
      summary: 'Update an existing KeuanganTaTbp'
      operationId: updateKeuanganTaTbp
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTbp id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTbp'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaTbp not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaTbp
      summary: 'Deletes a KeuanganTaTbp'
      operationId: deleteKeuanganTaTbp
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTbp id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaTriwulanRincis:
    get:
      tags:
        - KeuanganTaTriwulanRinci
      summary: 'Find list KeuanganTaTriwulanRinci'
      description: 'Returns list of KeuanganTaTriwulanRinci'
      operationId: getKeuanganTaTriwulanRinci
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulanRinci' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulanRinci' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulanRinci' } }
                type: object
        '404':
          description: 'KeuanganTaTriwulanRinci not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaTriwulanRinci
      summary: 'Add a new KeuanganTaTriwulanRinci to the store'
      operationId: addKeuanganTaTriwulanRinci
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTriwulanRinci'
      responses:
        '201':
          description: 'Created KeuanganTaTriwulanRinci'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaTriwulanRincis/{id}':
    get:
      tags:
        - KeuanganTaTriwulanRinci
      summary: 'Find KeuanganTaTriwulanRinci by ID'
      description: 'Returns a single KeuanganTaTriwulanRinci'
      operationId: getKeuanganTaTriwulanRinciById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaTriwulanRinci to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaTriwulanRinci not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaTriwulanRinci
      summary: 'Update an existing KeuanganTaTriwulanRinci'
      operationId: updateKeuanganTaTriwulanRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTriwulanRinci id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTriwulanRinci'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaTriwulanRinci not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaTriwulanRinci
      summary: 'Deletes a KeuanganTaTriwulanRinci'
      operationId: deleteKeuanganTaTriwulanRinci
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTriwulanRinci id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /keuanganTaTriwulans:
    get:
      tags:
        - KeuanganTaTriwulan
      summary: 'Find list KeuanganTaTriwulan'
      description: 'Returns list of KeuanganTaTriwulan'
      operationId: getKeuanganTaTriwulan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KeuanganTaTriwulan' } }
                type: object
        '404':
          description: 'KeuanganTaTriwulan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KeuanganTaTriwulan
      summary: 'Add a new KeuanganTaTriwulan to the store'
      operationId: addKeuanganTaTriwulan
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTriwulan'
      responses:
        '201':
          description: 'Created KeuanganTaTriwulan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/keuanganTaTriwulans/{id}':
    get:
      tags:
        - KeuanganTaTriwulan
      summary: 'Find KeuanganTaTriwulan by ID'
      description: 'Returns a single KeuanganTaTriwulan'
      operationId: getKeuanganTaTriwulanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KeuanganTaTriwulan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulan'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeuanganTaTriwulan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KeuanganTaTriwulan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KeuanganTaTriwulan
      summary: 'Update an existing KeuanganTaTriwulan'
      operationId: updateKeuanganTaTriwulan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTriwulan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KeuanganTaTriwulan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KeuanganTaTriwulan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KeuanganTaTriwulan
      summary: 'Deletes a KeuanganTaTriwulan'
      operationId: deleteKeuanganTaTriwulan
      parameters:
        -
          name: id
          in: path
          description: 'KeuanganTaTriwulan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /klasifikasiAnalisisKeluargas:
    get:
      tags:
        - KlasifikasiAnalisisKeluarga
      summary: 'Find list KlasifikasiAnalisisKeluarga'
      description: 'Returns list of KlasifikasiAnalisisKeluarga'
      operationId: getKlasifikasiAnalisisKeluarga
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga' } }
                type: object
        '404':
          description: 'KlasifikasiAnalisisKeluarga not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KlasifikasiAnalisisKeluarga
      summary: 'Add a new KlasifikasiAnalisisKeluarga to the store'
      operationId: addKlasifikasiAnalisisKeluarga
      requestBody:
        $ref: '#/components/requestBodies/KlasifikasiAnalisisKeluarga'
      responses:
        '201':
          description: 'Created KlasifikasiAnalisisKeluarga'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/klasifikasiAnalisisKeluargas/{id}':
    get:
      tags:
        - KlasifikasiAnalisisKeluarga
      summary: 'Find KlasifikasiAnalisisKeluarga by ID'
      description: 'Returns a single KlasifikasiAnalisisKeluarga'
      operationId: getKlasifikasiAnalisisKeluargaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KlasifikasiAnalisisKeluarga to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KlasifikasiAnalisisKeluarga not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KlasifikasiAnalisisKeluarga
      summary: 'Update an existing KlasifikasiAnalisisKeluarga'
      operationId: updateKlasifikasiAnalisisKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'KlasifikasiAnalisisKeluarga id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KlasifikasiAnalisisKeluarga'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KlasifikasiAnalisisKeluarga not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KlasifikasiAnalisisKeluarga
      summary: 'Deletes a KlasifikasiAnalisisKeluarga'
      operationId: deleteKlasifikasiAnalisisKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'KlasifikasiAnalisisKeluarga id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /klasifikasiSurats:
    get:
      tags:
        - KlasifikasiSurat
      summary: 'Find list KlasifikasiSurat'
      description: 'Returns list of KlasifikasiSurat'
      operationId: getKlasifikasiSurat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KlasifikasiSurat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KlasifikasiSurat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KlasifikasiSurat' } }
                type: object
        '404':
          description: 'KlasifikasiSurat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KlasifikasiSurat
      summary: 'Add a new KlasifikasiSurat to the store'
      operationId: addKlasifikasiSurat
      requestBody:
        $ref: '#/components/requestBodies/KlasifikasiSurat'
      responses:
        '201':
          description: 'Created KlasifikasiSurat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlasifikasiSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KlasifikasiSurat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/klasifikasiSurats/{id}':
    get:
      tags:
        - KlasifikasiSurat
      summary: 'Find KlasifikasiSurat by ID'
      description: 'Returns a single KlasifikasiSurat'
      operationId: getKlasifikasiSuratById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KlasifikasiSurat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlasifikasiSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/KlasifikasiSurat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KlasifikasiSurat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KlasifikasiSurat
      summary: 'Update an existing KlasifikasiSurat'
      operationId: updateKlasifikasiSurat
      parameters:
        -
          name: id
          in: path
          description: 'KlasifikasiSurat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KlasifikasiSurat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KlasifikasiSurat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KlasifikasiSurat
      summary: 'Deletes a KlasifikasiSurat'
      operationId: deleteKlasifikasiSurat
      parameters:
        -
          name: id
          in: path
          description: 'KlasifikasiSurat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /komentars:
    get:
      tags:
        - Komentar
      summary: 'Find list Komentar'
      description: 'Returns list of Komentar'
      operationId: getKomentar
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Komentar' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Komentar' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Komentar' } }
                type: object
        '404':
          description: 'Komentar not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Komentar
      summary: 'Add a new Komentar to the store'
      operationId: addKomentar
      requestBody:
        $ref: '#/components/requestBodies/Komentar'
      responses:
        '201':
          description: 'Created Komentar'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Komentar'
            application/xml:
              schema:
                $ref: '#/components/schemas/Komentar'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/komentars/{id}':
    get:
      tags:
        - Komentar
      summary: 'Find Komentar by ID'
      description: 'Returns a single Komentar'
      operationId: getKomentarById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Komentar to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Komentar'
            application/xml:
              schema:
                $ref: '#/components/schemas/Komentar'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Komentar not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Komentar
      summary: 'Update an existing Komentar'
      operationId: updateKomentar
      parameters:
        -
          name: id
          in: path
          description: 'Komentar id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Komentar'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Komentar not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Komentar
      summary: 'Deletes a Komentar'
      operationId: deleteKomentar
      parameters:
        -
          name: id
          in: path
          description: 'Komentar id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kontakGrups:
    get:
      tags:
        - KontakGrup
      summary: 'Find list KontakGrup'
      description: 'Returns list of KontakGrup'
      operationId: getKontakGrup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KontakGrup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/KontakGrup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/KontakGrup' } }
                type: object
        '404':
          description: 'KontakGrup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - KontakGrup
      summary: 'Add a new KontakGrup to the store'
      operationId: addKontakGrup
      requestBody:
        $ref: '#/components/requestBodies/KontakGrup'
      responses:
        '201':
          description: 'Created KontakGrup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KontakGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/KontakGrup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kontakGrups/{id}':
    get:
      tags:
        - KontakGrup
      summary: 'Find KontakGrup by ID'
      description: 'Returns a single KontakGrup'
      operationId: getKontakGrupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of KontakGrup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KontakGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/KontakGrup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'KontakGrup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - KontakGrup
      summary: 'Update an existing KontakGrup'
      operationId: updateKontakGrup
      parameters:
        -
          name: id
          in: path
          description: 'KontakGrup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/KontakGrup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'KontakGrup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - KontakGrup
      summary: 'Deletes a KontakGrup'
      operationId: deleteKontakGrup
      parameters:
        -
          name: id
          in: path
          description: 'KontakGrup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /kontaks:
    get:
      tags:
        - Kontak
      summary: 'Find list Kontak'
      description: 'Returns list of Kontak'
      operationId: getKontak
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kontak' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Kontak' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Kontak' } }
                type: object
        '404':
          description: 'Kontak not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Kontak
      summary: 'Add a new Kontak to the store'
      operationId: addKontak
      requestBody:
        $ref: '#/components/requestBodies/Kontak'
      responses:
        '201':
          description: 'Created Kontak'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kontak'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/kontaks/{id}':
    get:
      tags:
        - Kontak
      summary: 'Find Kontak by ID'
      description: 'Returns a single Kontak'
      operationId: getKontakById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Kontak to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kontak'
            application/xml:
              schema:
                $ref: '#/components/schemas/Kontak'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Kontak not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Kontak
      summary: 'Update an existing Kontak'
      operationId: updateKontak
      parameters:
        -
          name: id
          in: path
          description: 'Kontak id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Kontak'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Kontak not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Kontak
      summary: 'Deletes a Kontak'
      operationId: deleteKontak
      parameters:
        -
          name: id
          in: path
          description: 'Kontak id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /lines:
    get:
      tags:
        - Line
      summary: 'Find list Line'
      description: 'Returns list of Line'
      operationId: getLine
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Line' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Line' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Line' } }
                type: object
        '404':
          description: 'Line not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Line
      summary: 'Add a new Line to the store'
      operationId: addLine
      requestBody:
        $ref: '#/components/requestBodies/Line'
      responses:
        '201':
          description: 'Created Line'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
            application/xml:
              schema:
                $ref: '#/components/schemas/Line'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/lines/{id}':
    get:
      tags:
        - Line
      summary: 'Find Line by ID'
      description: 'Returns a single Line'
      operationId: getLineById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Line to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
            application/xml:
              schema:
                $ref: '#/components/schemas/Line'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Line not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Line
      summary: 'Update an existing Line'
      operationId: updateLine
      parameters:
        -
          name: id
          in: path
          description: 'Line id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Line'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Line not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Line
      summary: 'Deletes a Line'
      operationId: deleteLine
      parameters:
        -
          name: id
          in: path
          description: 'Line id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logBulanans:
    get:
      tags:
        - LogBulanan
      summary: 'Find list LogBulanan'
      description: 'Returns list of LogBulanan'
      operationId: getLogBulanan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogBulanan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogBulanan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogBulanan' } }
                type: object
        '404':
          description: 'LogBulanan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogBulanan
      summary: 'Add a new LogBulanan to the store'
      operationId: addLogBulanan
      requestBody:
        $ref: '#/components/requestBodies/LogBulanan'
      responses:
        '201':
          description: 'Created LogBulanan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBulanan'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogBulanan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logBulanans/{id}':
    get:
      tags:
        - LogBulanan
      summary: 'Find LogBulanan by ID'
      description: 'Returns a single LogBulanan'
      operationId: getLogBulananById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogBulanan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBulanan'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogBulanan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogBulanan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogBulanan
      summary: 'Update an existing LogBulanan'
      operationId: updateLogBulanan
      parameters:
        -
          name: id
          in: path
          description: 'LogBulanan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogBulanan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogBulanan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogBulanan
      summary: 'Deletes a LogBulanan'
      operationId: deleteLogBulanan
      parameters:
        -
          name: id
          in: path
          description: 'LogBulanan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logEkspors:
    get:
      tags:
        - LogEkspor
      summary: 'Find list LogEkspor'
      description: 'Returns list of LogEkspor'
      operationId: getLogEkspor
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogEkspor' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogEkspor' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogEkspor' } }
                type: object
        '404':
          description: 'LogEkspor not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogEkspor
      summary: 'Add a new LogEkspor to the store'
      operationId: addLogEkspor
      requestBody:
        $ref: '#/components/requestBodies/LogEkspor'
      responses:
        '201':
          description: 'Created LogEkspor'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogEkspor'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogEkspor'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logEkspors/{id}':
    get:
      tags:
        - LogEkspor
      summary: 'Find LogEkspor by ID'
      description: 'Returns a single LogEkspor'
      operationId: getLogEksporById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogEkspor to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogEkspor'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogEkspor'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogEkspor not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogEkspor
      summary: 'Update an existing LogEkspor'
      operationId: updateLogEkspor
      parameters:
        -
          name: id
          in: path
          description: 'LogEkspor id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogEkspor'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogEkspor not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogEkspor
      summary: 'Deletes a LogEkspor'
      operationId: deleteLogEkspor
      parameters:
        -
          name: id
          in: path
          description: 'LogEkspor id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logKeluargas:
    get:
      tags:
        - LogKeluarga
      summary: 'Find list LogKeluarga'
      description: 'Returns list of LogKeluarga'
      operationId: getLogKeluarga
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogKeluarga' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogKeluarga' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogKeluarga' } }
                type: object
        '404':
          description: 'LogKeluarga not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogKeluarga
      summary: 'Add a new LogKeluarga to the store'
      operationId: addLogKeluarga
      requestBody:
        $ref: '#/components/requestBodies/LogKeluarga'
      responses:
        '201':
          description: 'Created LogKeluarga'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogKeluarga'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logKeluargas/{id}':
    get:
      tags:
        - LogKeluarga
      summary: 'Find LogKeluarga by ID'
      description: 'Returns a single LogKeluarga'
      operationId: getLogKeluargaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogKeluarga to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogKeluarga'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogKeluarga not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogKeluarga
      summary: 'Update an existing LogKeluarga'
      operationId: updateLogKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'LogKeluarga id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogKeluarga'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogKeluarga not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogKeluarga
      summary: 'Deletes a LogKeluarga'
      operationId: deleteLogKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'LogKeluarga id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logPenduduks:
    get:
      tags:
        - LogPenduduk
      summary: 'Find list LogPenduduk'
      description: 'Returns list of LogPenduduk'
      operationId: getLogPenduduk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogPenduduk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogPenduduk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogPenduduk' } }
                type: object
        '404':
          description: 'LogPenduduk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogPenduduk
      summary: 'Add a new LogPenduduk to the store'
      operationId: addLogPenduduk
      requestBody:
        $ref: '#/components/requestBodies/LogPenduduk'
      responses:
        '201':
          description: 'Created LogPenduduk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogPenduduk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logPenduduks/{id}':
    get:
      tags:
        - LogPenduduk
      summary: 'Find LogPenduduk by ID'
      description: 'Returns a single LogPenduduk'
      operationId: getLogPendudukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogPenduduk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogPenduduk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogPenduduk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogPenduduk
      summary: 'Update an existing LogPenduduk'
      operationId: updateLogPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'LogPenduduk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogPenduduk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogPenduduk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogPenduduk
      summary: 'Deletes a LogPenduduk'
      operationId: deleteLogPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'LogPenduduk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logPerubahanPenduduks:
    get:
      tags:
        - LogPerubahanPenduduk
      summary: 'Find list LogPerubahanPenduduk'
      description: 'Returns list of LogPerubahanPenduduk'
      operationId: getLogPerubahanPenduduk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogPerubahanPenduduk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogPerubahanPenduduk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogPerubahanPenduduk' } }
                type: object
        '404':
          description: 'LogPerubahanPenduduk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogPerubahanPenduduk
      summary: 'Add a new LogPerubahanPenduduk to the store'
      operationId: addLogPerubahanPenduduk
      requestBody:
        $ref: '#/components/requestBodies/LogPerubahanPenduduk'
      responses:
        '201':
          description: 'Created LogPerubahanPenduduk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogPerubahanPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogPerubahanPenduduk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logPerubahanPenduduks/{id}':
    get:
      tags:
        - LogPerubahanPenduduk
      summary: 'Find LogPerubahanPenduduk by ID'
      description: 'Returns a single LogPerubahanPenduduk'
      operationId: getLogPerubahanPendudukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogPerubahanPenduduk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogPerubahanPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogPerubahanPenduduk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogPerubahanPenduduk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogPerubahanPenduduk
      summary: 'Update an existing LogPerubahanPenduduk'
      operationId: updateLogPerubahanPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'LogPerubahanPenduduk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogPerubahanPenduduk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogPerubahanPenduduk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogPerubahanPenduduk
      summary: 'Deletes a LogPerubahanPenduduk'
      operationId: deleteLogPerubahanPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'LogPerubahanPenduduk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /logSurats:
    get:
      tags:
        - LogSurat
      summary: 'Find list LogSurat'
      description: 'Returns list of LogSurat'
      operationId: getLogSurat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogSurat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LogSurat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/LogSurat' } }
                type: object
        '404':
          description: 'LogSurat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - LogSurat
      summary: 'Add a new LogSurat to the store'
      operationId: addLogSurat
      requestBody:
        $ref: '#/components/requestBodies/LogSurat'
      responses:
        '201':
          description: 'Created LogSurat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogSurat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/logSurats/{id}':
    get:
      tags:
        - LogSurat
      summary: 'Find LogSurat by ID'
      description: 'Returns a single LogSurat'
      operationId: getLogSuratById
      parameters:
        -
          name: id
          in: path
          description: 'ID of LogSurat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogSurat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'LogSurat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - LogSurat
      summary: 'Update an existing LogSurat'
      operationId: updateLogSurat
      parameters:
        -
          name: id
          in: path
          description: 'LogSurat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/LogSurat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'LogSurat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - LogSurat
      summary: 'Deletes a LogSurat'
      operationId: deleteLogSurat
      parameters:
        -
          name: id
          in: path
          description: 'LogSurat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /lokasis:
    get:
      tags:
        - Lokasi
      summary: 'Find list Lokasi'
      description: 'Returns list of Lokasi'
      operationId: getLokasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Lokasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Lokasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Lokasi' } }
                type: object
        '404':
          description: 'Lokasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Lokasi
      summary: 'Add a new Lokasi to the store'
      operationId: addLokasi
      requestBody:
        $ref: '#/components/requestBodies/Lokasi'
      responses:
        '201':
          description: 'Created Lokasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lokasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Lokasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/lokasis/{id}':
    get:
      tags:
        - Lokasi
      summary: 'Find Lokasi by ID'
      description: 'Returns a single Lokasi'
      operationId: getLokasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Lokasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lokasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Lokasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Lokasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Lokasi
      summary: 'Update an existing Lokasi'
      operationId: updateLokasi
      parameters:
        -
          name: id
          in: path
          description: 'Lokasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Lokasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Lokasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Lokasi
      summary: 'Deletes a Lokasi'
      operationId: deleteLokasi
      parameters:
        -
          name: id
          in: path
          description: 'Lokasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mediaSosials:
    get:
      tags:
        - MediaSosial
      summary: 'Find list MediaSosial'
      description: 'Returns list of MediaSosial'
      operationId: getMediaSosial
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MediaSosial' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MediaSosial' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MediaSosial' } }
                type: object
        '404':
          description: 'MediaSosial not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MediaSosial
      summary: 'Add a new MediaSosial to the store'
      operationId: addMediaSosial
      requestBody:
        $ref: '#/components/requestBodies/MediaSosial'
      responses:
        '201':
          description: 'Created MediaSosial'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSosial'
            application/xml:
              schema:
                $ref: '#/components/schemas/MediaSosial'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mediaSosials/{id}':
    get:
      tags:
        - MediaSosial
      summary: 'Find MediaSosial by ID'
      description: 'Returns a single MediaSosial'
      operationId: getMediaSosialById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MediaSosial to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSosial'
            application/xml:
              schema:
                $ref: '#/components/schemas/MediaSosial'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MediaSosial not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MediaSosial
      summary: 'Update an existing MediaSosial'
      operationId: updateMediaSosial
      parameters:
        -
          name: id
          in: path
          description: 'MediaSosial id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MediaSosial'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MediaSosial not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MediaSosial
      summary: 'Deletes a MediaSosial'
      operationId: deleteMediaSosial
      parameters:
        -
          name: id
          in: path
          description: 'MediaSosial id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /menus:
    get:
      tags:
        - Menu
      summary: 'Find list Menu'
      description: 'Returns list of Menu'
      operationId: getMenu
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Menu' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Menu' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Menu' } }
                type: object
        '404':
          description: 'Menu not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Menu
      summary: 'Add a new Menu to the store'
      operationId: addMenu
      requestBody:
        $ref: '#/components/requestBodies/Menu'
      responses:
        '201':
          description: 'Created Menu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/menus/{id}':
    get:
      tags:
        - Menu
      summary: 'Find Menu by ID'
      description: 'Returns a single Menu'
      operationId: getMenuById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Menu to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Menu not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Menu
      summary: 'Update an existing Menu'
      operationId: updateMenu
      parameters:
        -
          name: id
          in: path
          description: 'Menu id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Menu'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Menu not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Menu
      summary: 'Deletes a Menu'
      operationId: deleteMenu
      parameters:
        -
          name: id
          in: path
          description: 'Menu id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /migrasis:
    get:
      tags:
        - Migrasi
      summary: 'Find list Migrasi'
      description: 'Returns list of Migrasi'
      operationId: getMigrasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Migrasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Migrasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Migrasi' } }
                type: object
        '404':
          description: 'Migrasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Migrasi
      summary: 'Add a new Migrasi to the store'
      operationId: addMigrasi
      requestBody:
        $ref: '#/components/requestBodies/Migrasi'
      responses:
        '201':
          description: 'Created Migrasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migrasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Migrasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/migrasis/{id}':
    get:
      tags:
        - Migrasi
      summary: 'Find Migrasi by ID'
      description: 'Returns a single Migrasi'
      operationId: getMigrasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Migrasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migrasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Migrasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Migrasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Migrasi
      summary: 'Update an existing Migrasi'
      operationId: updateMigrasi
      parameters:
        -
          name: id
          in: path
          description: 'Migrasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Migrasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Migrasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Migrasi
      summary: 'Deletes a Migrasi'
      operationId: deleteMigrasi
      parameters:
        -
          name: id
          in: path
          description: 'Migrasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mutasiInventarisAssets:
    get:
      tags:
        - MutasiInventarisAsset
      summary: 'Find list MutasiInventarisAsset'
      description: 'Returns list of MutasiInventarisAsset'
      operationId: getMutasiInventarisAsset
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisAsset' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisAsset' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisAsset' } }
                type: object
        '404':
          description: 'MutasiInventarisAsset not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MutasiInventarisAsset
      summary: 'Add a new MutasiInventarisAsset to the store'
      operationId: addMutasiInventarisAsset
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisAsset'
      responses:
        '201':
          description: 'Created MutasiInventarisAsset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisAsset'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mutasiInventarisAssets/{id}':
    get:
      tags:
        - MutasiInventarisAsset
      summary: 'Find MutasiInventarisAsset by ID'
      description: 'Returns a single MutasiInventarisAsset'
      operationId: getMutasiInventarisAssetById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MutasiInventarisAsset to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisAsset'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisAsset'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MutasiInventarisAsset not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MutasiInventarisAsset
      summary: 'Update an existing MutasiInventarisAsset'
      operationId: updateMutasiInventarisAsset
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisAsset id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisAsset'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MutasiInventarisAsset not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MutasiInventarisAsset
      summary: 'Deletes a MutasiInventarisAsset'
      operationId: deleteMutasiInventarisAsset
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisAsset id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mutasiInventarisGedungs:
    get:
      tags:
        - MutasiInventarisGedung
      summary: 'Find list MutasiInventarisGedung'
      description: 'Returns list of MutasiInventarisGedung'
      operationId: getMutasiInventarisGedung
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisGedung' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisGedung' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisGedung' } }
                type: object
        '404':
          description: 'MutasiInventarisGedung not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MutasiInventarisGedung
      summary: 'Add a new MutasiInventarisGedung to the store'
      operationId: addMutasiInventarisGedung
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisGedung'
      responses:
        '201':
          description: 'Created MutasiInventarisGedung'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisGedung'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisGedung'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mutasiInventarisGedungs/{id}':
    get:
      tags:
        - MutasiInventarisGedung
      summary: 'Find MutasiInventarisGedung by ID'
      description: 'Returns a single MutasiInventarisGedung'
      operationId: getMutasiInventarisGedungById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MutasiInventarisGedung to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisGedung'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisGedung'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MutasiInventarisGedung not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MutasiInventarisGedung
      summary: 'Update an existing MutasiInventarisGedung'
      operationId: updateMutasiInventarisGedung
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisGedung id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisGedung'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MutasiInventarisGedung not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MutasiInventarisGedung
      summary: 'Deletes a MutasiInventarisGedung'
      operationId: deleteMutasiInventarisGedung
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisGedung id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mutasiInventarisJalans:
    get:
      tags:
        - MutasiInventarisJalan
      summary: 'Find list MutasiInventarisJalan'
      description: 'Returns list of MutasiInventarisJalan'
      operationId: getMutasiInventarisJalan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisJalan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisJalan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisJalan' } }
                type: object
        '404':
          description: 'MutasiInventarisJalan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MutasiInventarisJalan
      summary: 'Add a new MutasiInventarisJalan to the store'
      operationId: addMutasiInventarisJalan
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisJalan'
      responses:
        '201':
          description: 'Created MutasiInventarisJalan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisJalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisJalan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mutasiInventarisJalans/{id}':
    get:
      tags:
        - MutasiInventarisJalan
      summary: 'Find MutasiInventarisJalan by ID'
      description: 'Returns a single MutasiInventarisJalan'
      operationId: getMutasiInventarisJalanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MutasiInventarisJalan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisJalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisJalan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MutasiInventarisJalan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MutasiInventarisJalan
      summary: 'Update an existing MutasiInventarisJalan'
      operationId: updateMutasiInventarisJalan
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisJalan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisJalan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MutasiInventarisJalan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MutasiInventarisJalan
      summary: 'Deletes a MutasiInventarisJalan'
      operationId: deleteMutasiInventarisJalan
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisJalan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mutasiInventarisPeralatans:
    get:
      tags:
        - MutasiInventarisPeralatan
      summary: 'Find list MutasiInventarisPeralatan'
      description: 'Returns list of MutasiInventarisPeralatan'
      operationId: getMutasiInventarisPeralatan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisPeralatan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisPeralatan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisPeralatan' } }
                type: object
        '404':
          description: 'MutasiInventarisPeralatan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MutasiInventarisPeralatan
      summary: 'Add a new MutasiInventarisPeralatan to the store'
      operationId: addMutasiInventarisPeralatan
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisPeralatan'
      responses:
        '201':
          description: 'Created MutasiInventarisPeralatan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisPeralatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisPeralatan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mutasiInventarisPeralatans/{id}':
    get:
      tags:
        - MutasiInventarisPeralatan
      summary: 'Find MutasiInventarisPeralatan by ID'
      description: 'Returns a single MutasiInventarisPeralatan'
      operationId: getMutasiInventarisPeralatanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MutasiInventarisPeralatan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisPeralatan'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisPeralatan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MutasiInventarisPeralatan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MutasiInventarisPeralatan
      summary: 'Update an existing MutasiInventarisPeralatan'
      operationId: updateMutasiInventarisPeralatan
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisPeralatan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisPeralatan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MutasiInventarisPeralatan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MutasiInventarisPeralatan
      summary: 'Deletes a MutasiInventarisPeralatan'
      operationId: deleteMutasiInventarisPeralatan
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisPeralatan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /mutasiInventarisTanahs:
    get:
      tags:
        - MutasiInventarisTanah
      summary: 'Find list MutasiInventarisTanah'
      description: 'Returns list of MutasiInventarisTanah'
      operationId: getMutasiInventarisTanah
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisTanah' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisTanah' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/MutasiInventarisTanah' } }
                type: object
        '404':
          description: 'MutasiInventarisTanah not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - MutasiInventarisTanah
      summary: 'Add a new MutasiInventarisTanah to the store'
      operationId: addMutasiInventarisTanah
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisTanah'
      responses:
        '201':
          description: 'Created MutasiInventarisTanah'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisTanah'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisTanah'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/mutasiInventarisTanahs/{id}':
    get:
      tags:
        - MutasiInventarisTanah
      summary: 'Find MutasiInventarisTanah by ID'
      description: 'Returns a single MutasiInventarisTanah'
      operationId: getMutasiInventarisTanahById
      parameters:
        -
          name: id
          in: path
          description: 'ID of MutasiInventarisTanah to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutasiInventarisTanah'
            application/xml:
              schema:
                $ref: '#/components/schemas/MutasiInventarisTanah'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'MutasiInventarisTanah not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - MutasiInventarisTanah
      summary: 'Update an existing MutasiInventarisTanah'
      operationId: updateMutasiInventarisTanah
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisTanah id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/MutasiInventarisTanah'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'MutasiInventarisTanah not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - MutasiInventarisTanah
      summary: 'Deletes a MutasiInventarisTanah'
      operationId: deleteMutasiInventarisTanah
      parameters:
        -
          name: id
          in: path
          description: 'MutasiInventarisTanah id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /outboxes:
    get:
      tags:
        - Outbox
      summary: 'Find list Outbox'
      description: 'Returns list of Outbox'
      operationId: getOutbox
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Outbox' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Outbox' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Outbox' } }
                type: object
        '404':
          description: 'Outbox not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Outbox
      summary: 'Add a new Outbox to the store'
      operationId: addOutbox
      requestBody:
        $ref: '#/components/requestBodies/Outbox'
      responses:
        '201':
          description: 'Created Outbox'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outbox'
            application/xml:
              schema:
                $ref: '#/components/schemas/Outbox'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/outboxes/{id}':
    get:
      tags:
        - Outbox
      summary: 'Find Outbox by ID'
      description: 'Returns a single Outbox'
      operationId: getOutboxById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Outbox to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outbox'
            application/xml:
              schema:
                $ref: '#/components/schemas/Outbox'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Outbox not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Outbox
      summary: 'Update an existing Outbox'
      operationId: updateOutbox
      parameters:
        -
          name: id
          in: path
          description: 'Outbox id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Outbox'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Outbox not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Outbox
      summary: 'Deletes a Outbox'
      operationId: deleteOutbox
      parameters:
        -
          name: id
          in: path
          description: 'Outbox id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /pendudukHidups:
    get:
      tags:
        - PendudukHidup
      summary: 'Find list PendudukHidup'
      description: 'Returns list of PendudukHidup'
      operationId: getPendudukHidup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PendudukHidup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PendudukHidup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/PendudukHidup' } }
                type: object
        '404':
          description: 'PendudukHidup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - PendudukHidup
      summary: 'Add a new PendudukHidup to the store'
      operationId: addPendudukHidup
      requestBody:
        $ref: '#/components/requestBodies/PendudukHidup'
      responses:
        '201':
          description: 'Created PendudukHidup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendudukHidup'
            application/xml:
              schema:
                $ref: '#/components/schemas/PendudukHidup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/pendudukHidups/{id}':
    get:
      tags:
        - PendudukHidup
      summary: 'Find PendudukHidup by ID'
      description: 'Returns a single PendudukHidup'
      operationId: getPendudukHidupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of PendudukHidup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendudukHidup'
            application/xml:
              schema:
                $ref: '#/components/schemas/PendudukHidup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'PendudukHidup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - PendudukHidup
      summary: 'Update an existing PendudukHidup'
      operationId: updatePendudukHidup
      parameters:
        -
          name: id
          in: path
          description: 'PendudukHidup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PendudukHidup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'PendudukHidup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - PendudukHidup
      summary: 'Deletes a PendudukHidup'
      operationId: deletePendudukHidup
      parameters:
        -
          name: id
          in: path
          description: 'PendudukHidup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /permohonanSurats:
    get:
      tags:
        - PermohonanSurat
      summary: 'Find list PermohonanSurat'
      description: 'Returns list of PermohonanSurat'
      operationId: getPermohonanSurat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PermohonanSurat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PermohonanSurat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/PermohonanSurat' } }
                type: object
        '404':
          description: 'PermohonanSurat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - PermohonanSurat
      summary: 'Add a new PermohonanSurat to the store'
      operationId: addPermohonanSurat
      requestBody:
        $ref: '#/components/requestBodies/PermohonanSurat'
      responses:
        '201':
          description: 'Created PermohonanSurat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermohonanSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/PermohonanSurat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/permohonanSurats/{id}':
    get:
      tags:
        - PermohonanSurat
      summary: 'Find PermohonanSurat by ID'
      description: 'Returns a single PermohonanSurat'
      operationId: getPermohonanSuratById
      parameters:
        -
          name: id
          in: path
          description: 'ID of PermohonanSurat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermohonanSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/PermohonanSurat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'PermohonanSurat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - PermohonanSurat
      summary: 'Update an existing PermohonanSurat'
      operationId: updatePermohonanSurat
      parameters:
        -
          name: id
          in: path
          description: 'PermohonanSurat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PermohonanSurat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'PermohonanSurat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - PermohonanSurat
      summary: 'Deletes a PermohonanSurat'
      operationId: deletePermohonanSurat
      parameters:
        -
          name: id
          in: path
          description: 'PermohonanSurat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /pertanyaans:
    get:
      tags:
        - Pertanyaan
      summary: 'Find list Pertanyaan'
      description: 'Returns list of Pertanyaan'
      operationId: getPertanyaan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Pertanyaan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Pertanyaan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Pertanyaan' } }
                type: object
        '404':
          description: 'Pertanyaan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Pertanyaan
      summary: 'Add a new Pertanyaan to the store'
      operationId: addPertanyaan
      requestBody:
        $ref: '#/components/requestBodies/Pertanyaan'
      responses:
        '201':
          description: 'Created Pertanyaan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pertanyaan'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pertanyaan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/pertanyaans/{id}':
    get:
      tags:
        - Pertanyaan
      summary: 'Find Pertanyaan by ID'
      description: 'Returns a single Pertanyaan'
      operationId: getPertanyaanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Pertanyaan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pertanyaan'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pertanyaan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Pertanyaan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Pertanyaan
      summary: 'Update an existing Pertanyaan'
      operationId: updatePertanyaan
      parameters:
        -
          name: id
          in: path
          description: 'Pertanyaan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Pertanyaan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pertanyaan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Pertanyaan
      summary: 'Deletes a Pertanyaan'
      operationId: deletePertanyaan
      parameters:
        -
          name: id
          in: path
          description: 'Pertanyaan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /points:
    get:
      tags:
        - Point
      summary: 'Find list Point'
      description: 'Returns list of Point'
      operationId: getPoint
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Point' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Point' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Point' } }
                type: object
        '404':
          description: 'Point not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Point
      summary: 'Add a new Point to the store'
      operationId: addPoint
      requestBody:
        $ref: '#/components/requestBodies/Point'
      responses:
        '201':
          description: 'Created Point'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
            application/xml:
              schema:
                $ref: '#/components/schemas/Point'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/points/{id}':
    get:
      tags:
        - Point
      summary: 'Find Point by ID'
      description: 'Returns a single Point'
      operationId: getPointById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Point to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
            application/xml:
              schema:
                $ref: '#/components/schemas/Point'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Point not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Point
      summary: 'Update an existing Point'
      operationId: updatePoint
      parameters:
        -
          name: id
          in: path
          description: 'Point id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Point'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Point not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Point
      summary: 'Deletes a Point'
      operationId: deletePoint
      parameters:
        -
          name: id
          in: path
          description: 'Point id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /polygons:
    get:
      tags:
        - Polygon
      summary: 'Find list Polygon'
      description: 'Returns list of Polygon'
      operationId: getPolygon
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Polygon' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Polygon' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Polygon' } }
                type: object
        '404':
          description: 'Polygon not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Polygon
      summary: 'Add a new Polygon to the store'
      operationId: addPolygon
      requestBody:
        $ref: '#/components/requestBodies/Polygon'
      responses:
        '201':
          description: 'Created Polygon'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Polygon'
            application/xml:
              schema:
                $ref: '#/components/schemas/Polygon'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/polygons/{id}':
    get:
      tags:
        - Polygon
      summary: 'Find Polygon by ID'
      description: 'Returns a single Polygon'
      operationId: getPolygonById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Polygon to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Polygon'
            application/xml:
              schema:
                $ref: '#/components/schemas/Polygon'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Polygon not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Polygon
      summary: 'Update an existing Polygon'
      operationId: updatePolygon
      parameters:
        -
          name: id
          in: path
          description: 'Polygon id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Polygon'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Polygon not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Polygon
      summary: 'Deletes a Polygon'
      operationId: deletePolygon
      parameters:
        -
          name: id
          in: path
          description: 'Polygon id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /programPesertas:
    get:
      tags:
        - ProgramPeserta
      summary: 'Find list ProgramPeserta'
      description: 'Returns list of ProgramPeserta'
      operationId: getProgramPeserta
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProgramPeserta' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProgramPeserta' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/ProgramPeserta' } }
                type: object
        '404':
          description: 'ProgramPeserta not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - ProgramPeserta
      summary: 'Add a new ProgramPeserta to the store'
      operationId: addProgramPeserta
      requestBody:
        $ref: '#/components/requestBodies/ProgramPeserta'
      responses:
        '201':
          description: 'Created ProgramPeserta'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramPeserta'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProgramPeserta'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/programPesertas/{id}':
    get:
      tags:
        - ProgramPeserta
      summary: 'Find ProgramPeserta by ID'
      description: 'Returns a single ProgramPeserta'
      operationId: getProgramPesertaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of ProgramPeserta to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramPeserta'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProgramPeserta'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'ProgramPeserta not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - ProgramPeserta
      summary: 'Update an existing ProgramPeserta'
      operationId: updateProgramPeserta
      parameters:
        -
          name: id
          in: path
          description: 'ProgramPeserta id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/ProgramPeserta'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'ProgramPeserta not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - ProgramPeserta
      summary: 'Deletes a ProgramPeserta'
      operationId: deleteProgramPeserta
      parameters:
        -
          name: id
          in: path
          description: 'ProgramPeserta id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /programs:
    get:
      tags:
        - Program
      summary: 'Find list Program'
      description: 'Returns list of Program'
      operationId: getProgram
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Program' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Program' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Program' } }
                type: object
        '404':
          description: 'Program not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Program
      summary: 'Add a new Program to the store'
      operationId: addProgram
      requestBody:
        $ref: '#/components/requestBodies/Program'
      responses:
        '201':
          description: 'Created Program'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/programs/{id}':
    get:
      tags:
        - Program
      summary: 'Find Program by ID'
      description: 'Returns a single Program'
      operationId: getProgramById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Program to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Program not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Program
      summary: 'Update an existing Program'
      operationId: updateProgram
      parameters:
        -
          name: id
          in: path
          description: 'Program id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Program'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Program not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Program
      summary: 'Deletes a Program'
      operationId: deleteProgram
      parameters:
        -
          name: id
          in: path
          description: 'Program id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /provinsis:
    get:
      tags:
        - Provinsi
      summary: 'Find list Provinsi'
      description: 'Returns list of Provinsi'
      operationId: getProvinsi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Provinsi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Provinsi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Provinsi' } }
                type: object
        '404':
          description: 'Provinsi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Provinsi
      summary: 'Add a new Provinsi to the store'
      operationId: addProvinsi
      requestBody:
        $ref: '#/components/requestBodies/Provinsi'
      responses:
        '201':
          description: 'Created Provinsi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provinsi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provinsi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/provinsis/{id}':
    get:
      tags:
        - Provinsi
      summary: 'Find Provinsi by ID'
      description: 'Returns a single Provinsi'
      operationId: getProvinsiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Provinsi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provinsi'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provinsi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Provinsi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Provinsi
      summary: 'Update an existing Provinsi'
      operationId: updateProvinsi
      parameters:
        -
          name: id
          in: path
          description: 'Provinsi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Provinsi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Provinsi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Provinsi
      summary: 'Deletes a Provinsi'
      operationId: deleteProvinsi
      parameters:
        -
          name: id
          in: path
          description: 'Provinsi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /refDokumens:
    get:
      tags:
        - RefDokumen
      summary: 'Find list RefDokumen'
      description: 'Returns list of RefDokumen'
      operationId: getRefDokumen
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefDokumen' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefDokumen' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/RefDokumen' } }
                type: object
        '404':
          description: 'RefDokumen not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - RefDokumen
      summary: 'Add a new RefDokumen to the store'
      operationId: addRefDokumen
      requestBody:
        $ref: '#/components/requestBodies/RefDokumen'
      responses:
        '201':
          description: 'Created RefDokumen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefDokumen'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefDokumen'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/refDokumens/{id}':
    get:
      tags:
        - RefDokumen
      summary: 'Find RefDokumen by ID'
      description: 'Returns a single RefDokumen'
      operationId: getRefDokumenById
      parameters:
        -
          name: id
          in: path
          description: 'ID of RefDokumen to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefDokumen'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefDokumen'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'RefDokumen not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - RefDokumen
      summary: 'Update an existing RefDokumen'
      operationId: updateRefDokumen
      parameters:
        -
          name: id
          in: path
          description: 'RefDokumen id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/RefDokumen'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'RefDokumen not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - RefDokumen
      summary: 'Deletes a RefDokumen'
      operationId: deleteRefDokumen
      parameters:
        -
          name: id
          in: path
          description: 'RefDokumen id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /refPindahs:
    get:
      tags:
        - RefPindah
      summary: 'Find list RefPindah'
      description: 'Returns list of RefPindah'
      operationId: getRefPindah
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefPindah' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefPindah' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/RefPindah' } }
                type: object
        '404':
          description: 'RefPindah not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - RefPindah
      summary: 'Add a new RefPindah to the store'
      operationId: addRefPindah
      requestBody:
        $ref: '#/components/requestBodies/RefPindah'
      responses:
        '201':
          description: 'Created RefPindah'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefPindah'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefPindah'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/refPindahs/{id}':
    get:
      tags:
        - RefPindah
      summary: 'Find RefPindah by ID'
      description: 'Returns a single RefPindah'
      operationId: getRefPindahById
      parameters:
        -
          name: id
          in: path
          description: 'ID of RefPindah to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefPindah'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefPindah'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'RefPindah not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - RefPindah
      summary: 'Update an existing RefPindah'
      operationId: updateRefPindah
      parameters:
        -
          name: id
          in: path
          description: 'RefPindah id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/RefPindah'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'RefPindah not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - RefPindah
      summary: 'Deletes a RefPindah'
      operationId: deleteRefPindah
      parameters:
        -
          name: id
          in: path
          description: 'RefPindah id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /refStatusCovids:
    get:
      tags:
        - RefStatusCovid
      summary: 'Find list RefStatusCovid'
      description: 'Returns list of RefStatusCovid'
      operationId: getRefStatusCovid
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefStatusCovid' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefStatusCovid' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/RefStatusCovid' } }
                type: object
        '404':
          description: 'RefStatusCovid not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - RefStatusCovid
      summary: 'Add a new RefStatusCovid to the store'
      operationId: addRefStatusCovid
      requestBody:
        $ref: '#/components/requestBodies/RefStatusCovid'
      responses:
        '201':
          description: 'Created RefStatusCovid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefStatusCovid'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefStatusCovid'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/refStatusCovids/{id}':
    get:
      tags:
        - RefStatusCovid
      summary: 'Find RefStatusCovid by ID'
      description: 'Returns a single RefStatusCovid'
      operationId: getRefStatusCovidById
      parameters:
        -
          name: id
          in: path
          description: 'ID of RefStatusCovid to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefStatusCovid'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefStatusCovid'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'RefStatusCovid not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - RefStatusCovid
      summary: 'Update an existing RefStatusCovid'
      operationId: updateRefStatusCovid
      parameters:
        -
          name: id
          in: path
          description: 'RefStatusCovid id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/RefStatusCovid'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'RefStatusCovid not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - RefStatusCovid
      summary: 'Deletes a RefStatusCovid'
      operationId: deleteRefStatusCovid
      parameters:
        -
          name: id
          in: path
          description: 'RefStatusCovid id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /refSyaratSurats:
    get:
      tags:
        - RefSyaratSurat
      summary: 'Find list RefSyaratSurat'
      description: 'Returns list of RefSyaratSurat'
      operationId: getRefSyaratSurat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefSyaratSurat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RefSyaratSurat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/RefSyaratSurat' } }
                type: object
        '404':
          description: 'RefSyaratSurat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - RefSyaratSurat
      summary: 'Add a new RefSyaratSurat to the store'
      operationId: addRefSyaratSurat
      requestBody:
        $ref: '#/components/requestBodies/RefSyaratSurat'
      responses:
        '201':
          description: 'Created RefSyaratSurat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefSyaratSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefSyaratSurat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/refSyaratSurats/{id}':
    get:
      tags:
        - RefSyaratSurat
      summary: 'Find RefSyaratSurat by ID'
      description: 'Returns a single RefSyaratSurat'
      operationId: getRefSyaratSuratById
      parameters:
        -
          name: id
          in: path
          description: 'ID of RefSyaratSurat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefSyaratSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/RefSyaratSurat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'RefSyaratSurat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - RefSyaratSurat
      summary: 'Update an existing RefSyaratSurat'
      operationId: updateRefSyaratSurat
      parameters:
        -
          name: id
          in: path
          description: 'RefSyaratSurat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/RefSyaratSurat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'RefSyaratSurat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - RefSyaratSurat
      summary: 'Deletes a RefSyaratSurat'
      operationId: deleteRefSyaratSurat
      parameters:
        -
          name: id
          in: path
          description: 'RefSyaratSurat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /sentitems:
    get:
      tags:
        - Sentitems
      summary: 'Find list Sentitems'
      description: 'Returns list of Sentitems'
      operationId: getSentitems
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Sentitems' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Sentitems' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Sentitems' } }
                type: object
        '404':
          description: 'Sentitems not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Sentitems
      summary: 'Add a new Sentitems to the store'
      operationId: addSentitems
      requestBody:
        $ref: '#/components/requestBodies/Sentitems'
      responses:
        '201':
          description: 'Created Sentitems'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sentitems'
            application/xml:
              schema:
                $ref: '#/components/schemas/Sentitems'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/sentitems/{id}':
    get:
      tags:
        - Sentitems
      summary: 'Find Sentitems by ID'
      description: 'Returns a single Sentitems'
      operationId: getSentitemsById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Sentitems to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sentitems'
            application/xml:
              schema:
                $ref: '#/components/schemas/Sentitems'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Sentitems not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Sentitems
      summary: 'Update an existing Sentitems'
      operationId: updateSentitems
      parameters:
        -
          name: id
          in: path
          description: 'Sentitems id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Sentitems'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Sentitems not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Sentitems
      summary: 'Deletes a Sentitems'
      operationId: deleteSentitems
      parameters:
        -
          name: id
          in: path
          description: 'Sentitems id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /settingAplikasiOptions:
    get:
      tags:
        - SettingAplikasiOptions
      summary: 'Find list SettingAplikasiOptions'
      description: 'Returns list of SettingAplikasiOptions'
      operationId: getSettingAplikasiOptions
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingAplikasiOptions' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingAplikasiOptions' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SettingAplikasiOptions' } }
                type: object
        '404':
          description: 'SettingAplikasiOptions not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SettingAplikasiOptions
      summary: 'Add a new SettingAplikasiOptions to the store'
      operationId: addSettingAplikasiOptions
      requestBody:
        $ref: '#/components/requestBodies/SettingAplikasiOptions'
      responses:
        '201':
          description: 'Created SettingAplikasiOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingAplikasiOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingAplikasiOptions'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/settingAplikasiOptions/{id}':
    get:
      tags:
        - SettingAplikasiOptions
      summary: 'Find SettingAplikasiOptions by ID'
      description: 'Returns a single SettingAplikasiOptions'
      operationId: getSettingAplikasiOptionsById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SettingAplikasiOptions to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingAplikasiOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingAplikasiOptions'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SettingAplikasiOptions not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SettingAplikasiOptions
      summary: 'Update an existing SettingAplikasiOptions'
      operationId: updateSettingAplikasiOptions
      parameters:
        -
          name: id
          in: path
          description: 'SettingAplikasiOptions id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SettingAplikasiOptions'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SettingAplikasiOptions not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SettingAplikasiOptions
      summary: 'Deletes a SettingAplikasiOptions'
      operationId: deleteSettingAplikasiOptions
      parameters:
        -
          name: id
          in: path
          description: 'SettingAplikasiOptions id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /settingAplikasis:
    get:
      tags:
        - SettingAplikasi
      summary: 'Find list SettingAplikasi'
      description: 'Returns list of SettingAplikasi'
      operationId: getSettingAplikasi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingAplikasi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingAplikasi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SettingAplikasi' } }
                type: object
        '404':
          description: 'SettingAplikasi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SettingAplikasi
      summary: 'Add a new SettingAplikasi to the store'
      operationId: addSettingAplikasi
      requestBody:
        $ref: '#/components/requestBodies/SettingAplikasi'
      responses:
        '201':
          description: 'Created SettingAplikasi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingAplikasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingAplikasi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/settingAplikasis/{id}':
    get:
      tags:
        - SettingAplikasi
      summary: 'Find SettingAplikasi by ID'
      description: 'Returns a single SettingAplikasi'
      operationId: getSettingAplikasiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SettingAplikasi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingAplikasi'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingAplikasi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SettingAplikasi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SettingAplikasi
      summary: 'Update an existing SettingAplikasi'
      operationId: updateSettingAplikasi
      parameters:
        -
          name: id
          in: path
          description: 'SettingAplikasi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SettingAplikasi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SettingAplikasi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SettingAplikasi
      summary: 'Deletes a SettingAplikasi'
      operationId: deleteSettingAplikasi
      parameters:
        -
          name: id
          in: path
          description: 'SettingAplikasi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /settingModuls:
    get:
      tags:
        - SettingModul
      summary: 'Find list SettingModul'
      description: 'Returns list of SettingModul'
      operationId: getSettingModul
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingModul' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingModul' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SettingModul' } }
                type: object
        '404':
          description: 'SettingModul not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SettingModul
      summary: 'Add a new SettingModul to the store'
      operationId: addSettingModul
      requestBody:
        $ref: '#/components/requestBodies/SettingModul'
      responses:
        '201':
          description: 'Created SettingModul'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModul'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingModul'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/settingModuls/{id}':
    get:
      tags:
        - SettingModul
      summary: 'Find SettingModul by ID'
      description: 'Returns a single SettingModul'
      operationId: getSettingModulById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SettingModul to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModul'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingModul'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SettingModul not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SettingModul
      summary: 'Update an existing SettingModul'
      operationId: updateSettingModul
      parameters:
        -
          name: id
          in: path
          description: 'SettingModul id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SettingModul'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SettingModul not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SettingModul
      summary: 'Deletes a SettingModul'
      operationId: deleteSettingModul
      parameters:
        -
          name: id
          in: path
          description: 'SettingModul id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /settingSms:
    get:
      tags:
        - SettingSms
      summary: 'Find list SettingSms'
      description: 'Returns list of SettingSms'
      operationId: getSettingSms
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingSms' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SettingSms' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SettingSms' } }
                type: object
        '404':
          description: 'SettingSms not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SettingSms
      summary: 'Add a new SettingSms to the store'
      operationId: addSettingSms
      requestBody:
        $ref: '#/components/requestBodies/SettingSms'
      responses:
        '201':
          description: 'Created SettingSms'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingSms'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingSms'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/settingSms/{id}':
    get:
      tags:
        - SettingSms
      summary: 'Find SettingSms by ID'
      description: 'Returns a single SettingSms'
      operationId: getSettingSmsById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SettingSms to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingSms'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingSms'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SettingSms not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SettingSms
      summary: 'Update an existing SettingSms'
      operationId: updateSettingSms
      parameters:
        -
          name: id
          in: path
          description: 'SettingSms id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SettingSms'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SettingSms not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SettingSms
      summary: 'Deletes a SettingSms'
      operationId: deleteSettingSms
      parameters:
        -
          name: id
          in: path
          description: 'SettingSms id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /suplemenTerdatas:
    get:
      tags:
        - SuplemenTerdata
      summary: 'Find list SuplemenTerdata'
      description: 'Returns list of SuplemenTerdata'
      operationId: getSuplemenTerdata
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuplemenTerdata' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuplemenTerdata' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SuplemenTerdata' } }
                type: object
        '404':
          description: 'SuplemenTerdata not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SuplemenTerdata
      summary: 'Add a new SuplemenTerdata to the store'
      operationId: addSuplemenTerdata
      requestBody:
        $ref: '#/components/requestBodies/SuplemenTerdata'
      responses:
        '201':
          description: 'Created SuplemenTerdata'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuplemenTerdata'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuplemenTerdata'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/suplemenTerdatas/{id}':
    get:
      tags:
        - SuplemenTerdata
      summary: 'Find SuplemenTerdata by ID'
      description: 'Returns a single SuplemenTerdata'
      operationId: getSuplemenTerdataById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SuplemenTerdata to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuplemenTerdata'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuplemenTerdata'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SuplemenTerdata not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SuplemenTerdata
      summary: 'Update an existing SuplemenTerdata'
      operationId: updateSuplemenTerdata
      parameters:
        -
          name: id
          in: path
          description: 'SuplemenTerdata id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SuplemenTerdata'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SuplemenTerdata not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SuplemenTerdata
      summary: 'Deletes a SuplemenTerdata'
      operationId: deleteSuplemenTerdata
      parameters:
        -
          name: id
          in: path
          description: 'SuplemenTerdata id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /suplemens:
    get:
      tags:
        - Suplemen
      summary: 'Find list Suplemen'
      description: 'Returns list of Suplemen'
      operationId: getSuplemen
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Suplemen' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Suplemen' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Suplemen' } }
                type: object
        '404':
          description: 'Suplemen not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Suplemen
      summary: 'Add a new Suplemen to the store'
      operationId: addSuplemen
      requestBody:
        $ref: '#/components/requestBodies/Suplemen'
      responses:
        '201':
          description: 'Created Suplemen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suplemen'
            application/xml:
              schema:
                $ref: '#/components/schemas/Suplemen'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/suplemens/{id}':
    get:
      tags:
        - Suplemen
      summary: 'Find Suplemen by ID'
      description: 'Returns a single Suplemen'
      operationId: getSuplemenById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Suplemen to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suplemen'
            application/xml:
              schema:
                $ref: '#/components/schemas/Suplemen'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Suplemen not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Suplemen
      summary: 'Update an existing Suplemen'
      operationId: updateSuplemen
      parameters:
        -
          name: id
          in: path
          description: 'Suplemen id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Suplemen'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Suplemen not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Suplemen
      summary: 'Deletes a Suplemen'
      operationId: deleteSuplemen
      parameters:
        -
          name: id
          in: path
          description: 'Suplemen id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /suratKeluars:
    get:
      tags:
        - SuratKeluar
      summary: 'Find list SuratKeluar'
      description: 'Returns list of SuratKeluar'
      operationId: getSuratKeluar
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuratKeluar' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuratKeluar' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SuratKeluar' } }
                type: object
        '404':
          description: 'SuratKeluar not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SuratKeluar
      summary: 'Add a new SuratKeluar to the store'
      operationId: addSuratKeluar
      requestBody:
        $ref: '#/components/requestBodies/SuratKeluar'
      responses:
        '201':
          description: 'Created SuratKeluar'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuratKeluar'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuratKeluar'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/suratKeluars/{id}':
    get:
      tags:
        - SuratKeluar
      summary: 'Find SuratKeluar by ID'
      description: 'Returns a single SuratKeluar'
      operationId: getSuratKeluarById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SuratKeluar to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuratKeluar'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuratKeluar'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SuratKeluar not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SuratKeluar
      summary: 'Update an existing SuratKeluar'
      operationId: updateSuratKeluar
      parameters:
        -
          name: id
          in: path
          description: 'SuratKeluar id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SuratKeluar'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SuratKeluar not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SuratKeluar
      summary: 'Deletes a SuratKeluar'
      operationId: deleteSuratKeluar
      parameters:
        -
          name: id
          in: path
          description: 'SuratKeluar id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /suratMasuks:
    get:
      tags:
        - SuratMasuk
      summary: 'Find list SuratMasuk'
      description: 'Returns list of SuratMasuk'
      operationId: getSuratMasuk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuratMasuk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SuratMasuk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SuratMasuk' } }
                type: object
        '404':
          description: 'SuratMasuk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SuratMasuk
      summary: 'Add a new SuratMasuk to the store'
      operationId: addSuratMasuk
      requestBody:
        $ref: '#/components/requestBodies/SuratMasuk'
      responses:
        '201':
          description: 'Created SuratMasuk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuratMasuk'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuratMasuk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/suratMasuks/{id}':
    get:
      tags:
        - SuratMasuk
      summary: 'Find SuratMasuk by ID'
      description: 'Returns a single SuratMasuk'
      operationId: getSuratMasukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SuratMasuk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuratMasuk'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuratMasuk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SuratMasuk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SuratMasuk
      summary: 'Update an existing SuratMasuk'
      operationId: updateSuratMasuk
      parameters:
        -
          name: id
          in: path
          description: 'SuratMasuk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SuratMasuk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SuratMasuk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SuratMasuk
      summary: 'Deletes a SuratMasuk'
      operationId: deleteSuratMasuk
      parameters:
        -
          name: id
          in: path
          description: 'SuratMasuk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /syaratSurats:
    get:
      tags:
        - SyaratSurat
      summary: 'Find list SyaratSurat'
      description: 'Returns list of SyaratSurat'
      operationId: getSyaratSurat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SyaratSurat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SyaratSurat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SyaratSurat' } }
                type: object
        '404':
          description: 'SyaratSurat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SyaratSurat
      summary: 'Add a new SyaratSurat to the store'
      operationId: addSyaratSurat
      requestBody:
        $ref: '#/components/requestBodies/SyaratSurat'
      responses:
        '201':
          description: 'Created SyaratSurat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyaratSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyaratSurat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/syaratSurats/{id}':
    get:
      tags:
        - SyaratSurat
      summary: 'Find SyaratSurat by ID'
      description: 'Returns a single SyaratSurat'
      operationId: getSyaratSuratById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SyaratSurat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyaratSurat'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyaratSurat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SyaratSurat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SyaratSurat
      summary: 'Update an existing SyaratSurat'
      operationId: updateSyaratSurat
      parameters:
        -
          name: id
          in: path
          description: 'SyaratSurat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SyaratSurat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SyaratSurat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SyaratSurat
      summary: 'Deletes a SyaratSurat'
      operationId: deleteSyaratSurat
      parameters:
        -
          name: id
          in: path
          description: 'SyaratSurat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /sysTraffics:
    get:
      tags:
        - SysTraffic
      summary: 'Find list SysTraffic'
      description: 'Returns list of SysTraffic'
      operationId: getSysTraffic
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SysTraffic' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SysTraffic' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/SysTraffic' } }
                type: object
        '404':
          description: 'SysTraffic not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - SysTraffic
      summary: 'Add a new SysTraffic to the store'
      operationId: addSysTraffic
      requestBody:
        $ref: '#/components/requestBodies/SysTraffic'
      responses:
        '201':
          description: 'Created SysTraffic'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysTraffic'
            application/xml:
              schema:
                $ref: '#/components/schemas/SysTraffic'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/sysTraffics/{id}':
    get:
      tags:
        - SysTraffic
      summary: 'Find SysTraffic by ID'
      description: 'Returns a single SysTraffic'
      operationId: getSysTrafficById
      parameters:
        -
          name: id
          in: path
          description: 'ID of SysTraffic to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysTraffic'
            application/xml:
              schema:
                $ref: '#/components/schemas/SysTraffic'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'SysTraffic not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - SysTraffic
      summary: 'Update an existing SysTraffic'
      operationId: updateSysTraffic
      parameters:
        -
          name: id
          in: path
          description: 'SysTraffic id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/SysTraffic'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'SysTraffic not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - SysTraffic
      summary: 'Deletes a SysTraffic'
      operationId: deleteSysTraffic
      parameters:
        -
          name: id
          in: path
          description: 'SysTraffic id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /teksBerjalans:
    get:
      tags:
        - TeksBerjalan
      summary: 'Find list TeksBerjalan'
      description: 'Returns list of TeksBerjalan'
      operationId: getTeksBerjalan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TeksBerjalan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TeksBerjalan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TeksBerjalan' } }
                type: object
        '404':
          description: 'TeksBerjalan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TeksBerjalan
      summary: 'Add a new TeksBerjalan to the store'
      operationId: addTeksBerjalan
      requestBody:
        $ref: '#/components/requestBodies/TeksBerjalan'
      responses:
        '201':
          description: 'Created TeksBerjalan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeksBerjalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeksBerjalan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/teksBerjalans/{id}':
    get:
      tags:
        - TeksBerjalan
      summary: 'Find TeksBerjalan by ID'
      description: 'Returns a single TeksBerjalan'
      operationId: getTeksBerjalanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TeksBerjalan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeksBerjalan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeksBerjalan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TeksBerjalan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TeksBerjalan
      summary: 'Update an existing TeksBerjalan'
      operationId: updateTeksBerjalan
      parameters:
        -
          name: id
          in: path
          description: 'TeksBerjalan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TeksBerjalan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TeksBerjalan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TeksBerjalan
      summary: 'Deletes a TeksBerjalan'
      operationId: deleteTeksBerjalan
      parameters:
        -
          name: id
          in: path
          description: 'TeksBerjalan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebAsets:
    get:
      tags:
        - TwebAset
      summary: 'Find list TwebAset'
      description: 'Returns list of TwebAset'
      operationId: getTwebAset
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: object
            properties:
              type: array
              items:
                type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebAset' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebAset' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebAset' } }
                type: object
        '404':
          description: 'TwebAset not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebAset
      summary: 'Add a new TwebAset to the store'
      operationId: addTwebAset
      requestBody:
        $ref: '#/components/requestBodies/TwebAset'
      responses:
        '201':
          description: 'Created TwebAset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebAset'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebAset'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebAsets/{id}':
    get:
      tags:
        - TwebAset
      summary: 'Find TwebAset by ID'
      description: 'Returns a single TwebAset'
      operationId: getTwebAsetById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebAset to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebAset'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebAset'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebAset not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebAset
      summary: 'Update an existing TwebAset'
      operationId: updateTwebAset
      parameters:
        -
          name: id
          in: path
          description: 'TwebAset id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebAset'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebAset not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebAset
      summary: 'Deletes a TwebAset'
      operationId: deleteTwebAset
      parameters:
        -
          name: id
          in: path
          description: 'TwebAset id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebCacats:
    get:
      tags:
        - TwebCacat
      summary: 'Find list TwebCacat'
      description: 'Returns list of TwebCacat'
      operationId: getTwebCacat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebCacat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebCacat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebCacat' } }
                type: object
        '404':
          description: 'TwebCacat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebCacat
      summary: 'Add a new TwebCacat to the store'
      operationId: addTwebCacat
      requestBody:
        $ref: '#/components/requestBodies/TwebCacat'
      responses:
        '201':
          description: 'Created TwebCacat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebCacat'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebCacat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebCacats/{id}':
    get:
      tags:
        - TwebCacat
      summary: 'Find TwebCacat by ID'
      description: 'Returns a single TwebCacat'
      operationId: getTwebCacatById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebCacat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebCacat'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebCacat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebCacat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebCacat
      summary: 'Update an existing TwebCacat'
      operationId: updateTwebCacat
      parameters:
        -
          name: id
          in: path
          description: 'TwebCacat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebCacat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebCacat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebCacat
      summary: 'Deletes a TwebCacat'
      operationId: deleteTwebCacat
      parameters:
        -
          name: id
          in: path
          description: 'TwebCacat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebCaraKbs:
    get:
      tags:
        - TwebCaraKb
      summary: 'Find list TwebCaraKb'
      description: 'Returns list of TwebCaraKb'
      operationId: getTwebCaraKb
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebCaraKb' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebCaraKb' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebCaraKb' } }
                type: object
        '404':
          description: 'TwebCaraKb not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebCaraKb
      summary: 'Add a new TwebCaraKb to the store'
      operationId: addTwebCaraKb
      requestBody:
        $ref: '#/components/requestBodies/TwebCaraKb'
      responses:
        '201':
          description: 'Created TwebCaraKb'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebCaraKb'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebCaraKb'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebCaraKbs/{id}':
    get:
      tags:
        - TwebCaraKb
      summary: 'Find TwebCaraKb by ID'
      description: 'Returns a single TwebCaraKb'
      operationId: getTwebCaraKbById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebCaraKb to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebCaraKb'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebCaraKb'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebCaraKb not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebCaraKb
      summary: 'Update an existing TwebCaraKb'
      operationId: updateTwebCaraKb
      parameters:
        -
          name: id
          in: path
          description: 'TwebCaraKb id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebCaraKb'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebCaraKb not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebCaraKb
      summary: 'Deletes a TwebCaraKb'
      operationId: deleteTwebCaraKb
      parameters:
        -
          name: id
          in: path
          description: 'TwebCaraKb id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebDesaPamongs:
    get:
      tags:
        - TwebDesaPamong
      summary: 'Find list TwebDesaPamong'
      description: 'Returns list of TwebDesaPamong'
      operationId: getTwebDesaPamong
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebDesaPamong' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebDesaPamong' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebDesaPamong' } }
                type: object
        '404':
          description: 'TwebDesaPamong not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebDesaPamong
      summary: 'Add a new TwebDesaPamong to the store'
      operationId: addTwebDesaPamong
      requestBody:
        $ref: '#/components/requestBodies/TwebDesaPamong'
      responses:
        '201':
          description: 'Created TwebDesaPamong'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebDesaPamong'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebDesaPamong'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebDesaPamongs/{id}':
    get:
      tags:
        - TwebDesaPamong
      summary: 'Find TwebDesaPamong by ID'
      description: 'Returns a single TwebDesaPamong'
      operationId: getTwebDesaPamongById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebDesaPamong to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebDesaPamong'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebDesaPamong'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebDesaPamong not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebDesaPamong
      summary: 'Update an existing TwebDesaPamong'
      operationId: updateTwebDesaPamong
      parameters:
        -
          name: id
          in: path
          description: 'TwebDesaPamong id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebDesaPamong'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebDesaPamong not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebDesaPamong
      summary: 'Deletes a TwebDesaPamong'
      operationId: deleteTwebDesaPamong
      parameters:
        -
          name: id
          in: path
          description: 'TwebDesaPamong id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebGolonganDarahs:
    get:
      tags:
        - TwebGolonganDarah
      summary: 'Find list TwebGolonganDarah'
      description: 'Returns list of TwebGolonganDarah'
      operationId: getTwebGolonganDarah
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebGolonganDarah' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebGolonganDarah' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebGolonganDarah' } }
                type: object
        '404':
          description: 'TwebGolonganDarah not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebGolonganDarah
      summary: 'Add a new TwebGolonganDarah to the store'
      operationId: addTwebGolonganDarah
      requestBody:
        $ref: '#/components/requestBodies/TwebGolonganDarah'
      responses:
        '201':
          description: 'Created TwebGolonganDarah'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebGolonganDarah'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebGolonganDarah'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebGolonganDarahs/{id}':
    get:
      tags:
        - TwebGolonganDarah
      summary: 'Find TwebGolonganDarah by ID'
      description: 'Returns a single TwebGolonganDarah'
      operationId: getTwebGolonganDarahById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebGolonganDarah to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebGolonganDarah'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebGolonganDarah'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebGolonganDarah not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebGolonganDarah
      summary: 'Update an existing TwebGolonganDarah'
      operationId: updateTwebGolonganDarah
      parameters:
        -
          name: id
          in: path
          description: 'TwebGolonganDarah id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebGolonganDarah'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebGolonganDarah not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebGolonganDarah
      summary: 'Deletes a TwebGolonganDarah'
      operationId: deleteTwebGolonganDarah
      parameters:
        -
          name: id
          in: path
          description: 'TwebGolonganDarah id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebKeluargaSejahteras:
    get:
      tags:
        - TwebKeluargaSejahtera
      summary: 'Find list TwebKeluargaSejahtera'
      description: 'Returns list of TwebKeluargaSejahtera'
      operationId: getTwebKeluargaSejahtera
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebKeluargaSejahtera' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebKeluargaSejahtera' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebKeluargaSejahtera' } }
                type: object
        '404':
          description: 'TwebKeluargaSejahtera not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebKeluargaSejahtera
      summary: 'Add a new TwebKeluargaSejahtera to the store'
      operationId: addTwebKeluargaSejahtera
      requestBody:
        $ref: '#/components/requestBodies/TwebKeluargaSejahtera'
      responses:
        '201':
          description: 'Created TwebKeluargaSejahtera'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebKeluargaSejahtera'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebKeluargaSejahtera'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebKeluargaSejahteras/{id}':
    get:
      tags:
        - TwebKeluargaSejahtera
      summary: 'Find TwebKeluargaSejahtera by ID'
      description: 'Returns a single TwebKeluargaSejahtera'
      operationId: getTwebKeluargaSejahteraById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebKeluargaSejahtera to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebKeluargaSejahtera'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebKeluargaSejahtera'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebKeluargaSejahtera not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebKeluargaSejahtera
      summary: 'Update an existing TwebKeluargaSejahtera'
      operationId: updateTwebKeluargaSejahtera
      parameters:
        -
          name: id
          in: path
          description: 'TwebKeluargaSejahtera id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebKeluargaSejahtera'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebKeluargaSejahtera not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebKeluargaSejahtera
      summary: 'Deletes a TwebKeluargaSejahtera'
      operationId: deleteTwebKeluargaSejahtera
      parameters:
        -
          name: id
          in: path
          description: 'TwebKeluargaSejahtera id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebKeluargas:
    get:
      tags:
        - TwebKeluarga
      summary: 'Find list TwebKeluarga'
      description: 'Returns list of TwebKeluarga'
      operationId: getTwebKeluarga
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebKeluarga' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebKeluarga' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebKeluarga' } }
                type: object
        '404':
          description: 'TwebKeluarga not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebKeluarga
      summary: 'Add a new TwebKeluarga to the store'
      operationId: addTwebKeluarga
      requestBody:
        $ref: '#/components/requestBodies/TwebKeluarga'
      responses:
        '201':
          description: 'Created TwebKeluarga'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebKeluarga'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebKeluargas/{id}':
    get:
      tags:
        - TwebKeluarga
      summary: 'Find TwebKeluarga by ID'
      description: 'Returns a single TwebKeluarga'
      operationId: getTwebKeluargaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebKeluarga to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebKeluarga'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebKeluarga'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebKeluarga not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebKeluarga
      summary: 'Update an existing TwebKeluarga'
      operationId: updateTwebKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'TwebKeluarga id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebKeluarga'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebKeluarga not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebKeluarga
      summary: 'Deletes a TwebKeluarga'
      operationId: deleteTwebKeluarga
      parameters:
        -
          name: id
          in: path
          description: 'TwebKeluarga id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukAgamas:
    get:
      tags:
        - TwebPendudukAgama
      summary: 'Find list TwebPendudukAgama'
      description: 'Returns list of TwebPendudukAgama'
      operationId: getTwebPendudukAgama
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAgama' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAgama' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAgama' } }
                type: object
        '404':
          description: 'TwebPendudukAgama not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukAgama
      summary: 'Add a new TwebPendudukAgama to the store'
      operationId: addTwebPendudukAgama
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukAgama'
      responses:
        '201':
          description: 'Created TwebPendudukAgama'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukAgama'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukAgama'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukAgamas/{id}':
    get:
      tags:
        - TwebPendudukAgama
      summary: 'Find TwebPendudukAgama by ID'
      description: 'Returns a single TwebPendudukAgama'
      operationId: getTwebPendudukAgamaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukAgama to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukAgama'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukAgama'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukAgama not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukAgama
      summary: 'Update an existing TwebPendudukAgama'
      operationId: updateTwebPendudukAgama
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukAgama id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukAgama'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukAgama not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukAgama
      summary: 'Deletes a TwebPendudukAgama'
      operationId: deleteTwebPendudukAgama
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukAgama id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukAsuransis:
    get:
      tags:
        - TwebPendudukAsuransi
      summary: 'Find list TwebPendudukAsuransi'
      description: 'Returns list of TwebPendudukAsuransi'
      operationId: getTwebPendudukAsuransi
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAsuransi' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAsuransi' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukAsuransi' } }
                type: object
        '404':
          description: 'TwebPendudukAsuransi not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukAsuransi
      summary: 'Add a new TwebPendudukAsuransi to the store'
      operationId: addTwebPendudukAsuransi
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukAsuransi'
      responses:
        '201':
          description: 'Created TwebPendudukAsuransi'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukAsuransi'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukAsuransi'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukAsuransis/{id}':
    get:
      tags:
        - TwebPendudukAsuransi
      summary: 'Find TwebPendudukAsuransi by ID'
      description: 'Returns a single TwebPendudukAsuransi'
      operationId: getTwebPendudukAsuransiById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukAsuransi to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukAsuransi'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukAsuransi'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukAsuransi not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukAsuransi
      summary: 'Update an existing TwebPendudukAsuransi'
      operationId: updateTwebPendudukAsuransi
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukAsuransi id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukAsuransi'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukAsuransi not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukAsuransi
      summary: 'Deletes a TwebPendudukAsuransi'
      operationId: deleteTwebPendudukAsuransi
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukAsuransi id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukHubungans:
    get:
      tags:
        - TwebPendudukHubungan
      summary: 'Find list TwebPendudukHubungan'
      description: 'Returns list of TwebPendudukHubungan'
      operationId: getTwebPendudukHubungan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukHubungan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukHubungan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukHubungan' } }
                type: object
        '404':
          description: 'TwebPendudukHubungan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukHubungan
      summary: 'Add a new TwebPendudukHubungan to the store'
      operationId: addTwebPendudukHubungan
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukHubungan'
      responses:
        '201':
          description: 'Created TwebPendudukHubungan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukHubungan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukHubungan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukHubungans/{id}':
    get:
      tags:
        - TwebPendudukHubungan
      summary: 'Find TwebPendudukHubungan by ID'
      description: 'Returns a single TwebPendudukHubungan'
      operationId: getTwebPendudukHubunganById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukHubungan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukHubungan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukHubungan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukHubungan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukHubungan
      summary: 'Update an existing TwebPendudukHubungan'
      operationId: updateTwebPendudukHubungan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukHubungan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukHubungan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukHubungan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukHubungan
      summary: 'Deletes a TwebPendudukHubungan'
      operationId: deleteTwebPendudukHubungan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukHubungan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukKawins:
    get:
      tags:
        - TwebPendudukKawin
      summary: 'Find list TwebPendudukKawin'
      description: 'Returns list of TwebPendudukKawin'
      operationId: getTwebPendudukKawin
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukKawin' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukKawin' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukKawin' } }
                type: object
        '404':
          description: 'TwebPendudukKawin not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukKawin
      summary: 'Add a new TwebPendudukKawin to the store'
      operationId: addTwebPendudukKawin
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukKawin'
      responses:
        '201':
          description: 'Created TwebPendudukKawin'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukKawin'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukKawin'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukKawins/{id}':
    get:
      tags:
        - TwebPendudukKawin
      summary: 'Find TwebPendudukKawin by ID'
      description: 'Returns a single TwebPendudukKawin'
      operationId: getTwebPendudukKawinById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukKawin to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukKawin'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukKawin'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukKawin not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukKawin
      summary: 'Update an existing TwebPendudukKawin'
      operationId: updateTwebPendudukKawin
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukKawin id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukKawin'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukKawin not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukKawin
      summary: 'Deletes a TwebPendudukKawin'
      operationId: deleteTwebPendudukKawin
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukKawin id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukMandiris:
    get:
      tags:
        - TwebPendudukMandiri
      summary: 'Find list TwebPendudukMandiri'
      description: 'Returns list of TwebPendudukMandiri'
      operationId: getTwebPendudukMandiri
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMandiri' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMandiri' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMandiri' } }
                type: object
        '404':
          description: 'TwebPendudukMandiri not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukMandiri
      summary: 'Add a new TwebPendudukMandiri to the store'
      operationId: addTwebPendudukMandiri
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukMandiri'
      responses:
        '201':
          description: 'Created TwebPendudukMandiri'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukMandiri'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukMandiri'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukMandiris/{id}':
    get:
      tags:
        - TwebPendudukMandiri
      summary: 'Find TwebPendudukMandiri by ID'
      description: 'Returns a single TwebPendudukMandiri'
      operationId: getTwebPendudukMandiriById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukMandiri to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukMandiri'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukMandiri'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukMandiri not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukMandiri
      summary: 'Update an existing TwebPendudukMandiri'
      operationId: updateTwebPendudukMandiri
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukMandiri id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukMandiri'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukMandiri not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukMandiri
      summary: 'Deletes a TwebPendudukMandiri'
      operationId: deleteTwebPendudukMandiri
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukMandiri id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukMaps:
    get:
      tags:
        - TwebPendudukMap
      summary: 'Find list TwebPendudukMap'
      description: 'Returns list of TwebPendudukMap'
      operationId: getTwebPendudukMap
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMap' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMap' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukMap' } }
                type: object
        '404':
          description: 'TwebPendudukMap not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukMap
      summary: 'Add a new TwebPendudukMap to the store'
      operationId: addTwebPendudukMap
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukMap'
      responses:
        '201':
          description: 'Created TwebPendudukMap'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukMap'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukMap'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukMaps/{id}':
    get:
      tags:
        - TwebPendudukMap
      summary: 'Find TwebPendudukMap by ID'
      description: 'Returns a single TwebPendudukMap'
      operationId: getTwebPendudukMapById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukMap to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukMap'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukMap'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukMap not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukMap
      summary: 'Update an existing TwebPendudukMap'
      operationId: updateTwebPendudukMap
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukMap id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukMap'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukMap not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukMap
      summary: 'Deletes a TwebPendudukMap'
      operationId: deleteTwebPendudukMap
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukMap id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukPekerjaans:
    get:
      tags:
        - TwebPendudukPekerjaan
      summary: 'Find list TwebPendudukPekerjaan'
      description: 'Returns list of TwebPendudukPekerjaan'
      operationId: getTwebPendudukPekerjaan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPekerjaan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPekerjaan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPekerjaan' } }
                type: object
        '404':
          description: 'TwebPendudukPekerjaan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukPekerjaan
      summary: 'Add a new TwebPendudukPekerjaan to the store'
      operationId: addTwebPendudukPekerjaan
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPekerjaan'
      responses:
        '201':
          description: 'Created TwebPendudukPekerjaan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPekerjaan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPekerjaan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukPekerjaans/{id}':
    get:
      tags:
        - TwebPendudukPekerjaan
      summary: 'Find TwebPendudukPekerjaan by ID'
      description: 'Returns a single TwebPendudukPekerjaan'
      operationId: getTwebPendudukPekerjaanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukPekerjaan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPekerjaan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPekerjaan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukPekerjaan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukPekerjaan
      summary: 'Update an existing TwebPendudukPekerjaan'
      operationId: updateTwebPendudukPekerjaan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPekerjaan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPekerjaan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukPekerjaan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukPekerjaan
      summary: 'Deletes a TwebPendudukPekerjaan'
      operationId: deleteTwebPendudukPekerjaan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPekerjaan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukPendidikanKks:
    get:
      tags:
        - TwebPendudukPendidikanKk
      summary: 'Find list TwebPendudukPendidikanKk'
      description: 'Returns list of TwebPendudukPendidikanKk'
      operationId: getTwebPendudukPendidikanKk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikanKk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikanKk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikanKk' } }
                type: object
        '404':
          description: 'TwebPendudukPendidikanKk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukPendidikanKk
      summary: 'Add a new TwebPendudukPendidikanKk to the store'
      operationId: addTwebPendudukPendidikanKk
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPendidikanKk'
      responses:
        '201':
          description: 'Created TwebPendudukPendidikanKk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikanKk'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikanKk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukPendidikanKks/{id}':
    get:
      tags:
        - TwebPendudukPendidikanKk
      summary: 'Find TwebPendudukPendidikanKk by ID'
      description: 'Returns a single TwebPendudukPendidikanKk'
      operationId: getTwebPendudukPendidikanKkById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukPendidikanKk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikanKk'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikanKk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukPendidikanKk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukPendidikanKk
      summary: 'Update an existing TwebPendudukPendidikanKk'
      operationId: updateTwebPendudukPendidikanKk
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPendidikanKk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPendidikanKk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukPendidikanKk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukPendidikanKk
      summary: 'Deletes a TwebPendudukPendidikanKk'
      operationId: deleteTwebPendudukPendidikanKk
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPendidikanKk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukPendidikans:
    get:
      tags:
        - TwebPendudukPendidikan
      summary: 'Find list TwebPendudukPendidikan'
      description: 'Returns list of TwebPendudukPendidikan'
      operationId: getTwebPendudukPendidikan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukPendidikan' } }
                type: object
        '404':
          description: 'TwebPendudukPendidikan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukPendidikan
      summary: 'Add a new TwebPendudukPendidikan to the store'
      operationId: addTwebPendudukPendidikan
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPendidikan'
      responses:
        '201':
          description: 'Created TwebPendudukPendidikan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukPendidikans/{id}':
    get:
      tags:
        - TwebPendudukPendidikan
      summary: 'Find TwebPendudukPendidikan by ID'
      description: 'Returns a single TwebPendudukPendidikan'
      operationId: getTwebPendudukPendidikanById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukPendidikan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukPendidikan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukPendidikan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukPendidikan
      summary: 'Update an existing TwebPendudukPendidikan'
      operationId: updateTwebPendudukPendidikan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPendidikan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukPendidikan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukPendidikan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukPendidikan
      summary: 'Deletes a TwebPendudukPendidikan'
      operationId: deleteTwebPendudukPendidikan
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukPendidikan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukSices:
    get:
      tags:
        - TwebPendudukSex
      summary: 'Find list TwebPendudukSex'
      description: 'Returns list of TwebPendudukSex'
      operationId: getTwebPendudukSex
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukSex' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukSex' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukSex' } }
                type: object
        '404':
          description: 'TwebPendudukSex not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukSex
      summary: 'Add a new TwebPendudukSex to the store'
      operationId: addTwebPendudukSex
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukSex'
      responses:
        '201':
          description: 'Created TwebPendudukSex'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukSex'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukSex'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukSices/{id}':
    get:
      tags:
        - TwebPendudukSex
      summary: 'Find TwebPendudukSex by ID'
      description: 'Returns a single TwebPendudukSex'
      operationId: getTwebPendudukSexById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukSex to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukSex'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukSex'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukSex not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukSex
      summary: 'Update an existing TwebPendudukSex'
      operationId: updateTwebPendudukSex
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukSex id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukSex'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukSex not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukSex
      summary: 'Deletes a TwebPendudukSex'
      operationId: deleteTwebPendudukSex
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukSex id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukStatuses:
    get:
      tags:
        - TwebPendudukStatus
      summary: 'Find list TwebPendudukStatus'
      description: 'Returns list of TwebPendudukStatus'
      operationId: getTwebPendudukStatus
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukStatus' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukStatus' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukStatus' } }
                type: object
        '404':
          description: 'TwebPendudukStatus not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukStatus
      summary: 'Add a new TwebPendudukStatus to the store'
      operationId: addTwebPendudukStatus
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukStatus'
      responses:
        '201':
          description: 'Created TwebPendudukStatus'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukStatus'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukStatuses/{id}':
    get:
      tags:
        - TwebPendudukStatus
      summary: 'Find TwebPendudukStatus by ID'
      description: 'Returns a single TwebPendudukStatus'
      operationId: getTwebPendudukStatusById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukStatus to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukStatus'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukStatus not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukStatus
      summary: 'Update an existing TwebPendudukStatus'
      operationId: updateTwebPendudukStatus
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukStatus id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukStatus'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukStatus not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukStatus
      summary: 'Deletes a TwebPendudukStatus'
      operationId: deleteTwebPendudukStatus
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukStatus id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukUmurs:
    get:
      tags:
        - TwebPendudukUmur
      summary: 'Find list TwebPendudukUmur'
      description: 'Returns list of TwebPendudukUmur'
      operationId: getTwebPendudukUmur
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukUmur' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukUmur' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukUmur' } }
                type: object
        '404':
          description: 'TwebPendudukUmur not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukUmur
      summary: 'Add a new TwebPendudukUmur to the store'
      operationId: addTwebPendudukUmur
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukUmur'
      responses:
        '201':
          description: 'Created TwebPendudukUmur'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukUmur'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukUmur'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukUmurs/{id}':
    get:
      tags:
        - TwebPendudukUmur
      summary: 'Find TwebPendudukUmur by ID'
      description: 'Returns a single TwebPendudukUmur'
      operationId: getTwebPendudukUmurById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukUmur to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukUmur'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukUmur'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukUmur not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukUmur
      summary: 'Update an existing TwebPendudukUmur'
      operationId: updateTwebPendudukUmur
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukUmur id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukUmur'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukUmur not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukUmur
      summary: 'Deletes a TwebPendudukUmur'
      operationId: deleteTwebPendudukUmur
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukUmur id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPendudukWarganegaras:
    get:
      tags:
        - TwebPendudukWarganegara
      summary: 'Find list TwebPendudukWarganegara'
      description: 'Returns list of TwebPendudukWarganegara'
      operationId: getTwebPendudukWarganegara
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukWarganegara' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPendudukWarganegara' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPendudukWarganegara' } }
                type: object
        '404':
          description: 'TwebPendudukWarganegara not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPendudukWarganegara
      summary: 'Add a new TwebPendudukWarganegara to the store'
      operationId: addTwebPendudukWarganegara
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukWarganegara'
      responses:
        '201':
          description: 'Created TwebPendudukWarganegara'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukWarganegara'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukWarganegara'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPendudukWarganegaras/{id}':
    get:
      tags:
        - TwebPendudukWarganegara
      summary: 'Find TwebPendudukWarganegara by ID'
      description: 'Returns a single TwebPendudukWarganegara'
      operationId: getTwebPendudukWarganegaraById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPendudukWarganegara to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPendudukWarganegara'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPendudukWarganegara'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPendudukWarganegara not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPendudukWarganegara
      summary: 'Update an existing TwebPendudukWarganegara'
      operationId: updateTwebPendudukWarganegara
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukWarganegara id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPendudukWarganegara'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPendudukWarganegara not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPendudukWarganegara
      summary: 'Deletes a TwebPendudukWarganegara'
      operationId: deleteTwebPendudukWarganegara
      parameters:
        -
          name: id
          in: path
          description: 'TwebPendudukWarganegara id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebPenduduks:
    get:
      tags:
        - TwebPenduduk
      summary: 'Find list TwebPenduduk'
      description: 'Returns list of TwebPenduduk'
      operationId: getTwebPenduduk
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPenduduk' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebPenduduk' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebPenduduk' } }
                type: object
        '404':
          description: 'TwebPenduduk not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebPenduduk
      summary: 'Add a new TwebPenduduk to the store'
      operationId: addTwebPenduduk
      requestBody:
        $ref: '#/components/requestBodies/TwebPenduduk'
      responses:
        '201':
          description: 'Created TwebPenduduk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPenduduk'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebPenduduks/{id}':
    get:
      tags:
        - TwebPenduduk
      summary: 'Find TwebPenduduk by ID'
      description: 'Returns a single TwebPenduduk'
      operationId: getTwebPendudukById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebPenduduk to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebPenduduk'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebPenduduk'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebPenduduk not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebPenduduk
      summary: 'Update an existing TwebPenduduk'
      operationId: updateTwebPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'TwebPenduduk id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebPenduduk'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebPenduduk not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebPenduduk
      summary: 'Deletes a TwebPenduduk'
      operationId: deleteTwebPenduduk
      parameters:
        -
          name: id
          in: path
          description: 'TwebPenduduk id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebRtmHubungans:
    get:
      tags:
        - TwebRtmHubungan
      summary: 'Find list TwebRtmHubungan'
      description: 'Returns list of TwebRtmHubungan'
      operationId: getTwebRtmHubungan
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebRtmHubungan' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebRtmHubungan' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebRtmHubungan' } }
                type: object
        '404':
          description: 'TwebRtmHubungan not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebRtmHubungan
      summary: 'Add a new TwebRtmHubungan to the store'
      operationId: addTwebRtmHubungan
      requestBody:
        $ref: '#/components/requestBodies/TwebRtmHubungan'
      responses:
        '201':
          description: 'Created TwebRtmHubungan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebRtmHubungan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebRtmHubungan'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebRtmHubungans/{id}':
    get:
      tags:
        - TwebRtmHubungan
      summary: 'Find TwebRtmHubungan by ID'
      description: 'Returns a single TwebRtmHubungan'
      operationId: getTwebRtmHubunganById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebRtmHubungan to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebRtmHubungan'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebRtmHubungan'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebRtmHubungan not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebRtmHubungan
      summary: 'Update an existing TwebRtmHubungan'
      operationId: updateTwebRtmHubungan
      parameters:
        -
          name: id
          in: path
          description: 'TwebRtmHubungan id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebRtmHubungan'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebRtmHubungan not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebRtmHubungan
      summary: 'Deletes a TwebRtmHubungan'
      operationId: deleteTwebRtmHubungan
      parameters:
        -
          name: id
          in: path
          description: 'TwebRtmHubungan id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebRtms:
    get:
      tags:
        - TwebRtm
      summary: 'Find list TwebRtm'
      description: 'Returns list of TwebRtm'
      operationId: getTwebRtm
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebRtm' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebRtm' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebRtm' } }
                type: object
        '404':
          description: 'TwebRtm not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebRtm
      summary: 'Add a new TwebRtm to the store'
      operationId: addTwebRtm
      requestBody:
        $ref: '#/components/requestBodies/TwebRtm'
      responses:
        '201':
          description: 'Created TwebRtm'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebRtm'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebRtm'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebRtms/{id}':
    get:
      tags:
        - TwebRtm
      summary: 'Find TwebRtm by ID'
      description: 'Returns a single TwebRtm'
      operationId: getTwebRtmById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebRtm to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebRtm'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebRtm'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebRtm not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebRtm
      summary: 'Update an existing TwebRtm'
      operationId: updateTwebRtm
      parameters:
        -
          name: id
          in: path
          description: 'TwebRtm id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebRtm'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebRtm not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebRtm
      summary: 'Deletes a TwebRtm'
      operationId: deleteTwebRtm
      parameters:
        -
          name: id
          in: path
          description: 'TwebRtm id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebSakitMenahuns:
    get:
      tags:
        - TwebSakitMenahun
      summary: 'Find list TwebSakitMenahun'
      description: 'Returns list of TwebSakitMenahun'
      operationId: getTwebSakitMenahun
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSakitMenahun' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSakitMenahun' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebSakitMenahun' } }
                type: object
        '404':
          description: 'TwebSakitMenahun not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebSakitMenahun
      summary: 'Add a new TwebSakitMenahun to the store'
      operationId: addTwebSakitMenahun
      requestBody:
        $ref: '#/components/requestBodies/TwebSakitMenahun'
      responses:
        '201':
          description: 'Created TwebSakitMenahun'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSakitMenahun'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSakitMenahun'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebSakitMenahuns/{id}':
    get:
      tags:
        - TwebSakitMenahun
      summary: 'Find TwebSakitMenahun by ID'
      description: 'Returns a single TwebSakitMenahun'
      operationId: getTwebSakitMenahunById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebSakitMenahun to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSakitMenahun'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSakitMenahun'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebSakitMenahun not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebSakitMenahun
      summary: 'Update an existing TwebSakitMenahun'
      operationId: updateTwebSakitMenahun
      parameters:
        -
          name: id
          in: path
          description: 'TwebSakitMenahun id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebSakitMenahun'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebSakitMenahun not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebSakitMenahun
      summary: 'Deletes a TwebSakitMenahun'
      operationId: deleteTwebSakitMenahun
      parameters:
        -
          name: id
          in: path
          description: 'TwebSakitMenahun id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebStatusDasars:
    get:
      tags:
        - TwebStatusDasar
      summary: 'Find list TwebStatusDasar'
      description: 'Returns list of TwebStatusDasar'
      operationId: getTwebStatusDasar
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebStatusDasar' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebStatusDasar' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebStatusDasar' } }
                type: object
        '404':
          description: 'TwebStatusDasar not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebStatusDasar
      summary: 'Add a new TwebStatusDasar to the store'
      operationId: addTwebStatusDasar
      requestBody:
        $ref: '#/components/requestBodies/TwebStatusDasar'
      responses:
        '201':
          description: 'Created TwebStatusDasar'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebStatusDasar'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebStatusDasar'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebStatusDasars/{id}':
    get:
      tags:
        - TwebStatusDasar
      summary: 'Find TwebStatusDasar by ID'
      description: 'Returns a single TwebStatusDasar'
      operationId: getTwebStatusDasarById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebStatusDasar to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebStatusDasar'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebStatusDasar'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebStatusDasar not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebStatusDasar
      summary: 'Update an existing TwebStatusDasar'
      operationId: updateTwebStatusDasar
      parameters:
        -
          name: id
          in: path
          description: 'TwebStatusDasar id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebStatusDasar'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebStatusDasar not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebStatusDasar
      summary: 'Deletes a TwebStatusDasar'
      operationId: deleteTwebStatusDasar
      parameters:
        -
          name: id
          in: path
          description: 'TwebStatusDasar id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebStatusKtps:
    get:
      tags:
        - TwebStatusKtp
      summary: 'Find list TwebStatusKtp'
      description: 'Returns list of TwebStatusKtp'
      operationId: getTwebStatusKtp
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebStatusKtp' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebStatusKtp' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebStatusKtp' } }
                type: object
        '404':
          description: 'TwebStatusKtp not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebStatusKtp
      summary: 'Add a new TwebStatusKtp to the store'
      operationId: addTwebStatusKtp
      requestBody:
        $ref: '#/components/requestBodies/TwebStatusKtp'
      responses:
        '201':
          description: 'Created TwebStatusKtp'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebStatusKtp'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebStatusKtp'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebStatusKtps/{id}':
    get:
      tags:
        - TwebStatusKtp
      summary: 'Find TwebStatusKtp by ID'
      description: 'Returns a single TwebStatusKtp'
      operationId: getTwebStatusKtpById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebStatusKtp to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebStatusKtp'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebStatusKtp'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebStatusKtp not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebStatusKtp
      summary: 'Update an existing TwebStatusKtp'
      operationId: updateTwebStatusKtp
      parameters:
        -
          name: id
          in: path
          description: 'TwebStatusKtp id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebStatusKtp'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebStatusKtp not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebStatusKtp
      summary: 'Deletes a TwebStatusKtp'
      operationId: deleteTwebStatusKtp
      parameters:
        -
          name: id
          in: path
          description: 'TwebStatusKtp id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebSuratAtributs:
    get:
      tags:
        - TwebSuratAtribut
      summary: 'Find list TwebSuratAtribut'
      description: 'Returns list of TwebSuratAtribut'
      operationId: getTwebSuratAtribut
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSuratAtribut' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSuratAtribut' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebSuratAtribut' } }
                type: object
        '404':
          description: 'TwebSuratAtribut not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebSuratAtribut
      summary: 'Add a new TwebSuratAtribut to the store'
      operationId: addTwebSuratAtribut
      requestBody:
        $ref: '#/components/requestBodies/TwebSuratAtribut'
      responses:
        '201':
          description: 'Created TwebSuratAtribut'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSuratAtribut'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSuratAtribut'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebSuratAtributs/{id}':
    get:
      tags:
        - TwebSuratAtribut
      summary: 'Find TwebSuratAtribut by ID'
      description: 'Returns a single TwebSuratAtribut'
      operationId: getTwebSuratAtributById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebSuratAtribut to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSuratAtribut'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSuratAtribut'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebSuratAtribut not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebSuratAtribut
      summary: 'Update an existing TwebSuratAtribut'
      operationId: updateTwebSuratAtribut
      parameters:
        -
          name: id
          in: path
          description: 'TwebSuratAtribut id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebSuratAtribut'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebSuratAtribut not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebSuratAtribut
      summary: 'Deletes a TwebSuratAtribut'
      operationId: deleteTwebSuratAtribut
      parameters:
        -
          name: id
          in: path
          description: 'TwebSuratAtribut id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebSuratFormats:
    get:
      tags:
        - TwebSuratFormat
      summary: 'Find list TwebSuratFormat'
      description: 'Returns list of TwebSuratFormat'
      operationId: getTwebSuratFormat
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSuratFormat' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebSuratFormat' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebSuratFormat' } }
                type: object
        '404':
          description: 'TwebSuratFormat not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebSuratFormat
      summary: 'Add a new TwebSuratFormat to the store'
      operationId: addTwebSuratFormat
      requestBody:
        $ref: '#/components/requestBodies/TwebSuratFormat'
      responses:
        '201':
          description: 'Created TwebSuratFormat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSuratFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSuratFormat'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebSuratFormats/{id}':
    get:
      tags:
        - TwebSuratFormat
      summary: 'Find TwebSuratFormat by ID'
      description: 'Returns a single TwebSuratFormat'
      operationId: getTwebSuratFormatById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebSuratFormat to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebSuratFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebSuratFormat'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebSuratFormat not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebSuratFormat
      summary: 'Update an existing TwebSuratFormat'
      operationId: updateTwebSuratFormat
      parameters:
        -
          name: id
          in: path
          description: 'TwebSuratFormat id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebSuratFormat'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebSuratFormat not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebSuratFormat
      summary: 'Deletes a TwebSuratFormat'
      operationId: deleteTwebSuratFormat
      parameters:
        -
          name: id
          in: path
          description: 'TwebSuratFormat id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /twebWilClusterdesas:
    get:
      tags:
        - TwebWilClusterdesa
      summary: 'Find list TwebWilClusterdesa'
      description: 'Returns list of TwebWilClusterdesa'
      operationId: getTwebWilClusterdesa
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebWilClusterdesa' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TwebWilClusterdesa' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/TwebWilClusterdesa' } }
                type: object
        '404':
          description: 'TwebWilClusterdesa not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - TwebWilClusterdesa
      summary: 'Add a new TwebWilClusterdesa to the store'
      operationId: addTwebWilClusterdesa
      requestBody:
        $ref: '#/components/requestBodies/TwebWilClusterdesa'
      responses:
        '201':
          description: 'Created TwebWilClusterdesa'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebWilClusterdesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebWilClusterdesa'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/twebWilClusterdesas/{id}':
    get:
      tags:
        - TwebWilClusterdesa
      summary: 'Find TwebWilClusterdesa by ID'
      description: 'Returns a single TwebWilClusterdesa'
      operationId: getTwebWilClusterdesaById
      parameters:
        -
          name: id
          in: path
          description: 'ID of TwebWilClusterdesa to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwebWilClusterdesa'
            application/xml:
              schema:
                $ref: '#/components/schemas/TwebWilClusterdesa'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'TwebWilClusterdesa not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - TwebWilClusterdesa
      summary: 'Update an existing TwebWilClusterdesa'
      operationId: updateTwebWilClusterdesa
      parameters:
        -
          name: id
          in: path
          description: 'TwebWilClusterdesa id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/TwebWilClusterdesa'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'TwebWilClusterdesa not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - TwebWilClusterdesa
      summary: 'Deletes a TwebWilClusterdesa'
      operationId: deleteTwebWilClusterdesa
      parameters:
        -
          name: id
          in: path
          description: 'TwebWilClusterdesa id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /userGrups:
    get:
      tags:
        - UserGrup
      summary: 'Find list UserGrup'
      description: 'Returns list of UserGrup'
      operationId: getUserGrup
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/UserGrup' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/UserGrup' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/UserGrup' } }
                type: object
        '404':
          description: 'UserGrup not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - UserGrup
      summary: 'Add a new UserGrup to the store'
      operationId: addUserGrup
      requestBody:
        $ref: '#/components/requestBodies/UserGrup'
      responses:
        '201':
          description: 'Created UserGrup'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGrup'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/userGrups/{id}':
    get:
      tags:
        - UserGrup
      summary: 'Find UserGrup by ID'
      description: 'Returns a single UserGrup'
      operationId: getUserGrupById
      parameters:
        -
          name: id
          in: path
          description: 'ID of UserGrup to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGrup'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGrup'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'UserGrup not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - UserGrup
      summary: 'Update an existing UserGrup'
      operationId: updateUserGrup
      parameters:
        -
          name: id
          in: path
          description: 'UserGrup id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/UserGrup'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'UserGrup not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - UserGrup
      summary: 'Deletes a UserGrup'
      operationId: deleteUserGrup
      parameters:
        -
          name: id
          in: path
          description: 'UserGrup id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /users:
    get:
      tags:
        - User
      summary: 'Find list User'
      description: 'Returns list of User'
      operationId: getUser
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/User' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/User' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/User' } }
                type: object
        '404':
          description: 'User not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - User
      summary: 'Add a new User to the store'
      operationId: addUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: 'Created User'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/users/{id}':
    get:
      tags:
        - User
      summary: 'Find User by ID'
      description: 'Returns a single User'
      operationId: getUserById
      parameters:
        -
          name: id
          in: path
          description: 'ID of User to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'User not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - User
      summary: 'Update an existing User'
      operationId: updateUser
      parameters:
        -
          name: id
          in: path
          description: 'User id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'User not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - User
      summary: 'Deletes a User'
      operationId: deleteUser
      parameters:
        -
          name: id
          in: path
          description: 'User id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
  /widgets:
    get:
      tags:
        - Widget
      summary: 'Find list Widget'
      description: 'Returns list of Widget'
      operationId: getWidget
      parameters:
        -
          name: search
          in: query
          description: 'search by column defined'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page to show'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Widget' } }
                  pagination: { properties: { currentPage: { type: integer }, totalPage: { type: integer } }, type: object }
                type: object
            application/xml:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Widget' } }
                  pagination: { type: array, items: { $ref: '#/components/schemas/Widget' } }
                type: object
        '404':
          description: 'Widget not found'
      security:
        -
          bearer_auth: []
    post:
      tags:
        - Widget
      summary: 'Add a new Widget to the store'
      operationId: addWidget
      requestBody:
        $ref: '#/components/requestBodies/Widget'
      responses:
        '201':
          description: 'Created Widget'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Widget'
            application/xml:
              schema:
                $ref: '#/components/schemas/Widget'
        '405':
          description: 'Invalid input'
      security:
        -
          bearer_auth: []
  '/widgets/{id}':
    get:
      tags:
        - Widget
      summary: 'Find Widget by ID'
      description: 'Returns a single Widget'
      operationId: getWidgetById
      parameters:
        -
          name: id
          in: path
          description: 'ID of Widget to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Widget'
            application/xml:
              schema:
                $ref: '#/components/schemas/Widget'
        '400':
          description: 'Invalid ID supplier'
        '404':
          description: 'Widget not found'
      security:
        -
          bearer_auth: []
    put:
      tags:
        - Widget
      summary: 'Update an existing Widget'
      operationId: updateWidget
      parameters:
        -
          name: id
          in: path
          description: 'Widget id to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Widget'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Widget not found'
        '405':
          description: 'Validation exception'
      security:
        -
          bearer_auth: []
    delete:
      tags:
        - Widget
      summary: 'Deletes a Widget'
      operationId: deleteWidget
      parameters:
        -
          name: id
          in: path
          description: 'Widget id to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Pet not found'
      security:
        -
          bearer_auth: []
components:
  schemas:
    Agenda:
      title: Agenda
      description: Agenda
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_artikel:
          title: id_artikel
          description: id_artikel
          type: integer
          format: '-'
          nullable: false
        tgl_agenda:
          title: tgl_agenda
          description: tgl_agenda
          type: string
          format: '-'
          nullable: false
        koordinator_kegiatan:
          title: koordinator_kegiatan
          description: koordinator_kegiatan
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        lokasi_kegiatan:
          title: lokasi_kegiatan
          description: lokasi_kegiatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    AnalisisIndikator:
      title: AnalisisIndikator
      description: AnalisisIndikator
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        nomor:
          title: nomor
          description: nomor
          type: integer
          format: '-'
          nullable: false
        pertanyaan:
          title: pertanyaan
          description: pertanyaan
          type: string
          format: '-'
          maxLength: 400
          nullable: false
        id_tipe:
          title: id_tipe
          description: id_tipe
          type: integer
          format: '-'
          nullable: false
        bobot:
          title: bobot
          description: bobot
          type: integer
          format: '-'
          nullable: false
        act_analisis:
          title: act_analisis
          description: act_analisis
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        id_kategori:
          title: id_kategori
          description: id_kategori
          type: integer
          format: '-'
          nullable: false
        is_publik:
          title: is_publik
          description: is_publik
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        is_teks:
          title: is_teks
          description: is_teks
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
      type: object
    AnalisisKategoriIndikator:
      title: AnalisisKategoriIndikator
      description: AnalisisKategoriIndikator
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        kategori:
          title: kategori
          description: kategori
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        kategori_kode:
          title: kategori_kode
          description: kategori_kode
          type: string
          format: '-'
          maxLength: 3
          nullable: true
      type: object
    AnalisisKlasifikasi:
      title: AnalisisKlasifikasi
      description: AnalisisKlasifikasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        minval:
          title: minval
          description: minval
          type: number
          format: float
          maxLength: 7
          nullable: false
        maxval:
          title: maxval
          description: maxval
          type: number
          format: float
          maxLength: 7
          nullable: false
      type: object
    AnalisisMaster:
      title: AnalisisMaster
      description: AnalisisMaster
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 40
          nullable: false
        subjek_tipe:
          title: subjek_tipe
          description: subjek_tipe
          type: integer
          format: '-'
          nullable: false
        lock:
          title: lock
          description: lock
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        deskripsi:
          title: deskripsi
          description: deskripsi
          type: string
          format: '-'
          nullable: false
        kode_analisis:
          title: kode_analisis
          description: kode_analisis
          type: string
          format: '-'
          maxLength: 5
          nullable: false
        id_kelompok:
          title: id_kelompok
          description: id_kelompok
          type: integer
          format: '-'
          nullable: true
        pembagi:
          title: pembagi
          description: pembagi
          type: string
          format: '-'
          maxLength: 10
          nullable: false
        id_child:
          title: id_child
          description: id_child
          type: string
          format: '-'
          nullable: true
        format_impor:
          title: format_impor
          description: format_impor
          type: integer
          format: '-'
          nullable: true
        jenis:
          title: jenis
          description: jenis
          type: integer
          format: '-'
          nullable: false
      type: object
    AnalisisParameter:
      title: AnalisisParameter
      description: AnalisisParameter
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_indikator:
          title: id_indikator
          description: id_indikator
          type: integer
          format: '-'
          nullable: false
        jawaban:
          title: jawaban
          description: jawaban
          type: string
          format: '-'
          maxLength: 200
          nullable: false
        nilai:
          title: nilai
          description: nilai
          type: integer
          format: '-'
          nullable: false
        kode_jawaban:
          title: kode_jawaban
          description: kode_jawaban
          type: integer
          format: '-'
          nullable: false
        asign:
          title: asign
          description: asign
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
      type: object
    AnalisisPartisipasi:
      title: AnalisisPartisipasi
      description: AnalisisPartisipasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_subjek:
          title: id_subjek
          description: id_subjek
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        id_periode:
          title: id_periode
          description: id_periode
          type: integer
          format: '-'
          nullable: false
        id_klassifikasi:
          title: id_klassifikasi
          description: id_klassifikasi
          type: integer
          format: '-'
          nullable: false
      type: object
    AnalisisPeriode:
      title: AnalisisPeriode
      description: AnalisisPeriode
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        id_state:
          title: id_state
          description: id_state
          type: integer
          format: '-'
          nullable: false
        aktif:
          title: aktif
          description: aktif
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        tahun_pelaksanaan:
          title: tahun_pelaksanaan
          description: tahun_pelaksanaan
          type: string
          format: '-'
          nullable: false
      type: object
    AnalisisRefState:
      title: AnalisisRefState
      description: AnalisisRefState
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 40
          nullable: false
      type: object
    AnalisisRefSubjek:
      title: AnalisisRefSubjek
      description: AnalisisRefSubjek
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        subjek:
          title: subjek
          description: subjek
          type: string
          format: '-'
          maxLength: 20
          nullable: false
      type: object
    AnalisisRespon:
      title: AnalisisRespon
      description: AnalisisRespon
      properties:
        id_indikator:
          title: id_indikator
          description: id_indikator
          type: integer
          format: '-'
          nullable: false
        id_parameter:
          title: id_parameter
          description: id_parameter
          type: integer
          format: '-'
          nullable: false
        id_subjek:
          title: id_subjek
          description: id_subjek
          type: integer
          format: '-'
          nullable: false
        id_periode:
          title: id_periode
          description: id_periode
          type: integer
          format: '-'
          nullable: false
      type: object
    AnalisisResponBukti:
      title: AnalisisResponBukti
      description: AnalisisResponBukti
      properties:
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        id_periode:
          title: id_periode
          description: id_periode
          type: integer
          format: '-'
          nullable: false
        id_subjek:
          title: id_subjek
          description: id_subjek
          type: integer
          format: '-'
          nullable: false
        pengesahan:
          title: pengesahan
          description: pengesahan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        tgl_update:
          title: tgl_update
          description: tgl_update
          type: string
          format: '-'
          nullable: false
      type: object
    AnalisisResponHasil:
      title: AnalisisResponHasil
      description: AnalisisResponHasil
      properties:
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        id_periode:
          title: id_periode
          description: id_periode
          type: integer
          format: '-'
          nullable: false
        id_subjek:
          title: id_subjek
          description: id_subjek
          type: integer
          format: '-'
          nullable: false
        akumulasi:
          title: akumulasi
          description: akumulasi
          type: number
          format: float
          maxLength: 8
          nullable: false
        tgl_update:
          title: tgl_update
          description: tgl_update
          type: string
          format: '-'
          nullable: false
      type: object
    AnalisisTipeIndikator:
      title: AnalisisTipeIndikator
      description: AnalisisTipeIndikator
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: string
          format: '-'
          maxLength: 20
          nullable: false
      type: object
    AnggotaGrupKontak:
      title: AnggotaGrupKontak
      description: AnggotaGrupKontak
      properties:
        id_grup_kontak:
          title: id_grup_kontak
          description: id_grup_kontak
          type: integer
          format: '-'
          nullable: false
        id_grup:
          title: id_grup
          description: id_grup
          type: integer
          format: '-'
          nullable: false
        id_kontak:
          title: id_kontak
          description: id_kontak
          type: integer
          format: '-'
          nullable: false
      type: object
    Area:
      title: Area
      description: Area
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        path:
          title: path
          description: path
          type: string
          format: '-'
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        ref_polygon:
          title: ref_polygon
          description: ref_polygon
          type: integer
          format: '-'
          nullable: false
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: false
        desk:
          title: desk
          description: desk
          type: string
          format: '-'
          nullable: false
      type: object
    Artikel:
      title: Artikel
      description: Artikel
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        gambar:
          title: gambar
          description: gambar
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        isi:
          title: isi
          description: isi
          type: string
          format: '-'
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        tgl_upload:
          title: tgl_upload
          description: tgl_upload
          type: string
          format: '-'
          nullable: false
        id_kategori:
          title: id_kategori
          description: id_kategori
          type: integer
          format: '-'
          nullable: false
        id_user:
          title: id_user
          description: id_user
          type: integer
          format: '-'
          nullable: false
        judul:
          title: judul
          description: judul
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        headline:
          title: headline
          description: headline
          type: integer
          format: '-'
          nullable: false
        gambar1:
          title: gambar1
          description: gambar1
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        gambar2:
          title: gambar2
          description: gambar2
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        gambar3:
          title: gambar3
          description: gambar3
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        dokumen:
          title: dokumen
          description: dokumen
          type: string
          format: '-'
          maxLength: 400
          nullable: true
        link_dokumen:
          title: link_dokumen
          description: link_dokumen
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        boleh_komentar:
          title: boleh_komentar
          description: boleh_komentar
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        slug:
          title: slug
          description: slug
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        hit:
          title: hit
          description: hit
          type: integer
          format: '-'
          nullable: true
      type: object
    CaptchaCodes:
      title: CaptchaCodes
      description: CaptchaCodes
      properties:
        id:
          title: id
          description: id
          type: string
          format: '-'
          maxLength: 40
          nullable: false
        namespace:
          title: namespace
          description: namespace
          type: string
          format: '-'
          maxLength: 32
          nullable: false
        code:
          title: code
          description: code
          type: string
          format: '-'
          maxLength: 32
          nullable: false
        code_display:
          title: code_display
          description: code_display
          type: string
          format: '-'
          maxLength: 32
          nullable: false
        created:
          title: created
          description: created
          type: integer
          format: '-'
          nullable: false
        audio_data:
          title: audio_data
          description: audio_data
          type: string
          format: '-'
          nullable: true
      type: object
    Config:
      title: Config
      description: Config
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_desa:
          title: nama_desa
          description: nama_desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_desa:
          title: kode_desa
          description: kode_desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nama_kepala_desa:
          title: nama_kepala_desa
          description: nama_kepala_desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nip_kepala_desa:
          title: nip_kepala_desa
          description: nip_kepala_desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_pos:
          title: kode_pos
          description: kode_pos
          type: string
          format: '-'
          maxLength: 6
          nullable: false
        nama_kecamatan:
          title: nama_kecamatan
          description: nama_kecamatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_kecamatan:
          title: kode_kecamatan
          description: kode_kecamatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nama_kepala_camat:
          title: nama_kepala_camat
          description: nama_kepala_camat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nip_kepala_camat:
          title: nip_kepala_camat
          description: nip_kepala_camat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nama_kabupaten:
          title: nama_kabupaten
          description: nama_kabupaten
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_kabupaten:
          title: kode_kabupaten
          description: kode_kabupaten
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nama_propinsi:
          title: nama_propinsi
          description: nama_propinsi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_propinsi:
          title: kode_propinsi
          description: kode_propinsi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        logo:
          title: logo
          description: logo
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        lat:
          title: lat
          description: lat
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        lng:
          title: lng
          description: lng
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        zoom:
          title: zoom
          description: zoom
          type: integer
          format: '-'
          nullable: true
        map_tipe:
          title: map_tipe
          description: map_tipe
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        path:
          title: path
          description: path
          type: string
          format: '-'
          nullable: true
        alamat_kantor:
          title: alamat_kantor
          description: alamat_kantor
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        email_desa:
          title: email_desa
          description: email_desa
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        telepon:
          title: telepon
          description: telepon
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        website:
          title: website
          description: website
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        kantor_desa:
          title: kantor_desa
          description: kantor_desa
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    Covid19Pantau:
      title: Covid19Pantau
      description: Covid19Pantau
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_pemudik:
          title: id_pemudik
          description: id_pemudik
          type: integer
          format: '-'
          nullable: true
        tanggal_jam:
          title: tanggal_jam
          description: tanggal_jam
          type: string
          format: '-'
          nullable: true
        suhu_tubuh:
          title: suhu_tubuh
          description: suhu_tubuh
          type: number
          format: float
          maxLength: 4
          nullable: true
        batuk:
          title: batuk
          description: batuk
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        flu:
          title: flu
          description: flu
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        sesak_nafas:
          title: sesak_nafas
          description: sesak_nafas
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        keluhan_lain:
          title: keluhan_lain
          description: keluhan_lain
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        status_covid:
          title: status_covid
          description: status_covid
          type: string
          format: '-'
          maxLength: 50
          nullable: true
      type: object
    Covid19Pemudik:
      title: Covid19Pemudik
      description: Covid19Pemudik
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_terdata:
          title: id_terdata
          description: id_terdata
          type: integer
          format: '-'
          nullable: true
        tanggal_datang:
          title: tanggal_datang
          description: tanggal_datang
          type: string
          format: date
          nullable: true
        asal_mudik:
          title: asal_mudik
          description: asal_mudik
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        durasi_mudik:
          title: durasi_mudik
          description: durasi_mudik
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        tujuan_mudik:
          title: tujuan_mudik
          description: tujuan_mudik
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keluhan_kesehatan:
          title: keluhan_kesehatan
          description: keluhan_kesehatan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        status_covid:
          title: status_covid
          description: status_covid
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        no_hp:
          title: no_hp
          description: no_hp
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        email:
          title: email
          description: email
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        is_wajib_pantau:
          title: is_wajib_pantau
          description: is_wajib_pantau
          type: string
          format: '-'
          maxLength: 20
          nullable: true
      type: object
    DaftarAnggotaGrup:
      title: DaftarAnggotaGrup
      description: DaftarAnggotaGrup
      properties:
        id_grup_kontak:
          title: id_grup_kontak
          description: id_grup_kontak
          type: integer
          format: '-'
          nullable: false
        id_grup:
          title: id_grup
          description: id_grup
          type: integer
          format: '-'
          nullable: false
        nama_grup:
          title: nama_grup
          description: nama_grup
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        id_kontak:
          title: id_kontak
          description: id_kontak
          type: integer
          format: '-'
          nullable: true
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        no_hp:
          title: no_hp
          description: no_hp
          type: string
          format: '-'
          maxLength: 15
          nullable: true
        sex:
          title: sex
          description: sex
          type: string
          format: '-'
          maxLength: 9
          nullable: true
        alamat_sekarang:
          title: alamat_sekarang
          description: alamat_sekarang
          type: string
          format: '-'
          maxLength: 200
          nullable: true
      type: object
    DaftarGrup:
      title: DaftarGrup
      description: DaftarGrup
      properties:
        id_grup:
          title: id_grup
          description: id_grup
          type: integer
          format: '-'
          nullable: true
        nama_grup:
          title: nama_grup
          description: nama_grup
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        jumlah_anggota:
          title: jumlah_anggota
          description: jumlah_anggota
          type: integer
          format: '-'
          nullable: true
      type: object
    DaftarKontak:
      title: DaftarKontak
      description: DaftarKontak
      properties:
        id_kontak:
          title: id_kontak
          description: id_kontak
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: true
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        no_hp:
          title: no_hp
          description: no_hp
          type: string
          format: '-'
          maxLength: 15
          nullable: true
        sex:
          title: sex
          description: sex
          type: string
          format: '-'
          maxLength: 9
          nullable: false
        alamat_sekarang:
          title: alamat_sekarang
          description: alamat_sekarang
          type: string
          format: '-'
          maxLength: 200
          nullable: true
      type: object
    DataPersil:
      title: DataPersil
      description: DataPersil
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: true
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 128
          nullable: false
        jenis_pemilik:
          title: jenis_pemilik
          description: jenis_pemilik
          type: integer
          format: '-'
          nullable: false
        persil_jenis_id:
          title: persil_jenis_id
          description: persil_jenis_id
          type: integer
          format: '-'
          nullable: false
        id_clusterdesa:
          title: id_clusterdesa
          description: id_clusterdesa
          type: integer
          format: '-'
          nullable: false
        luas:
          title: luas
          description: luas
          type: number
          format: float
          maxLength: 7
          nullable: false
        no_sppt_pbb:
          title: no_sppt_pbb
          description: no_sppt_pbb
          type: string
          format: '-'
          maxLength: 128
          nullable: false
        kelas:
          title: kelas
          description: kelas
          type: string
          format: '-'
          maxLength: 128
          nullable: true
        persil_peruntukan_id:
          title: persil_peruntukan_id
          description: persil_peruntukan_id
          type: integer
          format: '-'
          nullable: false
        alamat_luar:
          title: alamat_luar
          description: alamat_luar
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        userID:
          title: userID
          description: userID
          type: integer
          format: '-'
          nullable: true
        peta:
          title: peta
          description: peta
          type: string
          format: '-'
          nullable: true
        rdate:
          title: rdate
          description: rdate
          type: string
          format: '-'
          nullable: false
        pemilik_luar:
          title: pemilik_luar
          description: pemilik_luar
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    DataPersilJenis:
      title: DataPersilJenis
      description: DataPersilJenis
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 128
          nullable: false
        ndesc:
          title: ndesc
          description: ndesc
          type: string
          format: '-'
          nullable: false
      type: object
    DataPersilPeruntukan:
      title: DataPersilPeruntukan
      description: DataPersilPeruntukan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 128
          nullable: false
        ndesc:
          title: ndesc
          description: ndesc
          type: string
          format: '-'
          nullable: false
      type: object
    DetailLogPenduduk:
      title: DetailLogPenduduk
      description: DetailLogPenduduk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    DisposisiSuratMasuk:
      title: DisposisiSuratMasuk
      description: DisposisiSuratMasuk
      properties:
        id_disposisi:
          title: id_disposisi
          description: id_disposisi
          type: integer
          format: '-'
          nullable: false
        id_surat_masuk:
          title: id_surat_masuk
          description: id_surat_masuk
          type: integer
          format: '-'
          nullable: false
        id_desa_pamong:
          title: id_desa_pamong
          description: id_desa_pamong
          type: integer
          format: '-'
          nullable: true
        disposisi_ke:
          title: disposisi_ke
          description: disposisi_ke
          type: string
          format: '-'
          maxLength: 50
          nullable: true
      type: object
    Dokumen:
      title: Dokumen
      description: Dokumen
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        satuan:
          title: satuan
          description: satuan
          type: string
          format: '-'
          maxLength: 200
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        tgl_upload:
          title: tgl_upload
          description: tgl_upload
          type: string
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: false
        kategori:
          title: kategori
          description: kategori
          type: integer
          format: '-'
          nullable: false
        attr:
          title: attr
          description: attr
          type: string
          format: '-'
          nullable: false
        tahun:
          title: tahun
          description: tahun
          type: integer
          format: '-'
          nullable: true
        kategori_info_publik:
          title: kategori_info_publik
          description: kategori_info_publik
          type: integer
          format: '-'
          nullable: true
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        deleted:
          title: deleted
          description: deleted
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        id_syarat:
          title: id_syarat
          description: id_syarat
          type: integer
          format: '-'
          nullable: true
        id_parent:
          title: id_parent
          description: id_parent
          type: integer
          format: '-'
          nullable: true
      type: object
    DokumenHidup:
      title: DokumenHidup
      description: DokumenHidup
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        satuan:
          title: satuan
          description: satuan
          type: string
          format: '-'
          maxLength: 200
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        tgl_upload:
          title: tgl_upload
          description: tgl_upload
          type: string
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: false
        kategori:
          title: kategori
          description: kategori
          type: integer
          format: '-'
          nullable: false
        attr:
          title: attr
          description: attr
          type: string
          format: '-'
          nullable: false
        tahun:
          title: tahun
          description: tahun
          type: integer
          format: '-'
          nullable: true
        kategori_info_publik:
          title: kategori_info_publik
          description: kategori_info_publik
          type: integer
          format: '-'
          nullable: true
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        deleted:
          title: deleted
          description: deleted
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        id_syarat:
          title: id_syarat
          description: id_syarat
          type: integer
          format: '-'
          nullable: true
        id_parent:
          title: id_parent
          description: id_parent
          type: integer
          format: '-'
          nullable: true
      type: object
    GambarGallery:
      title: GambarGallery
      description: GambarGallery
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: true
        gambar:
          title: gambar
          description: gambar
          type: string
          format: '-'
          maxLength: 200
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        tgl_upload:
          title: tgl_upload
          description: tgl_upload
          type: string
          format: '-'
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: true
        slider:
          title: slider
          description: slider
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: true
      type: object
    Garis:
      title: Garis
      description: Garis
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        path:
          title: path
          description: path
          type: string
          format: '-'
          nullable: true
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        ref_line:
          title: ref_line
          description: ref_line
          type: integer
          format: '-'
          nullable: false
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        desk:
          title: desk
          description: desk
          type: string
          format: '-'
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: true
      type: object
    GisSimbol:
      title: GisSimbol
      description: GisSimbol
      properties:
        simbol:
          title: simbol
          description: simbol
          type: string
          format: '-'
          maxLength: 40
          nullable: true
      type: object
    Inbox:
      title: Inbox
      description: Inbox
      properties:
        UpdatedInDB:
          title: UpdatedInDB
          description: UpdatedInDB
          type: string
          format: '-'
          nullable: false
        ReceivingDateTime:
          title: ReceivingDateTime
          description: ReceivingDateTime
          type: string
          format: '-'
          nullable: false
        Text:
          title: Text
          description: Text
          type: string
          format: '-'
          nullable: false
        SenderNumber:
          title: SenderNumber
          description: SenderNumber
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        Coding:
          title: Coding
          description: Coding
          type: string
          format: '-'
          nullable: false
        UDH:
          title: UDH
          description: UDH
          type: string
          format: '-'
          nullable: false
        SMSCNumber:
          title: SMSCNumber
          description: SMSCNumber
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        Class:
          title: Class
          description: Class
          type: integer
          format: '-'
          nullable: false
        TextDecoded:
          title: TextDecoded
          description: TextDecoded
          type: string
          format: '-'
          nullable: false
        ID:
          title: ID
          description: ID
          type: integer
          format: '-'
          nullable: false
        RecipientID:
          title: RecipientID
          description: RecipientID
          type: string
          format: '-'
          nullable: false
        Processed:
          title: Processed
          description: Processed
          type: string
          format: '-'
          nullable: false
      type: object
    InventarisAsset:
      title: InventarisAsset
      description: InventarisAsset
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kode_barang:
          title: kode_barang
          description: kode_barang
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        register:
          title: register
          description: register
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        jenis:
          title: jenis
          description: jenis
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        judul_buku:
          title: judul_buku
          description: judul_buku
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        spesifikasi_buku:
          title: spesifikasi_buku
          description: spesifikasi_buku
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        asal_daerah:
          title: asal_daerah
          description: asal_daerah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        pencipta:
          title: pencipta
          description: pencipta
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        bahan:
          title: bahan
          description: bahan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        jenis_hewan:
          title: jenis_hewan
          description: jenis_hewan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        ukuran_hewan:
          title: ukuran_hewan
          description: ukuran_hewan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        jenis_tumbuhan:
          title: jenis_tumbuhan
          description: jenis_tumbuhan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        ukuran_tumbuhan:
          title: ukuran_tumbuhan
          description: ukuran_tumbuhan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        jumlah:
          title: jumlah
          description: jumlah
          type: integer
          format: '-'
          nullable: false
        tahun_pengadaan:
          title: tahun_pengadaan
          description: tahun_pengadaan
          type: string
          format: '-'
          nullable: false
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    InventarisGedung:
      title: InventarisGedung
      description: InventarisGedung
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kode_barang:
          title: kode_barang
          description: kode_barang
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        register:
          title: register
          description: register
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        kondisi_bangunan:
          title: kondisi_bangunan
          description: kondisi_bangunan
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kontruksi_bertingkat:
          title: kontruksi_bertingkat
          description: kontruksi_bertingkat
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kontruksi_beton:
          title: kontruksi_beton
          description: kontruksi_beton
          type: integer
          format: '-'
          nullable: false
        luas_bangunan:
          title: luas_bangunan
          description: luas_bangunan
          type: integer
          format: '-'
          nullable: false
        letak:
          title: letak
          description: letak
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tanggal_dokument:
          title: tanggal_dokument
          description: tanggal_dokument
          type: string
          format: date
          nullable: true
        no_dokument:
          title: no_dokument
          description: no_dokument
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        luas:
          title: luas
          description: luas
          type: integer
          format: '-'
          nullable: true
        status_tanah:
          title: status_tanah
          description: status_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        kode_tanah:
          title: kode_tanah
          description: kode_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    InventarisJalan:
      title: InventarisJalan
      description: InventarisJalan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kode_barang:
          title: kode_barang
          description: kode_barang
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        register:
          title: register
          description: register
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        kontruksi:
          title: kontruksi
          description: kontruksi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        panjang:
          title: panjang
          description: panjang
          type: integer
          format: '-'
          nullable: false
        lebar:
          title: lebar
          description: lebar
          type: integer
          format: '-'
          nullable: false
        luas:
          title: luas
          description: luas
          type: integer
          format: '-'
          nullable: false
        letak:
          title: letak
          description: letak
          type: string
          format: '-'
          nullable: true
        tanggal_dokument:
          title: tanggal_dokument
          description: tanggal_dokument
          type: string
          format: date
          nullable: false
        no_dokument:
          title: no_dokument
          description: no_dokument
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        status_tanah:
          title: status_tanah
          description: status_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        kode_tanah:
          title: kode_tanah
          description: kode_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        kondisi:
          title: kondisi
          description: kondisi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    InventarisKontruksi:
      title: InventarisKontruksi
      description: InventarisKontruksi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kondisi_bangunan:
          title: kondisi_bangunan
          description: kondisi_bangunan
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kontruksi_bertingkat:
          title: kontruksi_bertingkat
          description: kontruksi_bertingkat
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kontruksi_beton:
          title: kontruksi_beton
          description: kontruksi_beton
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        luas_bangunan:
          title: luas_bangunan
          description: luas_bangunan
          type: integer
          format: '-'
          nullable: false
        letak:
          title: letak
          description: letak
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tanggal_dokument:
          title: tanggal_dokument
          description: tanggal_dokument
          type: string
          format: date
          nullable: true
        no_dokument:
          title: no_dokument
          description: no_dokument
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        tanggal:
          title: tanggal
          description: tanggal
          type: string
          format: date
          nullable: true
        status_tanah:
          title: status_tanah
          description: status_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        kode_tanah:
          title: kode_tanah
          description: kode_tanah
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    InventarisPeralatan:
      title: InventarisPeralatan
      description: InventarisPeralatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kode_barang:
          title: kode_barang
          description: kode_barang
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        register:
          title: register
          description: register
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        merk:
          title: merk
          description: merk
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        ukuran:
          title: ukuran
          description: ukuran
          type: string
          format: '-'
          nullable: false
        bahan:
          title: bahan
          description: bahan
          type: string
          format: '-'
          nullable: false
        tahun_pengadaan:
          title: tahun_pengadaan
          description: tahun_pengadaan
          type: string
          format: '-'
          nullable: false
        no_pabrik:
          title: no_pabrik
          description: no_pabrik
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        no_rangka:
          title: no_rangka
          description: no_rangka
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        no_mesin:
          title: no_mesin
          description: no_mesin
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        no_polisi:
          title: no_polisi
          description: no_polisi
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        no_bpkb:
          title: no_bpkb
          description: no_bpkb
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    InventarisTanah:
      title: InventarisTanah
      description: InventarisTanah
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama_barang:
          title: nama_barang
          description: nama_barang
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        kode_barang:
          title: kode_barang
          description: kode_barang
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        register:
          title: register
          description: register
          type: string
          format: '-'
          maxLength: 64
          nullable: false
        luas:
          title: luas
          description: luas
          type: integer
          format: '-'
          nullable: false
        tahun_pengadaan:
          title: tahun_pengadaan
          description: tahun_pengadaan
          type: string
          format: '-'
          nullable: false
        letak:
          title: letak
          description: letak
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        hak:
          title: hak
          description: hak
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        no_sertifikat:
          title: no_sertifikat
          description: no_sertifikat
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tanggal_sertifikat:
          title: tanggal_sertifikat
          description: tanggal_sertifikat
          type: string
          format: date
          nullable: false
        penggunaan:
          title: penggunaan
          description: penggunaan
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        asal:
          title: asal
          description: asal
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        harga:
          title: harga
          description: harga
          type: number
          format: float
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    Kategori:
      title: Kategori
      description: Kategori
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        kategori:
          title: kategori
          description: kategori
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: false
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: false
        slug:
          title: slug
          description: slug
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    Kelompok:
      title: Kelompok
      description: Kelompok
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_master:
          title: id_master
          description: id_master
          type: integer
          format: '-'
          nullable: false
        id_ketua:
          title: id_ketua
          description: id_ketua
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode:
          title: kode
          description: kode
          type: string
          format: '-'
          maxLength: 16
          nullable: false
      type: object
    KelompokAnggota:
      title: KelompokAnggota
      description: KelompokAnggota
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_kelompok:
          title: id_kelompok
          description: id_kelompok
          type: integer
          format: '-'
          nullable: false
        id_penduduk:
          title: id_penduduk
          description: id_penduduk
          type: integer
          format: '-'
          nullable: false
        no_anggota:
          title: no_anggota
          description: no_anggota
          type: string
          format: '-'
          maxLength: 20
          nullable: true
      type: object
    KelompokMaster:
      title: KelompokMaster
      description: KelompokMaster
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        kelompok:
          title: kelompok
          description: kelompok
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        deskripsi:
          title: deskripsi
          description: deskripsi
          type: string
          format: '-'
          maxLength: 400
          nullable: false
      type: object
    KeluargaAktif:
      title: KeluargaAktif
      description: KeluargaAktif
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        no_kk:
          title: no_kk
          description: no_kk
          type: string
          format: '-'
          maxLength: 160
          nullable: true
        nik_kepala:
          title: nik_kepala
          description: nik_kepala
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        tgl_daftar:
          title: tgl_daftar
          description: tgl_daftar
          type: string
          format: '-'
          nullable: true
        kelas_sosial:
          title: kelas_sosial
          description: kelas_sosial
          type: integer
          format: '-'
          nullable: true
        tgl_cetak_kk:
          title: tgl_cetak_kk
          description: tgl_cetak_kk
          type: string
          format: '-'
          nullable: true
        alamat:
          title: alamat
          description: alamat
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: true
      type: object
    KeuanganMaster:
      title: KeuanganMaster
      description: KeuanganMaster
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        versi_database:
          title: versi_database
          description: versi_database
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        tahun_anggaran:
          title: tahun_anggaran
          description: tahun_anggaran
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        aktif:
          title: aktif
          description: aktif
          type: integer
          format: '-'
          nullable: false
        tanggal_impor:
          title: tanggal_impor
          description: tanggal_impor
          type: string
          format: date
          nullable: false
      type: object
    KeuanganRefBankDesa:
      title: KeuanganRefBankDesa
      description: KeuanganRefBankDesa
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoRek_Bank:
          title: NoRek_Bank
          description: NoRek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bank:
          title: Nama_Bank
          description: Nama_Bank
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        Kantor_Cabang:
          title: Kantor_Cabang
          description: Kantor_Cabang
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Nama_Pemilik:
          title: Nama_Pemilik
          description: Nama_Pemilik
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Alamat_Pemilik:
          title: Alamat_Pemilik
          description: Alamat_Pemilik
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        No_Identitas:
          title: No_Identitas
          description: No_Identitas
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        No_Telepon:
          title: No_Telepon
          description: No_Telepon
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganRefBelOperasional:
      title: KeuanganRefBelOperasional
      description: KeuanganRefBelOperasional
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        ID_Keg:
          title: ID_Keg
          description: ID_Keg
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    KeuanganRefBidang:
      title: KeuanganRefBidang
      description: KeuanganRefBidang
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        Nama_Bidang:
          title: Nama_Bidang
          description: Nama_Bidang
          type: string
          format: '-'
          maxLength: 250
          nullable: false
      type: object
    KeuanganRefBunga:
      title: KeuanganRefBunga
      description: KeuanganRefBunga
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Bunga:
          title: Kd_Bunga
          description: Kd_Bunga
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        Kd_Admin:
          title: Kd_Admin
          description: Kd_Admin
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    KeuanganRefDesa:
      title: KeuanganRefDesa
      description: KeuanganRefDesa
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Kec:
          title: Kd_Kec
          description: Kd_Kec
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Desa:
          title: Nama_Desa
          description: Nama_Desa
          type: string
          format: '-'
          maxLength: 250
          nullable: false
      type: object
    KeuanganRefKecamatan:
      title: KeuanganRefKecamatan
      description: KeuanganRefKecamatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Kec:
          title: Kd_Kec
          description: Kd_Kec
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Kecamatan:
          title: Nama_Kecamatan
          description: Nama_Kecamatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganRefKegiatan:
      title: KeuanganRefKegiatan
      description: KeuanganRefKegiatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        ID_Keg:
          title: ID_Keg
          description: ID_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Kegiatan:
          title: Nama_Kegiatan
          description: Nama_Kegiatan
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        Jns_Kegiatan:
          title: Jns_Kegiatan
          description: Jns_Kegiatan
          type: integer
          format: '-'
          nullable: true
        Kd_Sub:
          title: Kd_Sub
          description: Kd_Sub
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    KeuanganRefKorolari:
      title: KeuanganRefKorolari
      description: KeuanganRefKorolari
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_RekDB:
          title: Kd_RekDB
          description: Kd_RekDB
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_RekKD:
          title: Kd_RekKD
          description: Kd_RekKD
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        Jenis:
          title: Jenis
          description: Jenis
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    KeuanganRefNeracaClose:
      title: KeuanganRefNeracaClose
      description: KeuanganRefNeracaClose
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kelompok:
          title: Kelompok
          description: Kelompok
          type: string
          format: '-'
          maxLength: 250
          nullable: false
      type: object
    KeuanganRefPerangkat:
      title: KeuanganRefPerangkat
      description: KeuanganRefPerangkat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kode:
          title: Kode
          description: Kode
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Perangkat:
          title: Nama_Perangkat
          description: Nama_Perangkat
          type: string
          format: '-'
          maxLength: 250
          nullable: false
      type: object
    KeuanganRefPotongan:
      title: KeuanganRefPotongan
      description: KeuanganRefPotongan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Potongan:
          title: Kd_Potongan
          description: Kd_Potongan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganRefRek1:
      title: KeuanganRefRek1
      description: KeuanganRefRek1
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Akun:
          title: Akun
          description: Akun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Akun:
          title: Nama_Akun
          description: Nama_Akun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoLap:
          title: NoLap
          description: NoLap
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganRefRek2:
      title: KeuanganRefRek2
      description: KeuanganRefRek2
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Akun:
          title: Akun
          description: Akun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kelompok:
          title: Kelompok
          description: Kelompok
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Kelompok:
          title: Nama_Kelompok
          description: Nama_Kelompok
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganRefRek3:
      title: KeuanganRefRek3
      description: KeuanganRefRek3
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kelompok:
          title: Kelompok
          description: Kelompok
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jenis:
          title: Jenis
          description: Jenis
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Jenis:
          title: Nama_Jenis
          description: Nama_Jenis
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Formula:
          title: Formula
          description: Formula
          type: integer
          format: '-'
          nullable: false
      type: object
    KeuanganRefRek4:
      title: KeuanganRefRek4
      description: KeuanganRefRek4
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Jenis:
          title: Jenis
          description: Jenis
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Obyek:
          title: Obyek
          description: Obyek
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Obyek:
          title: Nama_Obyek
          description: Nama_Obyek
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Peraturan:
          title: Peraturan
          description: Peraturan
          type: string
          format: '-'
          maxLength: 250
          nullable: false
      type: object
    KeuanganRefSbu:
      title: KeuanganRefSbu
      description: KeuanganRefSbu
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kode_SBU:
          title: Kode_SBU
          description: Kode_SBU
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoUrut_SBU:
          title: NoUrut_SBU
          description: NoUrut_SBU
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_SBU:
          title: Nama_SBU
          description: Nama_SBU
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Satuan:
          title: Satuan
          description: Satuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganRefSumber:
      title: KeuanganRefSumber
      description: KeuanganRefSumber
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kode:
          title: Kode
          description: Kode
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Sumber:
          title: Nama_Sumber
          description: Nama_Sumber
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Urut:
          title: Urut
          description: Urut
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaAnggaran:
      title: KeuanganTaAnggaran
      description: KeuanganTaAnggaran
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        KdPosting:
          title: KdPosting
          description: KdPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KURincianSD:
          title: KURincianSD
          description: KURincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KD_Rincian:
          title: KD_Rincian
          description: KD_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        RincianSD:
          title: RincianSD
          description: RincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranStlhPAK:
          title: AnggaranStlhPAK
          description: AnggaranStlhPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Belanja:
          title: Belanja
          description: Belanja
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_keg:
          title: Kd_keg
          description: Kd_keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        TglPosting:
          title: TglPosting
          description: TglPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    KeuanganTaAnggaranLog:
      title: KeuanganTaAnggaranLog
      description: KeuanganTaAnggaranLog
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        KdPosting:
          title: KdPosting
          description: KdPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Perdes:
          title: No_Perdes
          description: No_Perdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        TglPosting:
          title: TglPosting
          description: TglPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        UserID:
          title: UserID
          description: UserID
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        Kunci:
          title: Kunci
          description: Kunci
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Perkades:
          title: No_Perkades
          description: No_Perkades
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Petugas:
          title: Petugas
          description: Petugas
          type: string
          format: '-'
          maxLength: 80
          nullable: true
        Tanggal:
          title: Tanggal
          description: Tanggal
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    KeuanganTaAnggaranRinci:
      title: KeuanganTaAnggaranRinci
      description: KeuanganTaAnggaranRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        KdPosting:
          title: KdPosting
          description: KdPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Urut:
          title: No_Urut
          description: No_Urut
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian:
          title: Uraian
          description: Uraian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JmlSatuan:
          title: JmlSatuan
          description: JmlSatuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        HrgSatuan:
          title: HrgSatuan
          description: HrgSatuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Satuan:
          title: Satuan
          description: Satuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JmlSatuanPAK:
          title: JmlSatuanPAK
          description: JmlSatuanPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        HrgSatuanPAK:
          title: HrgSatuanPAK
          description: HrgSatuanPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranStlhPAK:
          title: AnggaranStlhPAK
          description: AnggaranStlhPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaBidang:
      title: KeuanganTaBidang
      description: KeuanganTaBidang
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bidang:
          title: Nama_Bidang
          description: Nama_Bidang
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaDesa:
      title: KeuanganTaDesa
      description: KeuanganTaDesa
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Kades:
          title: Nm_Kades
          description: Nm_Kades
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Kades:
          title: Jbt_Kades
          description: Jbt_Kades
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Sekdes:
          title: Nm_Sekdes
          description: Nm_Sekdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NIP_Sekdes:
          title: NIP_Sekdes
          description: NIP_Sekdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Sekdes:
          title: Jbt_Sekdes
          description: Jbt_Sekdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Kaur_Keu:
          title: Nm_Kaur_Keu
          description: Nm_Kaur_Keu
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Kaur_Keu:
          title: Jbt_Kaur_Keu
          description: Jbt_Kaur_Keu
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bendahara:
          title: Nm_Bendahara
          description: Nm_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Bendahara:
          title: Jbt_Bendahara
          description: Jbt_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Perdes:
          title: No_Perdes
          description: No_Perdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Perdes:
          title: Tgl_Perdes
          description: Tgl_Perdes
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Perdes_PB:
          title: No_Perdes_PB
          description: No_Perdes_PB
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Perdes_PB:
          title: Tgl_Perdes_PB
          description: Tgl_Perdes_PB
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Perdes_PJ:
          title: No_Perdes_PJ
          description: No_Perdes_PJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Perdes_PJ:
          title: Tgl_Perdes_PJ
          description: Tgl_Perdes_PJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat:
          title: Alamat
          description: Alamat
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        Ibukota:
          title: Ibukota
          description: Ibukota
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Status:
          title: Status
          description: Status
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NPWP:
          title: NPWP
          description: NPWP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaJurnalUmum:
      title: KeuanganTaJurnalUmum
      description: KeuanganTaJurnalUmum
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KdBuku:
          title: KdBuku
          description: KdBuku
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tanggal:
          title: Tanggal
          description: Tanggal
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JnsBukti:
          title: JnsBukti
          description: JnsBukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoBukti:
          title: NoBukti
          description: NoBukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        DK:
          title: DK
          description: DK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Debet:
          title: Debet
          description: Debet
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kredit:
          title: Kredit
          description: Kredit
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jenis:
          title: Jenis
          description: Jenis
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Posted:
          title: Posted
          description: Posted
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaJurnalUmumRinci:
      title: KeuanganTaJurnalUmumRinci
      description: KeuanganTaJurnalUmumRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoBukti:
          title: NoBukti
          description: NoBukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        RincianSD:
          title: RincianSD
          description: RincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoID:
          title: NoID
          description: NoID
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Akun:
          title: Akun
          description: Akun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        DK:
          title: DK
          description: DK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Debet:
          title: Debet
          description: Debet
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kredit:
          title: Kredit
          description: Kredit
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaKegiatan:
      title: KeuanganTaKegiatan
      description: KeuanganTaKegiatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Keg:
          title: ID_Keg
          description: ID_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Kegiatan:
          title: Nama_Kegiatan
          description: Nama_Kegiatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pagu:
          title: Pagu
          description: Pagu
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pagu_PAK:
          title: Pagu_PAK
          description: Pagu_PAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_PPTKD:
          title: Nm_PPTKD
          description: Nm_PPTKD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NIP_PPTKD:
          title: NIP_PPTKD
          description: NIP_PPTKD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Lokasi:
          title: Lokasi
          description: Lokasi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Waktu:
          title: Waktu
          description: Waktu
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keluaran:
          title: Keluaran
          description: Keluaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_PPTKD:
          title: Jbt_PPTKD
          description: Jbt_PPTKD
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Kd_Sub:
          title: Kd_Sub
          description: Kd_Sub
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        Nilai:
          title: Nilai
          description: Nilai
          type: integer
          format: '-'
          nullable: true
        NilaiPAK:
          title: NilaiPAK
          description: NilaiPAK
          type: integer
          format: '-'
          nullable: true
        Satuan:
          title: Satuan
          description: Satuan
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    KeuanganTaMutasi:
      title: KeuanganTaMutasi
      description: KeuanganTaMutasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        Kd_Bank:
          title: Kd_Bank
          description: Kd_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Mutasi:
          title: Kd_Mutasi
          description: Kd_Mutasi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaPajak:
      title: KeuanganTaPajak
      description: KeuanganTaPajak
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SSP:
          title: No_SSP
          description: No_SSP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_SSP:
          title: Tgl_SSP
          description: Tgl_SSP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        Nama_WP:
          title: Nama_WP
          description: Nama_WP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat_WP:
          title: Alamat_WP
          description: Alamat_WP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NPWP:
          title: NPWP
          description: NPWP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_MAP:
          title: Kd_MAP
          description: Kd_MAP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Penyetor:
          title: Nm_Penyetor
          description: Nm_Penyetor
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jn_Transaksi:
          title: Jn_Transaksi
          description: Jn_Transaksi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KdBayar:
          title: KdBayar
          description: KdBayar
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        NTPN:
          title: NTPN
          description: NTPN
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    KeuanganTaPajakRinci:
      title: KeuanganTaPajakRinci
      description: KeuanganTaPajakRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SSP:
          title: No_SSP
          description: No_SSP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaPemda:
      title: KeuanganTaPemda
      description: KeuanganTaPemda
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Prov:
          title: Kd_Prov
          description: Kd_Prov
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Kab:
          title: Kd_Kab
          description: Kd_Kab
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Pemda:
          title: Nama_Pemda
          description: Nama_Pemda
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Provinsi:
          title: Nama_Provinsi
          description: Nama_Provinsi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Ibukota:
          title: Ibukota
          description: Ibukota
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat:
          title: Alamat
          description: Alamat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bupati:
          title: Nm_Bupati
          description: Nm_Bupati
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Bupati:
          title: Jbt_Bupati
          description: Jbt_Bupati
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Logo:
          title: Logo
          description: Logo
          type: string
          format: '-'
          nullable: true
        C_Kode:
          title: C_Kode
          description: C_Kode
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        C_Pemda:
          title: C_Pemda
          description: C_Pemda
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        C_Data:
          title: C_Data
          description: C_Data
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaPencairan:
      title: KeuanganTaPencairan
      description: KeuanganTaPencairan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Cek:
          title: No_Cek
          description: No_Cek
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Cek:
          title: Tgl_Cek
          description: Tgl_Cek
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Potongan:
          title: Potongan
          description: Potongan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KdBayar:
          title: KdBayar
          description: KdBayar
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        Kunci:
          title: Kunci
          description: Kunci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaPerangkat:
      title: KeuanganTaPerangkat
      description: KeuanganTaPerangkat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Jabatan:
          title: Kd_Jabatan
          description: Kd_Jabatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_ID:
          title: No_ID
          description: No_ID
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Perangkat:
          title: Nama_Perangkat
          description: Nama_Perangkat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat_Perangkat:
          title: Alamat_Perangkat
          description: Alamat_Perangkat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nomor_HP:
          title: Nomor_HP
          description: Nomor_HP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Rek_Bank:
          title: Rek_Bank
          description: Rek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bank:
          title: Nama_Bank
          description: Nama_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaRab:
      title: KeuanganTaRab
      description: KeuanganTaRab
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranStlhPAK:
          title: AnggaranStlhPAK
          description: AnggaranStlhPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaRabRinci:
      title: KeuanganTaRabRinci
      description: KeuanganTaRabRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Urut:
          title: No_Urut
          description: No_Urut
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian:
          title: Uraian
          description: Uraian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Satuan:
          title: Satuan
          description: Satuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JmlSatuan:
          title: JmlSatuan
          description: JmlSatuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        HrgSatuan:
          title: HrgSatuan
          description: HrgSatuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JmlSatuanPAK:
          title: JmlSatuanPAK
          description: JmlSatuanPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        HrgSatuanPAK:
          title: HrgSatuanPAK
          description: HrgSatuanPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranStlhPAK:
          title: AnggaranStlhPAK
          description: AnggaranStlhPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kode_SBU:
          title: Kode_SBU
          description: Kode_SBU
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaRabSub:
      title: KeuanganTaRabSub
      description: KeuanganTaRabSub
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_SubRinci:
          title: Nama_SubRinci
          description: Nama_SubRinci
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranStlhPAK:
          title: AnggaranStlhPAK
          description: AnggaranStlhPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaRpjmBidang:
      title: KeuanganTaRpjmBidang
      description: KeuanganTaRpjmBidang
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bidang:
          title: Nama_Bidang
          description: Nama_Bidang
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaRpjmKegiatan:
      title: KeuanganTaRpjmKegiatan
      description: KeuanganTaRpjmKegiatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Bid:
          title: Kd_Bid
          description: Kd_Bid
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Keg:
          title: ID_Keg
          description: ID_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Kegiatan:
          title: Nama_Kegiatan
          description: Nama_Kegiatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Lokasi:
          title: Lokasi
          description: Lokasi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keluaran:
          title: Keluaran
          description: Keluaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Sas:
          title: Kd_Sas
          description: Kd_Sas
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sasaran:
          title: Sasaran
          description: Sasaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun1:
          title: Tahun1
          description: Tahun1
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun2:
          title: Tahun2
          description: Tahun2
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun3:
          title: Tahun3
          description: Tahun3
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun4:
          title: Tahun4
          description: Tahun4
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun5:
          title: Tahun5
          description: Tahun5
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun6:
          title: Tahun6
          description: Tahun6
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Swakelola:
          title: Swakelola
          description: Swakelola
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kerjasama:
          title: Kerjasama
          description: Kerjasama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pihak_Ketiga:
          title: Pihak_Ketiga
          description: Pihak_Ketiga
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Sub:
          title: Kd_Sub
          description: Kd_Sub
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    KeuanganTaRpjmMisi:
      title: KeuanganTaRpjmMisi
      description: KeuanganTaRpjmMisi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        ID_Misi:
          title: ID_Misi
          description: ID_Misi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Visi:
          title: ID_Visi
          description: ID_Visi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Misi:
          title: No_Misi
          description: No_Misi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian_Misi:
          title: Uraian_Misi
          description: Uraian_Misi
          type: string
          format: '-'
          maxLength: 250
          nullable: true
      type: object
    KeuanganTaRpjmPaguIndikatif:
      title: KeuanganTaRpjmPaguIndikatif
      description: KeuanganTaRpjmPaguIndikatif
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Sumber:
          title: Kd_Sumber
          description: Kd_Sumber
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun1:
          title: Tahun1
          description: Tahun1
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun2:
          title: Tahun2
          description: Tahun2
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun3:
          title: Tahun3
          description: Tahun3
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun4:
          title: Tahun4
          description: Tahun4
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun5:
          title: Tahun5
          description: Tahun5
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun6:
          title: Tahun6
          description: Tahun6
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pola:
          title: Pola
          description: Pola
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaRpjmPaguTahunan:
      title: KeuanganTaRpjmPaguTahunan
      description: KeuanganTaRpjmPaguTahunan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Tahun:
          title: Kd_Tahun
          description: Kd_Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Sumber:
          title: Kd_Sumber
          description: Kd_Sumber
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Biaya:
          title: Biaya
          description: Biaya
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Volume:
          title: Volume
          description: Volume
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Satuan:
          title: Satuan
          description: Satuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Lokasi_Spesifik:
          title: Lokasi_Spesifik
          description: Lokasi_Spesifik
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jml_Sas_Pria:
          title: Jml_Sas_Pria
          description: Jml_Sas_Pria
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jml_Sas_Wanita:
          title: Jml_Sas_Wanita
          description: Jml_Sas_Wanita
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jml_Sas_ARTM:
          title: Jml_Sas_ARTM
          description: Jml_Sas_ARTM
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Waktu:
          title: Waktu
          description: Waktu
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Mulai:
          title: Mulai
          description: Mulai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Selesai:
          title: Selesai
          description: Selesai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pola_Kegiatan:
          title: Pola_Kegiatan
          description: Pola_Kegiatan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Pelaksana:
          title: Pelaksana
          description: Pelaksana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_ID:
          title: No_ID
          description: No_ID
          type: string
          format: '-'
          maxLength: 20
          nullable: true
      type: object
    KeuanganTaRpjmSasaran:
      title: KeuanganTaRpjmSasaran
      description: KeuanganTaRpjmSasaran
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        ID_Sasaran:
          title: ID_Sasaran
          description: ID_Sasaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Tujuan:
          title: ID_Tujuan
          description: ID_Tujuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Sasaran:
          title: No_Sasaran
          description: No_Sasaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian_Sasaran:
          title: Uraian_Sasaran
          description: Uraian_Sasaran
          type: string
          format: '-'
          maxLength: 250
          nullable: true
      type: object
    KeuanganTaRpjmTujuan:
      title: KeuanganTaRpjmTujuan
      description: KeuanganTaRpjmTujuan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        ID_Tujuan:
          title: ID_Tujuan
          description: ID_Tujuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Misi:
          title: ID_Misi
          description: ID_Misi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Tujuan:
          title: No_Tujuan
          description: No_Tujuan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian_Tujuan:
          title: Uraian_Tujuan
          description: Uraian_Tujuan
          type: string
          format: '-'
          maxLength: 250
          nullable: true
      type: object
    KeuanganTaRpjmVisi:
      title: KeuanganTaRpjmVisi
      description: KeuanganTaRpjmVisi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        ID_Visi:
          title: ID_Visi
          description: ID_Visi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Visi:
          title: No_Visi
          description: No_Visi
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian_Visi:
          title: Uraian_Visi
          description: Uraian_Visi
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        TahunA:
          title: TahunA
          description: TahunA
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        TahunN:
          title: TahunN
          description: TahunN
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaSaldoAwal:
      title: KeuanganTaSaldoAwal
      description: KeuanganTaSaldoAwal
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jenis:
          title: Jenis
          description: Jenis
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Debet:
          title: Debet
          description: Debet
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kredit:
          title: Kredit
          description: Kredit
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaSpj:
      title: KeuanganTaSpj
      description: KeuanganTaSpj
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPJ:
          title: No_SPJ
          description: No_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_SPJ:
          title: Tgl_SPJ
          description: Tgl_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Potongan:
          title: Potongan
          description: Potongan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Status:
          title: Status
          description: Status
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kunci:
          title: Kunci
          description: Kunci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSpjBukti:
      title: KeuanganTaSpjBukti
      description: KeuanganTaSpjBukti
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPJ:
          title: No_SPJ
          description: No_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Penerima:
          title: Nm_Penerima
          description: Nm_Penerima
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat:
          title: Alamat
          description: Alamat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Rek_Bank:
          title: Rek_Bank
          description: Rek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bank:
          title: Nm_Bank
          description: Nm_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NPWP:
          title: NPWP
          description: NPWP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSpjRinci:
      title: KeuanganTaSpjRinci
      description: KeuanganTaSpjRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPJ:
          title: No_SPJ
          description: No_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        JmlCair:
          title: JmlCair
          description: JmlCair
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat:
          title: Alamat
          description: Alamat
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Sisa:
          title: Sisa
          description: Sisa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSpjSisa:
      title: KeuanganTaSpjSisa
      description: KeuanganTaSpjSisa
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPJ:
          title: No_SPJ
          description: No_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_SPJ:
          title: Tgl_SPJ
          description: Tgl_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_SPP:
          title: Tgl_SPP
          description: Tgl_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaSpjpot:
      title: KeuanganTaSpjpot
      description: KeuanganTaSpjpot
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPJ:
          title: No_SPJ
          description: No_SPJ
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaSpp:
      title: KeuanganTaSpp
      description: KeuanganTaSpp
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_SPP:
          title: Tgl_SPP
          description: Tgl_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jn_SPP:
          title: Jn_SPP
          description: Jn_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Potongan:
          title: Potongan
          description: Potongan
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Status:
          title: Status
          description: Status
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        F10:
          title: F10
          description: F10
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        F11:
          title: F11
          description: F11
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSppRinci:
      title: KeuanganTaSppRinci
      description: KeuanganTaSppRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSppbukti:
      title: KeuanganTaSppbukti
      description: KeuanganTaSppbukti
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sumberdana:
          title: Sumberdana
          description: Sumberdana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Penerima:
          title: Nm_Penerima
          description: Nm_Penerima
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat:
          title: Alamat
          description: Alamat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Rek_Bank:
          title: Rek_Bank
          description: Rek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bank:
          title: Nm_Bank
          description: Nm_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NPWP:
          title: NPWP
          description: NPWP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Keterangan:
          title: Keterangan
          description: Keterangan
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaSpppot:
      title: KeuanganTaSpppot
      description: KeuanganTaSpppot
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_SPP:
          title: No_SPP
          description: No_SPP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaSts:
      title: KeuanganTaSts
      description: KeuanganTaSts
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian:
          title: Uraian
          description: Uraian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoRek_Bank:
          title: NoRek_Bank
          description: NoRek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bank:
          title: Nama_Bank
          description: Nama_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bendahara:
          title: Nm_Bendahara
          description: Nm_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Bendahara:
          title: Jbt_Bendahara
          description: Jbt_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaStsRinci:
      title: KeuanganTaStsRinci
      description: KeuanganTaStsRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_TBP:
          title: No_TBP
          description: No_TBP
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian:
          title: Uraian
          description: Uraian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nilai:
          title: Nilai
          description: Nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    KeuanganTaTbp:
      title: KeuanganTaTbp
      description: KeuanganTaTbp
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tgl_Bukti:
          title: Tgl_Bukti
          description: Tgl_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Uraian:
          title: Uraian
          description: Uraian
          type: string
          format: '-'
          maxLength: 250
          nullable: true
        Nm_Penyetor:
          title: Nm_Penyetor
          description: Nm_Penyetor
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Alamat_Penyetor:
          title: Alamat_Penyetor
          description: Alamat_Penyetor
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        TTD_Penyetor:
          title: TTD_Penyetor
          description: TTD_Penyetor
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        NoRek_Bank:
          title: NoRek_Bank
          description: NoRek_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nama_Bank:
          title: Nama_Bank
          description: Nama_Bank
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Nm_Bendahara:
          title: Nm_Bendahara
          description: Nm_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jbt_Bendahara:
          title: Jbt_Bendahara
          description: Jbt_Bendahara
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Status:
          title: Status
          description: Status
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KdBayar:
          title: KdBayar
          description: KdBayar
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Ref_Bayar:
          title: Ref_Bayar
          description: Ref_Bayar
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        ID_Bank:
          title: ID_Bank
          description: ID_Bank
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaTbpRinci:
      title: KeuanganTaTbpRinci
      description: KeuanganTaTbpRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        No_Bukti:
          title: No_Bukti
          description: No_Bukti
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        RincianSD:
          title: RincianSD
          description: RincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nilai:
          title: nilai
          description: nilai
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaTriwulan:
      title: KeuanganTaTriwulan
      description: KeuanganTaTriwulan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        KURincianSD:
          title: KURincianSD
          description: KURincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sifat:
          title: Sifat
          description: Sifat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tw1Rinci:
          title: Tw1Rinci
          description: Tw1Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw2Rinci:
          title: Tw2Rinci
          description: Tw2Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw3Rinci:
          title: Tw3Rinci
          description: Tw3Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw4Rinci:
          title: Tw4Rinci
          description: Tw4Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        KunciData:
          title: KunciData
          description: KunciData
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jan:
          title: Jan
          description: Jan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Peb:
          title: Peb
          description: Peb
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Mar:
          title: Mar
          description: Mar
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Apr:
          title: Apr
          description: Apr
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Mei:
          title: Mei
          description: Mei
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Jun:
          title: Jun
          description: Jun
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Jul:
          title: Jul
          description: Jul
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Agt:
          title: Agt
          description: Agt
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Sep:
          title: Sep
          description: Sep
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Okt:
          title: Okt
          description: Okt
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Nop:
          title: Nop
          description: Nop
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Des:
          title: Des
          description: Des
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Kd_SubRinci:
          title: Kd_SubRinci
          description: Kd_SubRinci
          type: string
          format: '-'
          maxLength: 10
          nullable: true
      type: object
    KeuanganTaTriwulanRinci:
      title: KeuanganTaTriwulanRinci
      description: KeuanganTaTriwulanRinci
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_keuangan_master:
          title: id_keuangan_master
          description: id_keuangan_master
          type: integer
          format: '-'
          nullable: false
        KdPosting:
          title: KdPosting
          description: KdPosting
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        KURincianSD:
          title: KURincianSD
          description: KURincianSD
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tahun:
          title: Tahun
          description: Tahun
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Sifat:
          title: Sifat
          description: Sifat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        SumberDana:
          title: SumberDana
          description: SumberDana
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Desa:
          title: Kd_Desa
          description: Kd_Desa
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Keg:
          title: Kd_Keg
          description: Kd_Keg
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Kd_Rincian:
          title: Kd_Rincian
          description: Kd_Rincian
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Anggaran:
          title: Anggaran
          description: Anggaran
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        AnggaranPAK:
          title: AnggaranPAK
          description: AnggaranPAK
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Tw1Rinci:
          title: Tw1Rinci
          description: Tw1Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw2Rinci:
          title: Tw2Rinci
          description: Tw2Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw3Rinci:
          title: Tw3Rinci
          description: Tw3Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Tw4Rinci:
          title: Tw4Rinci
          description: Tw4Rinci
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        KunciData:
          title: KunciData
          description: KunciData
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        Jan:
          title: Jan
          description: Jan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Peb:
          title: Peb
          description: Peb
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Mar:
          title: Mar
          description: Mar
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Apr:
          title: Apr
          description: Apr
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Mei:
          title: Mei
          description: Mei
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Jun:
          title: Jun
          description: Jun
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Jul:
          title: Jul
          description: Jul
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Agt:
          title: Agt
          description: Agt
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Sep:
          title: Sep
          description: Sep
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Okt:
          title: Okt
          description: Okt
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Nop:
          title: Nop
          description: Nop
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        Des:
          title: Des
          description: Des
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    KlasifikasiAnalisisKeluarga:
      title: KlasifikasiAnalisisKeluarga
      description: KlasifikasiAnalisisKeluarga
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        jenis:
          title: jenis
          description: jenis
          type: integer
          format: '-'
          nullable: false
      type: object
    KlasifikasiSurat:
      title: KlasifikasiSurat
      description: KlasifikasiSurat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        kode:
          title: kode
          description: kode
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 250
          nullable: false
        uraian:
          title: uraian
          description: uraian
          type: string
          format: '-'
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
      type: object
    Komentar:
      title: Komentar
      description: Komentar
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_artikel:
          title: id_artikel
          description: id_artikel
          type: integer
          format: '-'
          nullable: false
        owner:
          title: owner
          description: owner
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        email:
          title: email
          description: email
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        subjek:
          title: subjek
          description: subjek
          type: string
          format: '-'
          nullable: true
        komentar:
          title: komentar
          description: komentar
          type: string
          format: '-'
          nullable: false
        tgl_upload:
          title: tgl_upload
          description: tgl_upload
          type: string
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        no_hp:
          title: no_hp
          description: no_hp
          type: string
          format: '-'
          maxLength: 15
          nullable: true
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        is_archived:
          title: is_archived
          description: is_archived
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
      type: object
    Kontak:
      title: Kontak
      description: Kontak
      properties:
        id_kontak:
          title: id_kontak
          description: id_kontak
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: true
        no_hp:
          title: no_hp
          description: no_hp
          type: string
          format: '-'
          maxLength: 15
          nullable: true
      type: object
    KontakGrup:
      title: KontakGrup
      description: KontakGrup
      properties:
        id_grup:
          title: id_grup
          description: id_grup
          type: integer
          format: '-'
          nullable: false
        nama_grup:
          title: nama_grup
          description: nama_grup
          type: string
          format: '-'
          maxLength: 30
          nullable: false
      type: object
    Line:
      title: Line
      description: Line
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        simbol:
          title: simbol
          description: simbol
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        color:
          title: color
          description: color
          type: string
          format: '-'
          maxLength: 10
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: false
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: true
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
      type: object
    LogBulanan:
      title: LogBulanan
      description: LogBulanan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        pend:
          title: pend
          description: pend
          type: integer
          format: '-'
          nullable: false
        wni_lk:
          title: wni_lk
          description: wni_lk
          type: integer
          format: '-'
          nullable: true
        wni_pr:
          title: wni_pr
          description: wni_pr
          type: integer
          format: '-'
          nullable: true
        kk:
          title: kk
          description: kk
          type: integer
          format: '-'
          nullable: false
        tgl:
          title: tgl
          description: tgl
          type: string
          format: '-'
          nullable: false
        kk_lk:
          title: kk_lk
          description: kk_lk
          type: integer
          format: '-'
          nullable: true
        kk_pr:
          title: kk_pr
          description: kk_pr
          type: integer
          format: '-'
          nullable: true
        wna_lk:
          title: wna_lk
          description: wna_lk
          type: integer
          format: '-'
          nullable: true
        wna_pr:
          title: wna_pr
          description: wna_pr
          type: integer
          format: '-'
          nullable: true
      type: object
    LogEkspor:
      title: LogEkspor
      description: LogEkspor
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        tgl_ekspor:
          title: tgl_ekspor
          description: tgl_ekspor
          type: string
          format: '-'
          nullable: false
        kode_ekspor:
          title: kode_ekspor
          description: kode_ekspor
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        semua:
          title: semua
          description: semua
          type: integer
          format: '-'
          nullable: false
        dari_tgl:
          title: dari_tgl
          description: dari_tgl
          type: string
          format: date
          nullable: true
        total:
          title: total
          description: total
          type: integer
          format: '-'
          nullable: false
      type: object
    LogKeluarga:
      title: LogKeluarga
      description: LogKeluarga
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_kk:
          title: id_kk
          description: id_kk
          type: integer
          format: '-'
          nullable: false
        kk_sex:
          title: kk_sex
          description: kk_sex
          type: integer
          format: '-'
          nullable: true
        id_peristiwa:
          title: id_peristiwa
          description: id_peristiwa
          type: integer
          format: '-'
          nullable: false
        tgl_peristiwa:
          title: tgl_peristiwa
          description: tgl_peristiwa
          type: string
          format: '-'
          nullable: false
      type: object
    LogPenduduk:
      title: LogPenduduk
      description: LogPenduduk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: false
        id_detail:
          title: id_detail
          description: id_detail
          type: integer
          format: '-'
          nullable: false
        tanggal:
          title: tanggal
          description: tanggal
          type: string
          format: '-'
          nullable: false
        bulan:
          title: bulan
          description: bulan
          type: string
          format: '-'
          maxLength: 2
          nullable: false
        tahun:
          title: tahun
          description: tahun
          type: string
          format: '-'
          maxLength: 4
          nullable: false
        tgl_peristiwa:
          title: tgl_peristiwa
          description: tgl_peristiwa
          type: string
          format: '-'
          nullable: true
        catatan:
          title: catatan
          description: catatan
          type: string
          format: '-'
          nullable: true
        no_kk:
          title: no_kk
          description: no_kk
          type: number
          format: float
          maxLength: 16
          nullable: true
        nama_kk:
          title: nama_kk
          description: nama_kk
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        ref_pindah:
          title: ref_pindah
          description: ref_pindah
          type: integer
          format: '-'
          nullable: true
      type: object
    LogPerubahanPenduduk:
      title: LogPerubahanPenduduk
      description: LogPerubahanPenduduk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: false
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: string
          format: '-'
          maxLength: 200
          nullable: false
        tanggal:
          title: tanggal
          description: tanggal
          type: string
          format: '-'
          nullable: false
      type: object
    LogSurat:
      title: LogSurat
      description: LogSurat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_format_surat:
          title: id_format_surat
          description: id_format_surat
          type: integer
          format: '-'
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: true
        id_pamong:
          title: id_pamong
          description: id_pamong
          type: integer
          format: '-'
          nullable: false
        id_user:
          title: id_user
          description: id_user
          type: integer
          format: '-'
          nullable: false
        tanggal:
          title: tanggal
          description: tanggal
          type: string
          format: '-'
          nullable: false
        bulan:
          title: bulan
          description: bulan
          type: string
          format: '-'
          maxLength: 2
          nullable: true
        tahun:
          title: tahun
          description: tahun
          type: string
          format: '-'
          maxLength: 4
          nullable: true
        no_surat:
          title: no_surat
          description: no_surat
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        nama_surat:
          title: nama_surat
          description: nama_surat
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        lampiran:
          title: lampiran
          description: lampiran
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        nik_non_warga:
          title: nik_non_warga
          description: nik_non_warga
          type: number
          format: float
          maxLength: 16
          nullable: true
        nama_non_warga:
          title: nama_non_warga
          description: nama_non_warga
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 200
          nullable: true
      type: object
    Lokasi:
      title: Lokasi
      description: Lokasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        desk:
          title: desk
          description: desk
          type: string
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        lat:
          title: lat
          description: lat
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        lng:
          title: lng
          description: lng
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        ref_point:
          title: ref_point
          description: ref_point
          type: integer
          format: '-'
          nullable: false
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: true
      type: object
    MediaSosial:
      title: MediaSosial
      description: MediaSosial
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        gambar:
          title: gambar
          description: gambar
          type: string
          format: '-'
          nullable: false
        link:
          title: link
          description: link
          type: string
          format: '-'
          nullable: true
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
      type: object
    Menu:
      title: Menu
      description: Menu
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        link:
          title: link
          description: link
          type: string
          format: '-'
          maxLength: 500
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: false
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: false
        link_tipe:
          title: link_tipe
          description: link_tipe
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: true
      type: object
    Migrasi:
      title: Migrasi
      description: Migrasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        versi_database:
          title: versi_database
          description: versi_database
          type: string
          format: '-'
          maxLength: 10
          nullable: false
      type: object
    MutasiInventarisAsset:
      title: MutasiInventarisAsset
      description: MutasiInventarisAsset
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_inventaris_asset:
          title: id_inventaris_asset
          description: id_inventaris_asset
          type: integer
          format: '-'
          nullable: true
        jenis_mutasi:
          title: jenis_mutasi
          description: jenis_mutasi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tahun_mutasi:
          title: tahun_mutasi
          description: tahun_mutasi
          type: string
          format: date
          nullable: false
        harga_jual:
          title: harga_jual
          description: harga_jual
          type: number
          format: float
          nullable: true
        sumbangkan:
          title: sumbangkan
          description: sumbangkan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    MutasiInventarisGedung:
      title: MutasiInventarisGedung
      description: MutasiInventarisGedung
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_inventaris_gedung:
          title: id_inventaris_gedung
          description: id_inventaris_gedung
          type: integer
          format: '-'
          nullable: true
        jenis_mutasi:
          title: jenis_mutasi
          description: jenis_mutasi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tahun_mutasi:
          title: tahun_mutasi
          description: tahun_mutasi
          type: string
          format: date
          nullable: false
        harga_jual:
          title: harga_jual
          description: harga_jual
          type: number
          format: float
          nullable: true
        sumbangkan:
          title: sumbangkan
          description: sumbangkan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    MutasiInventarisJalan:
      title: MutasiInventarisJalan
      description: MutasiInventarisJalan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_inventaris_jalan:
          title: id_inventaris_jalan
          description: id_inventaris_jalan
          type: integer
          format: '-'
          nullable: true
        jenis_mutasi:
          title: jenis_mutasi
          description: jenis_mutasi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tahun_mutasi:
          title: tahun_mutasi
          description: tahun_mutasi
          type: string
          format: date
          nullable: false
        harga_jual:
          title: harga_jual
          description: harga_jual
          type: number
          format: float
          nullable: true
        sumbangkan:
          title: sumbangkan
          description: sumbangkan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    MutasiInventarisPeralatan:
      title: MutasiInventarisPeralatan
      description: MutasiInventarisPeralatan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_inventaris_peralatan:
          title: id_inventaris_peralatan
          description: id_inventaris_peralatan
          type: integer
          format: '-'
          nullable: true
        jenis_mutasi:
          title: jenis_mutasi
          description: jenis_mutasi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tahun_mutasi:
          title: tahun_mutasi
          description: tahun_mutasi
          type: string
          format: date
          nullable: false
        harga_jual:
          title: harga_jual
          description: harga_jual
          type: number
          format: float
          nullable: true
        sumbangkan:
          title: sumbangkan
          description: sumbangkan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    MutasiInventarisTanah:
      title: MutasiInventarisTanah
      description: MutasiInventarisTanah
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_inventaris_tanah:
          title: id_inventaris_tanah
          description: id_inventaris_tanah
          type: integer
          format: '-'
          nullable: true
        jenis_mutasi:
          title: jenis_mutasi
          description: jenis_mutasi
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        tahun_mutasi:
          title: tahun_mutasi
          description: tahun_mutasi
          type: string
          format: date
          nullable: false
        harga_jual:
          title: harga_jual
          description: harga_jual
          type: number
          format: float
          nullable: true
        sumbangkan:
          title: sumbangkan
          description: sumbangkan
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: false
        visible:
          title: visible
          description: visible
          type: integer
          format: '-'
          nullable: false
      type: object
    Outbox:
      title: Outbox
      description: Outbox
      properties:
        UpdatedInDB:
          title: UpdatedInDB
          description: UpdatedInDB
          type: string
          format: '-'
          nullable: false
        InsertIntoDB:
          title: InsertIntoDB
          description: InsertIntoDB
          type: string
          format: '-'
          nullable: false
        SendingDateTime:
          title: SendingDateTime
          description: SendingDateTime
          type: string
          format: '-'
          nullable: false
        SendBefore:
          title: SendBefore
          description: SendBefore
          type: string
          format: '-'
          nullable: false
        SendAfter:
          title: SendAfter
          description: SendAfter
          type: string
          format: '-'
          nullable: false
        Text:
          title: Text
          description: Text
          type: string
          format: '-'
          nullable: true
        DestinationNumber:
          title: DestinationNumber
          description: DestinationNumber
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        Coding:
          title: Coding
          description: Coding
          type: string
          format: '-'
          nullable: false
        UDH:
          title: UDH
          description: UDH
          type: string
          format: '-'
          nullable: true
        Class:
          title: Class
          description: Class
          type: integer
          format: '-'
          nullable: true
        TextDecoded:
          title: TextDecoded
          description: TextDecoded
          type: string
          format: '-'
          nullable: false
        ID:
          title: ID
          description: ID
          type: integer
          format: '-'
          nullable: false
        MultiPart:
          title: MultiPart
          description: MultiPart
          type: string
          format: '-'
          nullable: true
        RelativeValidity:
          title: RelativeValidity
          description: RelativeValidity
          type: integer
          format: '-'
          nullable: true
        SenderID:
          title: SenderID
          description: SenderID
          type: string
          format: '-'
          maxLength: 255
          nullable: true
        SendingTimeOut:
          title: SendingTimeOut
          description: SendingTimeOut
          type: string
          format: '-'
          nullable: true
        DeliveryReport:
          title: DeliveryReport
          description: DeliveryReport
          type: string
          format: '-'
          nullable: true
        CreatorID:
          title: CreatorID
          description: CreatorID
          type: string
          format: '-'
          nullable: true
      type: object
    PendudukHidup:
      title: PendudukHidup
      description: PendudukHidup
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nik:
          title: nik
          description: nik
          type: number
          format: float
          maxLength: 16
          nullable: false
        id_kk:
          title: id_kk
          description: id_kk
          type: integer
          format: '-'
          nullable: true
        kk_level:
          title: kk_level
          description: kk_level
          type: integer
          format: '-'
          nullable: false
        id_rtm:
          title: id_rtm
          description: id_rtm
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        rtm_level:
          title: rtm_level
          description: rtm_level
          type: integer
          format: '-'
          nullable: true
        sex:
          title: sex
          description: sex
          type: integer
          format: '-'
          nullable: true
        tempatlahir:
          title: tempatlahir
          description: tempatlahir
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        tanggallahir:
          title: tanggallahir
          description: tanggallahir
          type: string
          format: date
          nullable: true
        agama_id:
          title: agama_id
          description: agama_id
          type: integer
          format: '-'
          nullable: true
        pendidikan_kk_id:
          title: pendidikan_kk_id
          description: pendidikan_kk_id
          type: integer
          format: '-'
          nullable: true
        pendidikan_sedang_id:
          title: pendidikan_sedang_id
          description: pendidikan_sedang_id
          type: integer
          format: '-'
          nullable: true
        pekerjaan_id:
          title: pekerjaan_id
          description: pekerjaan_id
          type: integer
          format: '-'
          nullable: true
        status_kawin:
          title: status_kawin
          description: status_kawin
          type: integer
          format: '-'
          nullable: true
        warganegara_id:
          title: warganegara_id
          description: warganegara_id
          type: integer
          format: '-'
          nullable: false
        dokumen_pasport:
          title: dokumen_pasport
          description: dokumen_pasport
          type: string
          format: '-'
          maxLength: 45
          nullable: true
        dokumen_kitas:
          title: dokumen_kitas
          description: dokumen_kitas
          type: integer
          format: '-'
          nullable: true
        ayah_nik:
          title: ayah_nik
          description: ayah_nik
          type: string
          format: '-'
          maxLength: 16
          nullable: true
        ibu_nik:
          title: ibu_nik
          description: ibu_nik
          type: string
          format: '-'
          maxLength: 16
          nullable: true
        nama_ayah:
          title: nama_ayah
          description: nama_ayah
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        nama_ibu:
          title: nama_ibu
          description: nama_ibu
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        golongan_darah_id:
          title: golongan_darah_id
          description: golongan_darah_id
          type: integer
          format: '-'
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: true
        alamat_sebelumnya:
          title: alamat_sebelumnya
          description: alamat_sebelumnya
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        alamat_sekarang:
          title: alamat_sekarang
          description: alamat_sekarang
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        status_dasar:
          title: status_dasar
          description: status_dasar
          type: integer
          format: '-'
          nullable: false
        hamil:
          title: hamil
          description: hamil
          type: integer
          format: '-'
          nullable: true
        cacat_id:
          title: cacat_id
          description: cacat_id
          type: integer
          format: '-'
          nullable: true
        sakit_menahun_id:
          title: sakit_menahun_id
          description: sakit_menahun_id
          type: integer
          format: '-'
          nullable: true
        akta_lahir:
          title: akta_lahir
          description: akta_lahir
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        akta_perkawinan:
          title: akta_perkawinan
          description: akta_perkawinan
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        tanggalperkawinan:
          title: tanggalperkawinan
          description: tanggalperkawinan
          type: string
          format: date
          nullable: true
        akta_perceraian:
          title: akta_perceraian
          description: akta_perceraian
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        tanggalperceraian:
          title: tanggalperceraian
          description: tanggalperceraian
          type: string
          format: date
          nullable: true
        cara_kb_id:
          title: cara_kb_id
          description: cara_kb_id
          type: integer
          format: '-'
          nullable: true
        telepon:
          title: telepon
          description: telepon
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        tanggal_akhir_paspor:
          title: tanggal_akhir_paspor
          description: tanggal_akhir_paspor
          type: string
          format: date
          nullable: true
        no_kk_sebelumnya:
          title: no_kk_sebelumnya
          description: no_kk_sebelumnya
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        ktp_el:
          title: ktp_el
          description: ktp_el
          type: integer
          format: '-'
          nullable: true
        status_rekam:
          title: status_rekam
          description: status_rekam
          type: integer
          format: '-'
          nullable: true
        waktu_lahir:
          title: waktu_lahir
          description: waktu_lahir
          type: string
          format: '-'
          maxLength: 5
          nullable: true
        tempat_dilahirkan:
          title: tempat_dilahirkan
          description: tempat_dilahirkan
          type: integer
          format: '-'
          nullable: true
        jenis_kelahiran:
          title: jenis_kelahiran
          description: jenis_kelahiran
          type: integer
          format: '-'
          nullable: true
        kelahiran_anak_ke:
          title: kelahiran_anak_ke
          description: kelahiran_anak_ke
          type: integer
          format: '-'
          nullable: true
        penolong_kelahiran:
          title: penolong_kelahiran
          description: penolong_kelahiran
          type: integer
          format: '-'
          nullable: true
        berat_lahir:
          title: berat_lahir
          description: berat_lahir
          type: string
          format: '-'
          nullable: true
        panjang_lahir:
          title: panjang_lahir
          description: panjang_lahir
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        tag_id_card:
          title: tag_id_card
          description: tag_id_card
          type: string
          format: '-'
          maxLength: 15
          nullable: true
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: true
        id_asuransi:
          title: id_asuransi
          description: id_asuransi
          type: integer
          format: '-'
          nullable: true
        no_asuransi:
          title: no_asuransi
          description: no_asuransi
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    PermohonanSurat:
      title: PermohonanSurat
      description: PermohonanSurat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_pemohon:
          title: id_pemohon
          description: id_pemohon
          type: integer
          format: '-'
          nullable: false
        id_surat:
          title: id_surat
          description: id_surat
          type: integer
          format: '-'
          nullable: false
        isian_form:
          title: isian_form
          description: isian_form
          type: string
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          nullable: true
        no_hp_aktif:
          title: no_hp_aktif
          description: no_hp_aktif
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        syarat:
          title: syarat
          description: syarat
          type: string
          format: '-'
          nullable: false
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
      type: object
    Pertanyaan:
      title: Pertanyaan
      description: Pertanyaan
      properties:
        _1:
          title: '1'
          description: '1'
          type: integer
          format: '-'
          nullable: true
        Pendapatan_perkapita_perbulan:
          title: 'Pendapatan perkapita perbulan'
          description: 'Pendapatan perkapita perbulan'
          type: string
          format: '-'
          maxLength: 87
          nullable: true
        _36:
          title: '36'
          description: '36'
          type: integer
          format: '-'
          nullable: true
        _15:
          title: '15'
          description: '15'
          type: integer
          format: '-'
          nullable: true
        _24:
          title: '24'
          description: '24'
          type: integer
          format: '-'
          nullable: true
        _23:
          title: '23'
          description: '23'
          type: integer
          format: '-'
          nullable: true
        _26:
          title: '26'
          description: '26'
          type: integer
          format: '-'
          nullable: true
        _28:
          title: '28'
          description: '28'
          type: integer
          format: '-'
          nullable: true
      type: object
    Point:
      title: Point
      description: Point
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        simbol:
          title: simbol
          description: simbol
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: false
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: false
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
      type: object
    Polygon:
      title: Polygon
      description: Polygon
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        simbol:
          title: simbol
          description: simbol
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        color:
          title: color
          description: color
          type: string
          format: '-'
          maxLength: 10
          nullable: false
        tipe:
          title: tipe
          description: tipe
          type: integer
          format: '-'
          nullable: true
        parrent:
          title: parrent
          description: parrent
          type: integer
          format: '-'
          nullable: true
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: false
      type: object
    Program:
      title: Program
      description: Program
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        sasaran:
          title: sasaran
          description: sasaran
          type: integer
          format: '-'
          nullable: true
        ndesc:
          title: ndesc
          description: ndesc
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        sdate:
          title: sdate
          description: sdate
          type: string
          format: date
          nullable: false
        edate:
          title: edate
          description: edate
          type: string
          format: date
          nullable: false
        userid:
          title: userid
          description: userid
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        asaldana:
          title: asaldana
          description: asaldana
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    ProgramPeserta:
      title: ProgramPeserta
      description: ProgramPeserta
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        peserta:
          title: peserta
          description: peserta
          type: string
          format: '-'
          maxLength: 30
          nullable: false
        program_id:
          title: program_id
          description: program_id
          type: integer
          format: '-'
          nullable: false
        no_id_kartu:
          title: no_id_kartu
          description: no_id_kartu
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        kartu_nik:
          title: kartu_nik
          description: kartu_nik
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        kartu_nama:
          title: kartu_nama
          description: kartu_nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        kartu_tempat_lahir:
          title: kartu_tempat_lahir
          description: kartu_tempat_lahir
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        kartu_tanggal_lahir:
          title: kartu_tanggal_lahir
          description: kartu_tanggal_lahir
          type: string
          format: date
          nullable: true
        kartu_alamat:
          title: kartu_alamat
          description: kartu_alamat
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        kartu_peserta:
          title: kartu_peserta
          description: kartu_peserta
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    Provinsi:
      title: Provinsi
      description: Provinsi
      properties:
        kode:
          title: kode
          description: kode
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    RefDokumen:
      title: RefDokumen
      description: RefDokumen
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    RefPindah:
      title: RefPindah
      description: RefPindah
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    RefStatusCovid:
      title: RefStatusCovid
      description: RefStatusCovid
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    RefSyaratSurat:
      title: RefSyaratSurat
      description: RefSyaratSurat
      properties:
        ref_syarat_id:
          title: ref_syarat_id
          description: ref_syarat_id
          type: integer
          format: '-'
          nullable: false
        ref_syarat_nama:
          title: ref_syarat_nama
          description: ref_syarat_nama
          type: string
          format: '-'
          maxLength: 255
          nullable: false
      type: object
    Sentitems:
      title: Sentitems
      description: Sentitems
      properties:
        UpdatedInDB:
          title: UpdatedInDB
          description: UpdatedInDB
          type: string
          format: '-'
          nullable: false
        InsertIntoDB:
          title: InsertIntoDB
          description: InsertIntoDB
          type: string
          format: '-'
          nullable: false
        SendingDateTime:
          title: SendingDateTime
          description: SendingDateTime
          type: string
          format: '-'
          nullable: false
        DeliveryDateTime:
          title: DeliveryDateTime
          description: DeliveryDateTime
          type: string
          format: '-'
          nullable: true
        Text:
          title: Text
          description: Text
          type: string
          format: '-'
          nullable: false
        DestinationNumber:
          title: DestinationNumber
          description: DestinationNumber
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        Coding:
          title: Coding
          description: Coding
          type: string
          format: '-'
          nullable: false
        UDH:
          title: UDH
          description: UDH
          type: string
          format: '-'
          nullable: false
        SMSCNumber:
          title: SMSCNumber
          description: SMSCNumber
          type: string
          format: '-'
          maxLength: 20
          nullable: false
        Class:
          title: Class
          description: Class
          type: integer
          format: '-'
          nullable: false
        TextDecoded:
          title: TextDecoded
          description: TextDecoded
          type: string
          format: '-'
          nullable: false
        ID:
          title: ID
          description: ID
          type: integer
          format: '-'
          nullable: false
        SenderID:
          title: SenderID
          description: SenderID
          type: string
          format: '-'
          maxLength: 255
          nullable: false
        SequencePosition:
          title: SequencePosition
          description: SequencePosition
          type: integer
          format: '-'
          nullable: false
        Status:
          title: Status
          description: Status
          type: string
          format: '-'
          nullable: false
        StatusError:
          title: StatusError
          description: StatusError
          type: integer
          format: '-'
          nullable: false
        TPMR:
          title: TPMR
          description: TPMR
          type: integer
          format: '-'
          nullable: false
        RelativeValidity:
          title: RelativeValidity
          description: RelativeValidity
          type: integer
          format: '-'
          nullable: false
        CreatorID:
          title: CreatorID
          description: CreatorID
          type: string
          format: '-'
          nullable: false
      type: object
    SettingAplikasi:
      title: SettingAplikasi
      description: SettingAplikasi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        key:
          title: key
          description: key
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        value:
          title: value
          description: value
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        jenis:
          title: jenis
          description: jenis
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        kategori:
          title: kategori
          description: kategori
          type: string
          format: '-'
          maxLength: 30
          nullable: true
      type: object
    SettingAplikasiOptions:
      title: SettingAplikasiOptions
      description: SettingAplikasiOptions
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_setting:
          title: id_setting
          description: id_setting
          type: integer
          format: '-'
          nullable: false
        value:
          title: value
          description: value
          type: string
          format: '-'
          maxLength: 512
          nullable: false
        kode:
          title: kode
          description: kode
          type: integer
          format: '-'
          nullable: true
      type: object
    SettingModul:
      title: SettingModul
      description: SettingModul
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        modul:
          title: modul
          description: modul
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        url:
          title: url
          description: url
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        aktif:
          title: aktif
          description: aktif
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        ikon:
          title: ikon
          description: ikon
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: false
        level:
          title: level
          description: level
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        hidden:
          title: hidden
          description: hidden
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        ikon_kecil:
          title: ikon_kecil
          description: ikon_kecil
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        parent:
          title: parent
          description: parent
          type: integer
          format: '-'
          nullable: false
      type: object
    SettingSms:
      title: SettingSms
      description: SettingSms
      properties:
        autoreply_text:
          title: autoreply_text
          description: autoreply_text
          type: string
          format: '-'
          maxLength: 160
          nullable: true
      type: object
    Suplemen:
      title: Suplemen
      description: Suplemen
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        sasaran:
          title: sasaran
          description: sasaran
          type: integer
          format: '-'
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 300
          nullable: true
      type: object
    SuplemenTerdata:
      title: SuplemenTerdata
      description: SuplemenTerdata
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_suplemen:
          title: id_suplemen
          description: id_suplemen
          type: integer
          format: '-'
          nullable: true
        id_terdata:
          title: id_terdata
          description: id_terdata
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        sasaran:
          title: sasaran
          description: sasaran
          type: integer
          format: '-'
          nullable: true
        keterangan:
          title: keterangan
          description: keterangan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    SuratKeluar:
      title: SuratKeluar
      description: SuratKeluar
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nomor_urut:
          title: nomor_urut
          description: nomor_urut
          type: string
          format: '-'
          nullable: true
        nomor_surat:
          title: nomor_surat
          description: nomor_surat
          type: string
          format: '-'
          maxLength: 35
          nullable: true
        kode_surat:
          title: kode_surat
          description: kode_surat
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        tanggal_surat:
          title: tanggal_surat
          description: tanggal_surat
          type: string
          format: date
          nullable: false
        tanggal_catat:
          title: tanggal_catat
          description: tanggal_catat
          type: string
          format: '-'
          nullable: false
        tujuan:
          title: tujuan
          description: tujuan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        isi_singkat:
          title: isi_singkat
          description: isi_singkat
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        berkas_scan:
          title: berkas_scan
          description: berkas_scan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    SuratMasuk:
      title: SuratMasuk
      description: SuratMasuk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nomor_urut:
          title: nomor_urut
          description: nomor_urut
          type: string
          format: '-'
          nullable: true
        tanggal_penerimaan:
          title: tanggal_penerimaan
          description: tanggal_penerimaan
          type: string
          format: date
          nullable: false
        nomor_surat:
          title: nomor_surat
          description: nomor_surat
          type: string
          format: '-'
          maxLength: 35
          nullable: true
        kode_surat:
          title: kode_surat
          description: kode_surat
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        tanggal_surat:
          title: tanggal_surat
          description: tanggal_surat
          type: string
          format: date
          nullable: false
        pengirim:
          title: pengirim
          description: pengirim
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        isi_singkat:
          title: isi_singkat
          description: isi_singkat
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        isi_disposisi:
          title: isi_disposisi
          description: isi_disposisi
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        berkas_scan:
          title: berkas_scan
          description: berkas_scan
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    SyaratSurat:
      title: SyaratSurat
      description: SyaratSurat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        surat_format_id:
          title: surat_format_id
          description: surat_format_id
          type: integer
          format: '-'
          nullable: false
        ref_syarat_id:
          title: ref_syarat_id
          description: ref_syarat_id
          type: integer
          format: '-'
          nullable: false
      type: object
    SysTraffic:
      title: SysTraffic
      description: SysTraffic
      properties:
        Tanggal:
          title: Tanggal
          description: Tanggal
          type: string
          format: date
          nullable: false
        ipAddress:
          title: ipAddress
          description: ipAddress
          type: string
          format: '-'
          nullable: false
        Jumlah:
          title: Jumlah
          description: Jumlah
          type: integer
          format: '-'
          nullable: false
      type: object
    TeksBerjalan:
      title: TeksBerjalan
      description: TeksBerjalan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        teks:
          title: teks
          description: teks
          type: string
          format: '-'
          nullable: true
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: true
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: true
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: false
        tautan:
          title: tautan
          description: tautan
          type: string
          format: '-'
          maxLength: 150
          nullable: true
        judul_tautan:
          title: judul_tautan
          description: judul_tautan
          type: string
          format: '-'
          maxLength: 150
          nullable: true
      type: object
    TwebAset:
      title: TwebAset
      description: TwebAset
      properties:
        id_aset:
          title: id_aset
          description: id_aset
          type: integer
          format: '-'
          nullable: false
        golongan:
          title: golongan
          description: golongan
          type: string
          format: '-'
          maxLength: 11
          nullable: false
        bidang:
          title: bidang
          description: bidang
          type: string
          format: '-'
          maxLength: 11
          nullable: false
        kelompok:
          title: kelompok
          description: kelompok
          type: string
          format: '-'
          maxLength: 11
          nullable: false
        sub_kelompok:
          title: sub_kelompok
          description: sub_kelompok
          type: string
          format: '-'
          maxLength: 11
          nullable: false
        sub_sub_kelompok:
          title: sub_sub_kelompok
          description: sub_sub_kelompok
          type: string
          format: '-'
          maxLength: 11
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 255
          nullable: false
      type: object
    TwebCacat:
      title: TwebCacat
      description: TwebCacat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    TwebCaraKb:
      title: TwebCaraKb
      description: TwebCaraKb
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        sex:
          title: sex
          description: sex
          type: integer
          format: '-'
          nullable: true
      type: object
    TwebDesaPamong:
      title: TwebDesaPamong
      description: TwebDesaPamong
      properties:
        pamong_id:
          title: pamong_id
          description: pamong_id
          type: integer
          format: '-'
          nullable: false
        pamong_nama:
          title: pamong_nama
          description: pamong_nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        pamong_nip:
          title: pamong_nip
          description: pamong_nip
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        pamong_nik:
          title: pamong_nik
          description: pamong_nik
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        jabatan:
          title: jabatan
          description: jabatan
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        pamong_status:
          title: pamong_status
          description: pamong_status
          type: string
          format: '-'
          maxLength: 45
          nullable: true
        pamong_tgl_terdaftar:
          title: pamong_tgl_terdaftar
          description: pamong_tgl_terdaftar
          type: string
          format: date
          nullable: true
        pamong_ttd:
          title: pamong_ttd
          description: pamong_ttd
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: true
        pamong_tempatlahir:
          title: pamong_tempatlahir
          description: pamong_tempatlahir
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        pamong_tanggallahir:
          title: pamong_tanggallahir
          description: pamong_tanggallahir
          type: string
          format: date
          nullable: true
        pamong_sex:
          title: pamong_sex
          description: pamong_sex
          type: integer
          format: '-'
          nullable: true
        pamong_pendidikan:
          title: pamong_pendidikan
          description: pamong_pendidikan
          type: integer
          format: '-'
          nullable: true
        pamong_agama:
          title: pamong_agama
          description: pamong_agama
          type: integer
          format: '-'
          nullable: true
        pamong_nosk:
          title: pamong_nosk
          description: pamong_nosk
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        pamong_tglsk:
          title: pamong_tglsk
          description: pamong_tglsk
          type: string
          format: date
          nullable: true
        pamong_masajab:
          title: pamong_masajab
          description: pamong_masajab
          type: string
          format: '-'
          maxLength: 120
          nullable: true
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: true
        pamong_niap:
          title: pamong_niap
          description: pamong_niap
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        pamong_pangkat:
          title: pamong_pangkat
          description: pamong_pangkat
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        pamong_nohenti:
          title: pamong_nohenti
          description: pamong_nohenti
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        pamong_tglhenti:
          title: pamong_tglhenti
          description: pamong_tglhenti
          type: string
          format: date
          nullable: true
        pamong_ub:
          title: pamong_ub
          description: pamong_ub
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
      type: object
    TwebGolonganDarah:
      title: TwebGolonganDarah
      description: TwebGolonganDarah
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 15
          nullable: true
      type: object
    TwebKeluarga:
      title: TwebKeluarga
      description: TwebKeluarga
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        no_kk:
          title: no_kk
          description: no_kk
          type: string
          format: '-'
          maxLength: 160
          nullable: true
        nik_kepala:
          title: nik_kepala
          description: nik_kepala
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        tgl_daftar:
          title: tgl_daftar
          description: tgl_daftar
          type: string
          format: '-'
          nullable: true
        kelas_sosial:
          title: kelas_sosial
          description: kelas_sosial
          type: integer
          format: '-'
          nullable: true
        tgl_cetak_kk:
          title: tgl_cetak_kk
          description: tgl_cetak_kk
          type: string
          format: '-'
          nullable: true
        alamat:
          title: alamat
          description: alamat
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: true
      type: object
    TwebKeluargaSejahtera:
      title: TwebKeluargaSejahtera
      description: TwebKeluargaSejahtera
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    TwebPenduduk:
      title: TwebPenduduk
      description: TwebPenduduk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        nik:
          title: nik
          description: nik
          type: number
          format: float
          maxLength: 16
          nullable: false
        id_kk:
          title: id_kk
          description: id_kk
          type: integer
          format: '-'
          nullable: true
        kk_level:
          title: kk_level
          description: kk_level
          type: integer
          format: '-'
          nullable: false
        id_rtm:
          title: id_rtm
          description: id_rtm
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        rtm_level:
          title: rtm_level
          description: rtm_level
          type: integer
          format: '-'
          nullable: true
        sex:
          title: sex
          description: sex
          type: integer
          format: '-'
          nullable: true
        tempatlahir:
          title: tempatlahir
          description: tempatlahir
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        tanggallahir:
          title: tanggallahir
          description: tanggallahir
          type: string
          format: date
          nullable: true
        agama_id:
          title: agama_id
          description: agama_id
          type: integer
          format: '-'
          nullable: true
        pendidikan_kk_id:
          title: pendidikan_kk_id
          description: pendidikan_kk_id
          type: integer
          format: '-'
          nullable: true
        pendidikan_sedang_id:
          title: pendidikan_sedang_id
          description: pendidikan_sedang_id
          type: integer
          format: '-'
          nullable: true
        pekerjaan_id:
          title: pekerjaan_id
          description: pekerjaan_id
          type: integer
          format: '-'
          nullable: true
        status_kawin:
          title: status_kawin
          description: status_kawin
          type: integer
          format: '-'
          nullable: true
        warganegara_id:
          title: warganegara_id
          description: warganegara_id
          type: integer
          format: '-'
          nullable: false
        dokumen_pasport:
          title: dokumen_pasport
          description: dokumen_pasport
          type: string
          format: '-'
          maxLength: 45
          nullable: true
        dokumen_kitas:
          title: dokumen_kitas
          description: dokumen_kitas
          type: integer
          format: '-'
          nullable: true
        ayah_nik:
          title: ayah_nik
          description: ayah_nik
          type: string
          format: '-'
          maxLength: 16
          nullable: true
        ibu_nik:
          title: ibu_nik
          description: ibu_nik
          type: string
          format: '-'
          maxLength: 16
          nullable: true
        nama_ayah:
          title: nama_ayah
          description: nama_ayah
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        nama_ibu:
          title: nama_ibu
          description: nama_ibu
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        golongan_darah_id:
          title: golongan_darah_id
          description: golongan_darah_id
          type: integer
          format: '-'
          nullable: true
        id_cluster:
          title: id_cluster
          description: id_cluster
          type: integer
          format: '-'
          nullable: false
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: true
        alamat_sebelumnya:
          title: alamat_sebelumnya
          description: alamat_sebelumnya
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        alamat_sekarang:
          title: alamat_sekarang
          description: alamat_sekarang
          type: string
          format: '-'
          maxLength: 200
          nullable: true
        status_dasar:
          title: status_dasar
          description: status_dasar
          type: integer
          format: '-'
          nullable: false
        hamil:
          title: hamil
          description: hamil
          type: integer
          format: '-'
          nullable: true
        cacat_id:
          title: cacat_id
          description: cacat_id
          type: integer
          format: '-'
          nullable: true
        sakit_menahun_id:
          title: sakit_menahun_id
          description: sakit_menahun_id
          type: integer
          format: '-'
          nullable: true
        akta_lahir:
          title: akta_lahir
          description: akta_lahir
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        akta_perkawinan:
          title: akta_perkawinan
          description: akta_perkawinan
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        tanggalperkawinan:
          title: tanggalperkawinan
          description: tanggalperkawinan
          type: string
          format: date
          nullable: true
        akta_perceraian:
          title: akta_perceraian
          description: akta_perceraian
          type: string
          format: '-'
          maxLength: 40
          nullable: true
        tanggalperceraian:
          title: tanggalperceraian
          description: tanggalperceraian
          type: string
          format: date
          nullable: true
        cara_kb_id:
          title: cara_kb_id
          description: cara_kb_id
          type: integer
          format: '-'
          nullable: true
        telepon:
          title: telepon
          description: telepon
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        tanggal_akhir_paspor:
          title: tanggal_akhir_paspor
          description: tanggal_akhir_paspor
          type: string
          format: date
          nullable: true
        no_kk_sebelumnya:
          title: no_kk_sebelumnya
          description: no_kk_sebelumnya
          type: string
          format: '-'
          maxLength: 30
          nullable: true
        ktp_el:
          title: ktp_el
          description: ktp_el
          type: integer
          format: '-'
          nullable: true
        status_rekam:
          title: status_rekam
          description: status_rekam
          type: integer
          format: '-'
          nullable: true
        waktu_lahir:
          title: waktu_lahir
          description: waktu_lahir
          type: string
          format: '-'
          maxLength: 5
          nullable: true
        tempat_dilahirkan:
          title: tempat_dilahirkan
          description: tempat_dilahirkan
          type: integer
          format: '-'
          nullable: true
        jenis_kelahiran:
          title: jenis_kelahiran
          description: jenis_kelahiran
          type: integer
          format: '-'
          nullable: true
        kelahiran_anak_ke:
          title: kelahiran_anak_ke
          description: kelahiran_anak_ke
          type: integer
          format: '-'
          nullable: true
        penolong_kelahiran:
          title: penolong_kelahiran
          description: penolong_kelahiran
          type: integer
          format: '-'
          nullable: true
        berat_lahir:
          title: berat_lahir
          description: berat_lahir
          type: string
          format: '-'
          nullable: true
        panjang_lahir:
          title: panjang_lahir
          description: panjang_lahir
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        tag_id_card:
          title: tag_id_card
          description: tag_id_card
          type: string
          format: '-'
          maxLength: 15
          nullable: true
        created_at:
          title: created_at
          description: created_at
          type: string
          format: '-'
          nullable: false
        created_by:
          title: created_by
          description: created_by
          type: integer
          format: '-'
          nullable: false
        updated_at:
          title: updated_at
          description: updated_at
          type: string
          format: '-'
          nullable: false
        updated_by:
          title: updated_by
          description: updated_by
          type: integer
          format: '-'
          nullable: true
        id_asuransi:
          title: id_asuransi
          description: id_asuransi
          type: integer
          format: '-'
          nullable: true
        no_asuransi:
          title: no_asuransi
          description: no_asuransi
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        email:
          title: email
          description: email
          type: string
          format: '-'
          maxLength: 50
          nullable: true
      type: object
    TwebPendudukAgama:
      title: TwebPendudukAgama
      description: TwebPendudukAgama
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    TwebPendudukAsuransi:
      title: TwebPendudukAsuransi
      description: TwebPendudukAsuransi
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    TwebPendudukHubungan:
      title: TwebPendudukHubungan
      description: TwebPendudukHubungan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    TwebPendudukKawin:
      title: TwebPendudukKawin
      description: TwebPendudukKawin
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
      type: object
    TwebPendudukMandiri:
      title: TwebPendudukMandiri
      description: TwebPendudukMandiri
      properties:
        pin:
          title: pin
          description: pin
          type: string
          format: '-'
          maxLength: 32
          nullable: false
        last_login:
          title: last_login
          description: last_login
          type: string
          format: '-'
          nullable: true
        tanggal_buat:
          title: tanggal_buat
          description: tanggal_buat
          type: string
          format: '-'
          nullable: true
        id_pend:
          title: id_pend
          description: id_pend
          type: integer
          format: '-'
          nullable: false
      type: object
    TwebPendudukMap:
      title: TwebPendudukMap
      description: TwebPendudukMap
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        lat:
          title: lat
          description: lat
          type: string
          format: '-'
          maxLength: 24
          nullable: true
        lng:
          title: lng
          description: lng
          type: string
          format: '-'
          maxLength: 24
          nullable: true
      type: object
    TwebPendudukPekerjaan:
      title: TwebPendudukPekerjaan
      description: TwebPendudukPekerjaan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: true
      type: object
    TwebPendudukPendidikan:
      title: TwebPendudukPendidikan
      description: TwebPendudukPendidikan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    TwebPendudukPendidikanKk:
      title: TwebPendudukPendidikanKk
      description: TwebPendudukPendidikanKk
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    TwebPendudukSex:
      title: TwebPendudukSex
      description: TwebPendudukSex
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 15
          nullable: true
      type: object
    TwebPendudukStatus:
      title: TwebPendudukStatus
      description: TwebPendudukStatus
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: true
      type: object
    TwebPendudukUmur:
      title: TwebPendudukUmur
      description: TwebPendudukUmur
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 25
          nullable: true
        dari:
          title: dari
          description: dari
          type: integer
          format: '-'
          nullable: true
        sampai:
          title: sampai
          description: sampai
          type: integer
          format: '-'
          nullable: true
        status:
          title: status
          description: status
          type: integer
          format: '-'
          nullable: true
      type: object
    TwebPendudukWarganegara:
      title: TwebPendudukWarganegara
      description: TwebPendudukWarganegara
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 25
          nullable: true
      type: object
    TwebRtm:
      title: TwebRtm
      description: TwebRtm
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nik_kepala:
          title: nik_kepala
          description: nik_kepala
          type: integer
          format: '-'
          nullable: false
        no_kk:
          title: no_kk
          description: no_kk
          type: string
          format: '-'
          maxLength: 30
          nullable: false
        tgl_daftar:
          title: tgl_daftar
          description: tgl_daftar
          type: string
          format: '-'
          nullable: false
        kelas_sosial:
          title: kelas_sosial
          description: kelas_sosial
          type: integer
          format: '-'
          nullable: true
      type: object
    TwebRtmHubungan:
      title: TwebRtmHubungan
      description: TwebRtmHubungan
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 20
          nullable: false
      type: object
    TwebSakitMenahun:
      title: TwebSakitMenahun
      description: TwebSakitMenahun
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 255
          nullable: false
      type: object
    TwebStatusDasar:
      title: TwebStatusDasar
      description: TwebStatusDasar
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: true
      type: object
    TwebStatusKtp:
      title: TwebStatusKtp
      description: TwebStatusKtp
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        ktp_el:
          title: ktp_el
          description: ktp_el
          type: integer
          format: '-'
          nullable: false
        status_rekam:
          title: status_rekam
          description: status_rekam
          type: string
          format: '-'
          maxLength: 50
          nullable: false
      type: object
    TwebSuratAtribut:
      title: TwebSuratAtribut
      description: TwebSuratAtribut
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        id_surat:
          title: id_surat
          description: id_surat
          type: integer
          format: '-'
          nullable: false
        id_tipe:
          title: id_tipe
          description: id_tipe
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 40
          nullable: false
        long:
          title: long
          description: long
          type: integer
          format: '-'
          nullable: false
        kode:
          title: kode
          description: kode
          type: integer
          format: '-'
          nullable: false
      type: object
    TwebSuratFormat:
      title: TwebSuratFormat
      description: TwebSuratFormat
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        url_surat:
          title: url_surat
          description: url_surat
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        kode_surat:
          title: kode_surat
          description: kode_surat
          type: string
          format: '-'
          maxLength: 10
          nullable: true
        lampiran:
          title: lampiran
          description: lampiran
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        kunci:
          title: kunci
          description: kunci
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        favorit:
          title: favorit
          description: favorit
          type: integer
          format: '-'
          maxLength: 1
          nullable: false
        jenis:
          title: jenis
          description: jenis
          type: integer
          format: '-'
          nullable: false
        mandiri:
          title: mandiri
          description: mandiri
          type: integer
          format: '-'
          maxLength: 1
          nullable: true
      type: object
    TwebWilClusterdesa:
      title: TwebWilClusterdesa
      description: TwebWilClusterdesa
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        rt:
          title: rt
          description: rt
          type: string
          format: '-'
          maxLength: 10
          nullable: false
        rw:
          title: rw
          description: rw
          type: string
          format: '-'
          maxLength: 10
          nullable: false
        dusun:
          title: dusun
          description: dusun
          type: string
          format: '-'
          maxLength: 50
          nullable: false
        id_kepala:
          title: id_kepala
          description: id_kepala
          type: integer
          format: '-'
          nullable: true
        lat:
          title: lat
          description: lat
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        lng:
          title: lng
          description: lng
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        zoom:
          title: zoom
          description: zoom
          type: integer
          format: '-'
          nullable: true
        path:
          title: path
          description: path
          type: string
          format: '-'
          nullable: true
        map_tipe:
          title: map_tipe
          description: map_tipe
          type: string
          format: '-'
          maxLength: 20
          nullable: true
      type: object
    User:
      title: User
      description: User
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        username:
          title: username
          description: username
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        password:
          title: password
          description: password
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        id_grup:
          title: id_grup
          description: id_grup
          type: integer
          format: '-'
          nullable: false
        email:
          title: email
          description: email
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        last_login:
          title: last_login
          description: last_login
          type: string
          format: '-'
          nullable: true
        active:
          title: active
          description: active
          type: integer
          format: '-'
          nullable: true
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 50
          nullable: true
        company:
          title: company
          description: company
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        phone:
          title: phone
          description: phone
          type: string
          format: '-'
          maxLength: 20
          nullable: true
        foto:
          title: foto
          description: foto
          type: string
          format: '-'
          maxLength: 100
          nullable: false
        session:
          title: session
          description: session
          type: string
          format: '-'
          maxLength: 40
          nullable: false
      type: object
    UserGrup:
      title: UserGrup
      description: UserGrup
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        nama:
          title: nama
          description: nama
          type: string
          format: '-'
          maxLength: 20
          nullable: false
      type: object
    Widget:
      title: Widget
      description: Widget
      properties:
        id:
          title: id
          description: id
          type: integer
          format: '-'
          nullable: false
        isi:
          title: isi
          description: isi
          type: string
          format: '-'
          nullable: true
        enabled:
          title: enabled
          description: enabled
          type: integer
          format: '-'
          nullable: true
        judul:
          title: judul
          description: judul
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        jenis_widget:
          title: jenis_widget
          description: jenis_widget
          type: integer
          format: '-'
          nullable: false
        urut:
          title: urut
          description: urut
          type: integer
          format: '-'
          nullable: true
        form_admin:
          title: form_admin
          description: form_admin
          type: string
          format: '-'
          maxLength: 100
          nullable: true
        setting:
          title: setting
          description: setting
          type: string
          format: '-'
          nullable: true
      type: object
  requestBodies:
    Agenda:
      description: 'Agenda object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Agenda'
        application/xml:
          schema:
            $ref: '#/components/schemas/Agenda'
        application/json:
          schema:
            $ref: '#/components/schemas/Agenda'
    AnalisisIndikator:
      description: 'AnalisisIndikator object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisIndikator'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisIndikator'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisIndikator'
    AnalisisKategoriIndikator:
      description: 'AnalisisKategoriIndikator object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisKategoriIndikator'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisKategoriIndikator'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisKategoriIndikator'
    AnalisisKlasifikasi:
      description: 'AnalisisKlasifikasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisKlasifikasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisKlasifikasi'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisKlasifikasi'
    AnalisisMaster:
      description: 'AnalisisMaster object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisMaster'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisMaster'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisMaster'
    AnalisisParameter:
      description: 'AnalisisParameter object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisParameter'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisParameter'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisParameter'
    AnalisisPartisipasi:
      description: 'AnalisisPartisipasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisPartisipasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisPartisipasi'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisPartisipasi'
    AnalisisPeriode:
      description: 'AnalisisPeriode object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisPeriode'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisPeriode'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisPeriode'
    AnalisisRefState:
      description: 'AnalisisRefState object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisRefState'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisRefState'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisRefState'
    AnalisisRefSubjek:
      description: 'AnalisisRefSubjek object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisRefSubjek'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisRefSubjek'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisRefSubjek'
    AnalisisRespon:
      description: 'AnalisisRespon object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisRespon'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisRespon'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisRespon'
    AnalisisResponBukti:
      description: 'AnalisisResponBukti object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisResponBukti'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisResponBukti'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisResponBukti'
    AnalisisResponHasil:
      description: 'AnalisisResponHasil object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisResponHasil'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisResponHasil'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisResponHasil'
    AnalisisTipeIndikator:
      description: 'AnalisisTipeIndikator object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnalisisTipeIndikator'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnalisisTipeIndikator'
        application/json:
          schema:
            $ref: '#/components/schemas/AnalisisTipeIndikator'
    AnggotaGrupKontak:
      description: 'AnggotaGrupKontak object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AnggotaGrupKontak'
        application/xml:
          schema:
            $ref: '#/components/schemas/AnggotaGrupKontak'
        application/json:
          schema:
            $ref: '#/components/schemas/AnggotaGrupKontak'
    Area:
      description: 'Area object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Area'
        application/xml:
          schema:
            $ref: '#/components/schemas/Area'
        application/json:
          schema:
            $ref: '#/components/schemas/Area'
    Artikel:
      description: 'Artikel object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Artikel'
        application/xml:
          schema:
            $ref: '#/components/schemas/Artikel'
        application/json:
          schema:
            $ref: '#/components/schemas/Artikel'
    CaptchaCodes:
      description: 'CaptchaCodes object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CaptchaCodes'
        application/xml:
          schema:
            $ref: '#/components/schemas/CaptchaCodes'
        application/json:
          schema:
            $ref: '#/components/schemas/CaptchaCodes'
    Config:
      description: 'Config object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Config'
        application/xml:
          schema:
            $ref: '#/components/schemas/Config'
        application/json:
          schema:
            $ref: '#/components/schemas/Config'
    Covid19Pantau:
      description: 'Covid19Pantau object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Covid19Pantau'
        application/xml:
          schema:
            $ref: '#/components/schemas/Covid19Pantau'
        application/json:
          schema:
            $ref: '#/components/schemas/Covid19Pantau'
    Covid19Pemudik:
      description: 'Covid19Pemudik object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Covid19Pemudik'
        application/xml:
          schema:
            $ref: '#/components/schemas/Covid19Pemudik'
        application/json:
          schema:
            $ref: '#/components/schemas/Covid19Pemudik'
    DaftarAnggotaGrup:
      description: 'DaftarAnggotaGrup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DaftarAnggotaGrup'
        application/xml:
          schema:
            $ref: '#/components/schemas/DaftarAnggotaGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/DaftarAnggotaGrup'
    DaftarGrup:
      description: 'DaftarGrup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DaftarGrup'
        application/xml:
          schema:
            $ref: '#/components/schemas/DaftarGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/DaftarGrup'
    DaftarKontak:
      description: 'DaftarKontak object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DaftarKontak'
        application/xml:
          schema:
            $ref: '#/components/schemas/DaftarKontak'
        application/json:
          schema:
            $ref: '#/components/schemas/DaftarKontak'
    DataPersil:
      description: 'DataPersil object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DataPersil'
        application/xml:
          schema:
            $ref: '#/components/schemas/DataPersil'
        application/json:
          schema:
            $ref: '#/components/schemas/DataPersil'
    DataPersilJenis:
      description: 'DataPersilJenis object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DataPersilJenis'
        application/xml:
          schema:
            $ref: '#/components/schemas/DataPersilJenis'
        application/json:
          schema:
            $ref: '#/components/schemas/DataPersilJenis'
    DataPersilPeruntukan:
      description: 'DataPersilPeruntukan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DataPersilPeruntukan'
        application/xml:
          schema:
            $ref: '#/components/schemas/DataPersilPeruntukan'
        application/json:
          schema:
            $ref: '#/components/schemas/DataPersilPeruntukan'
    DetailLogPenduduk:
      description: 'DetailLogPenduduk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DetailLogPenduduk'
        application/xml:
          schema:
            $ref: '#/components/schemas/DetailLogPenduduk'
        application/json:
          schema:
            $ref: '#/components/schemas/DetailLogPenduduk'
    DisposisiSuratMasuk:
      description: 'DisposisiSuratMasuk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DisposisiSuratMasuk'
        application/xml:
          schema:
            $ref: '#/components/schemas/DisposisiSuratMasuk'
        application/json:
          schema:
            $ref: '#/components/schemas/DisposisiSuratMasuk'
    Dokumen:
      description: 'Dokumen object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Dokumen'
        application/xml:
          schema:
            $ref: '#/components/schemas/Dokumen'
        application/json:
          schema:
            $ref: '#/components/schemas/Dokumen'
    DokumenHidup:
      description: 'DokumenHidup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DokumenHidup'
        application/xml:
          schema:
            $ref: '#/components/schemas/DokumenHidup'
        application/json:
          schema:
            $ref: '#/components/schemas/DokumenHidup'
    GambarGallery:
      description: 'GambarGallery object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/GambarGallery'
        application/xml:
          schema:
            $ref: '#/components/schemas/GambarGallery'
        application/json:
          schema:
            $ref: '#/components/schemas/GambarGallery'
    Garis:
      description: 'Garis object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Garis'
        application/xml:
          schema:
            $ref: '#/components/schemas/Garis'
        application/json:
          schema:
            $ref: '#/components/schemas/Garis'
    GisSimbol:
      description: 'GisSimbol object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/GisSimbol'
        application/xml:
          schema:
            $ref: '#/components/schemas/GisSimbol'
        application/json:
          schema:
            $ref: '#/components/schemas/GisSimbol'
    Inbox:
      description: 'Inbox object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Inbox'
        application/xml:
          schema:
            $ref: '#/components/schemas/Inbox'
        application/json:
          schema:
            $ref: '#/components/schemas/Inbox'
    InventarisAsset:
      description: 'InventarisAsset object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisAsset'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisAsset'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisAsset'
    InventarisGedung:
      description: 'InventarisGedung object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisGedung'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisGedung'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisGedung'
    InventarisJalan:
      description: 'InventarisJalan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisJalan'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisJalan'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisJalan'
    InventarisKontruksi:
      description: 'InventarisKontruksi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisKontruksi'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisKontruksi'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisKontruksi'
    InventarisPeralatan:
      description: 'InventarisPeralatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisPeralatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisPeralatan'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisPeralatan'
    InventarisTanah:
      description: 'InventarisTanah object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/InventarisTanah'
        application/xml:
          schema:
            $ref: '#/components/schemas/InventarisTanah'
        application/json:
          schema:
            $ref: '#/components/schemas/InventarisTanah'
    Kategori:
      description: 'Kategori object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Kategori'
        application/xml:
          schema:
            $ref: '#/components/schemas/Kategori'
        application/json:
          schema:
            $ref: '#/components/schemas/Kategori'
    Kelompok:
      description: 'Kelompok object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Kelompok'
        application/xml:
          schema:
            $ref: '#/components/schemas/Kelompok'
        application/json:
          schema:
            $ref: '#/components/schemas/Kelompok'
    KelompokAnggota:
      description: 'KelompokAnggota object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KelompokAnggota'
        application/xml:
          schema:
            $ref: '#/components/schemas/KelompokAnggota'
        application/json:
          schema:
            $ref: '#/components/schemas/KelompokAnggota'
    KelompokMaster:
      description: 'KelompokMaster object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KelompokMaster'
        application/xml:
          schema:
            $ref: '#/components/schemas/KelompokMaster'
        application/json:
          schema:
            $ref: '#/components/schemas/KelompokMaster'
    KeluargaAktif:
      description: 'KeluargaAktif object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeluargaAktif'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeluargaAktif'
        application/json:
          schema:
            $ref: '#/components/schemas/KeluargaAktif'
    KeuanganMaster:
      description: 'KeuanganMaster object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganMaster'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganMaster'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganMaster'
    KeuanganRefBankDesa:
      description: 'KeuanganRefBankDesa object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefBankDesa'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefBankDesa'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefBankDesa'
    KeuanganRefBelOperasional:
      description: 'KeuanganRefBelOperasional object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefBelOperasional'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefBelOperasional'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefBelOperasional'
    KeuanganRefBidang:
      description: 'KeuanganRefBidang object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefBidang'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefBidang'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefBidang'
    KeuanganRefBunga:
      description: 'KeuanganRefBunga object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefBunga'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefBunga'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefBunga'
    KeuanganRefDesa:
      description: 'KeuanganRefDesa object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefDesa'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefDesa'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefDesa'
    KeuanganRefKecamatan:
      description: 'KeuanganRefKecamatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefKecamatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefKecamatan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefKecamatan'
    KeuanganRefKegiatan:
      description: 'KeuanganRefKegiatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefKegiatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefKegiatan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefKegiatan'
    KeuanganRefKorolari:
      description: 'KeuanganRefKorolari object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefKorolari'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefKorolari'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefKorolari'
    KeuanganRefNeracaClose:
      description: 'KeuanganRefNeracaClose object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefNeracaClose'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefNeracaClose'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefNeracaClose'
    KeuanganRefPerangkat:
      description: 'KeuanganRefPerangkat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefPerangkat'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefPerangkat'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefPerangkat'
    KeuanganRefPotongan:
      description: 'KeuanganRefPotongan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefPotongan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefPotongan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefPotongan'
    KeuanganRefRek1:
      description: 'KeuanganRefRek1 object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek1'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek1'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek1'
    KeuanganRefRek2:
      description: 'KeuanganRefRek2 object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek2'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek2'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek2'
    KeuanganRefRek3:
      description: 'KeuanganRefRek3 object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek3'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek3'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek3'
    KeuanganRefRek4:
      description: 'KeuanganRefRek4 object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek4'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek4'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefRek4'
    KeuanganRefSbu:
      description: 'KeuanganRefSbu object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefSbu'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefSbu'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefSbu'
    KeuanganRefSumber:
      description: 'KeuanganRefSumber object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganRefSumber'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganRefSumber'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganRefSumber'
    KeuanganTaAnggaran:
      description: 'KeuanganTaAnggaran object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaran'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaran'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaran'
    KeuanganTaAnggaranLog:
      description: 'KeuanganTaAnggaranLog object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranLog'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranLog'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranLog'
    KeuanganTaAnggaranRinci:
      description: 'KeuanganTaAnggaranRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaAnggaranRinci'
    KeuanganTaBidang:
      description: 'KeuanganTaBidang object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaBidang'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaBidang'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaBidang'
    KeuanganTaDesa:
      description: 'KeuanganTaDesa object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaDesa'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaDesa'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaDesa'
    KeuanganTaJurnalUmum:
      description: 'KeuanganTaJurnalUmum object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmum'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmum'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmum'
    KeuanganTaJurnalUmumRinci:
      description: 'KeuanganTaJurnalUmumRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaJurnalUmumRinci'
    KeuanganTaKegiatan:
      description: 'KeuanganTaKegiatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaKegiatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaKegiatan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaKegiatan'
    KeuanganTaMutasi:
      description: 'KeuanganTaMutasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaMutasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaMutasi'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaMutasi'
    KeuanganTaPajak:
      description: 'KeuanganTaPajak object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajak'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajak'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajak'
    KeuanganTaPajakRinci:
      description: 'KeuanganTaPajakRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajakRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajakRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaPajakRinci'
    KeuanganTaPemda:
      description: 'KeuanganTaPemda object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaPemda'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaPemda'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaPemda'
    KeuanganTaPencairan:
      description: 'KeuanganTaPencairan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaPencairan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaPencairan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaPencairan'
    KeuanganTaPerangkat:
      description: 'KeuanganTaPerangkat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaPerangkat'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaPerangkat'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaPerangkat'
    KeuanganTaRab:
      description: 'KeuanganTaRab object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRab'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRab'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRab'
    KeuanganTaRabRinci:
      description: 'KeuanganTaRabRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabRinci'
    KeuanganTaRabSub:
      description: 'KeuanganTaRabSub object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabSub'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabSub'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRabSub'
    KeuanganTaRpjmBidang:
      description: 'KeuanganTaRpjmBidang object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmBidang'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmBidang'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmBidang'
    KeuanganTaRpjmKegiatan:
      description: 'KeuanganTaRpjmKegiatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmKegiatan'
    KeuanganTaRpjmMisi:
      description: 'KeuanganTaRpjmMisi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmMisi'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmMisi'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmMisi'
    KeuanganTaRpjmPaguIndikatif:
      description: 'KeuanganTaRpjmPaguIndikatif object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguIndikatif'
    KeuanganTaRpjmPaguTahunan:
      description: 'KeuanganTaRpjmPaguTahunan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmPaguTahunan'
    KeuanganTaRpjmSasaran:
      description: 'KeuanganTaRpjmSasaran object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmSasaran'
    KeuanganTaRpjmTujuan:
      description: 'KeuanganTaRpjmTujuan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmTujuan'
    KeuanganTaRpjmVisi:
      description: 'KeuanganTaRpjmVisi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmVisi'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmVisi'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaRpjmVisi'
    KeuanganTaSaldoAwal:
      description: 'KeuanganTaSaldoAwal object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSaldoAwal'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSaldoAwal'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSaldoAwal'
    KeuanganTaSpj:
      description: 'KeuanganTaSpj object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpj'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpj'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpj'
    KeuanganTaSpjBukti:
      description: 'KeuanganTaSpjBukti object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjBukti'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjBukti'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjBukti'
    KeuanganTaSpjRinci:
      description: 'KeuanganTaSpjRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjRinci'
    KeuanganTaSpjSisa:
      description: 'KeuanganTaSpjSisa object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjSisa'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjSisa'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjSisa'
    KeuanganTaSpjpot:
      description: 'KeuanganTaSpjpot object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjpot'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjpot'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpjpot'
    KeuanganTaSpp:
      description: 'KeuanganTaSpp object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpp'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpp'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpp'
    KeuanganTaSppRinci:
      description: 'KeuanganTaSppRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppRinci'
    KeuanganTaSppbukti:
      description: 'KeuanganTaSppbukti object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppbukti'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppbukti'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSppbukti'
    KeuanganTaSpppot:
      description: 'KeuanganTaSpppot object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpppot'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpppot'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSpppot'
    KeuanganTaSts:
      description: 'KeuanganTaSts object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaSts'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaSts'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaSts'
    KeuanganTaStsRinci:
      description: 'KeuanganTaStsRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaStsRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaStsRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaStsRinci'
    KeuanganTaTbp:
      description: 'KeuanganTaTbp object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbp'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbp'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbp'
    KeuanganTaTbpRinci:
      description: 'KeuanganTaTbpRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbpRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbpRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaTbpRinci'
    KeuanganTaTriwulan:
      description: 'KeuanganTaTriwulan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulan'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulan'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulan'
    KeuanganTaTriwulanRinci:
      description: 'KeuanganTaTriwulanRinci object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
        application/xml:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
        application/json:
          schema:
            $ref: '#/components/schemas/KeuanganTaTriwulanRinci'
    KlasifikasiAnalisisKeluarga:
      description: 'KlasifikasiAnalisisKeluarga object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
        application/xml:
          schema:
            $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
        application/json:
          schema:
            $ref: '#/components/schemas/KlasifikasiAnalisisKeluarga'
    KlasifikasiSurat:
      description: 'KlasifikasiSurat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KlasifikasiSurat'
        application/xml:
          schema:
            $ref: '#/components/schemas/KlasifikasiSurat'
        application/json:
          schema:
            $ref: '#/components/schemas/KlasifikasiSurat'
    Komentar:
      description: 'Komentar object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Komentar'
        application/xml:
          schema:
            $ref: '#/components/schemas/Komentar'
        application/json:
          schema:
            $ref: '#/components/schemas/Komentar'
    Kontak:
      description: 'Kontak object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Kontak'
        application/xml:
          schema:
            $ref: '#/components/schemas/Kontak'
        application/json:
          schema:
            $ref: '#/components/schemas/Kontak'
    KontakGrup:
      description: 'KontakGrup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/KontakGrup'
        application/xml:
          schema:
            $ref: '#/components/schemas/KontakGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/KontakGrup'
    Line:
      description: 'Line object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Line'
        application/xml:
          schema:
            $ref: '#/components/schemas/Line'
        application/json:
          schema:
            $ref: '#/components/schemas/Line'
    LogBulanan:
      description: 'LogBulanan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogBulanan'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogBulanan'
        application/json:
          schema:
            $ref: '#/components/schemas/LogBulanan'
    LogEkspor:
      description: 'LogEkspor object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogEkspor'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogEkspor'
        application/json:
          schema:
            $ref: '#/components/schemas/LogEkspor'
    LogKeluarga:
      description: 'LogKeluarga object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogKeluarga'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogKeluarga'
        application/json:
          schema:
            $ref: '#/components/schemas/LogKeluarga'
    LogPenduduk:
      description: 'LogPenduduk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogPenduduk'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogPenduduk'
        application/json:
          schema:
            $ref: '#/components/schemas/LogPenduduk'
    LogPerubahanPenduduk:
      description: 'LogPerubahanPenduduk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogPerubahanPenduduk'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogPerubahanPenduduk'
        application/json:
          schema:
            $ref: '#/components/schemas/LogPerubahanPenduduk'
    LogSurat:
      description: 'LogSurat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/LogSurat'
        application/xml:
          schema:
            $ref: '#/components/schemas/LogSurat'
        application/json:
          schema:
            $ref: '#/components/schemas/LogSurat'
    Lokasi:
      description: 'Lokasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Lokasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/Lokasi'
        application/json:
          schema:
            $ref: '#/components/schemas/Lokasi'
    MediaSosial:
      description: 'MediaSosial object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MediaSosial'
        application/xml:
          schema:
            $ref: '#/components/schemas/MediaSosial'
        application/json:
          schema:
            $ref: '#/components/schemas/MediaSosial'
    Menu:
      description: 'Menu object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Menu'
        application/xml:
          schema:
            $ref: '#/components/schemas/Menu'
        application/json:
          schema:
            $ref: '#/components/schemas/Menu'
    Migrasi:
      description: 'Migrasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Migrasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/Migrasi'
        application/json:
          schema:
            $ref: '#/components/schemas/Migrasi'
    MutasiInventarisAsset:
      description: 'MutasiInventarisAsset object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MutasiInventarisAsset'
        application/xml:
          schema:
            $ref: '#/components/schemas/MutasiInventarisAsset'
        application/json:
          schema:
            $ref: '#/components/schemas/MutasiInventarisAsset'
    MutasiInventarisGedung:
      description: 'MutasiInventarisGedung object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MutasiInventarisGedung'
        application/xml:
          schema:
            $ref: '#/components/schemas/MutasiInventarisGedung'
        application/json:
          schema:
            $ref: '#/components/schemas/MutasiInventarisGedung'
    MutasiInventarisJalan:
      description: 'MutasiInventarisJalan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MutasiInventarisJalan'
        application/xml:
          schema:
            $ref: '#/components/schemas/MutasiInventarisJalan'
        application/json:
          schema:
            $ref: '#/components/schemas/MutasiInventarisJalan'
    MutasiInventarisPeralatan:
      description: 'MutasiInventarisPeralatan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MutasiInventarisPeralatan'
        application/xml:
          schema:
            $ref: '#/components/schemas/MutasiInventarisPeralatan'
        application/json:
          schema:
            $ref: '#/components/schemas/MutasiInventarisPeralatan'
    MutasiInventarisTanah:
      description: 'MutasiInventarisTanah object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MutasiInventarisTanah'
        application/xml:
          schema:
            $ref: '#/components/schemas/MutasiInventarisTanah'
        application/json:
          schema:
            $ref: '#/components/schemas/MutasiInventarisTanah'
    Outbox:
      description: 'Outbox object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Outbox'
        application/xml:
          schema:
            $ref: '#/components/schemas/Outbox'
        application/json:
          schema:
            $ref: '#/components/schemas/Outbox'
    PendudukHidup:
      description: 'PendudukHidup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PendudukHidup'
        application/xml:
          schema:
            $ref: '#/components/schemas/PendudukHidup'
        application/json:
          schema:
            $ref: '#/components/schemas/PendudukHidup'
    PermohonanSurat:
      description: 'PermohonanSurat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PermohonanSurat'
        application/xml:
          schema:
            $ref: '#/components/schemas/PermohonanSurat'
        application/json:
          schema:
            $ref: '#/components/schemas/PermohonanSurat'
    Pertanyaan:
      description: 'Pertanyaan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Pertanyaan'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pertanyaan'
        application/json:
          schema:
            $ref: '#/components/schemas/Pertanyaan'
    Point:
      description: 'Point object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Point'
        application/xml:
          schema:
            $ref: '#/components/schemas/Point'
        application/json:
          schema:
            $ref: '#/components/schemas/Point'
    Polygon:
      description: 'Polygon object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Polygon'
        application/xml:
          schema:
            $ref: '#/components/schemas/Polygon'
        application/json:
          schema:
            $ref: '#/components/schemas/Polygon'
    Program:
      description: 'Program object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Program'
        application/xml:
          schema:
            $ref: '#/components/schemas/Program'
        application/json:
          schema:
            $ref: '#/components/schemas/Program'
    ProgramPeserta:
      description: 'ProgramPeserta object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ProgramPeserta'
        application/xml:
          schema:
            $ref: '#/components/schemas/ProgramPeserta'
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramPeserta'
    Provinsi:
      description: 'Provinsi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Provinsi'
        application/xml:
          schema:
            $ref: '#/components/schemas/Provinsi'
        application/json:
          schema:
            $ref: '#/components/schemas/Provinsi'
    RefDokumen:
      description: 'RefDokumen object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RefDokumen'
        application/xml:
          schema:
            $ref: '#/components/schemas/RefDokumen'
        application/json:
          schema:
            $ref: '#/components/schemas/RefDokumen'
    RefPindah:
      description: 'RefPindah object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RefPindah'
        application/xml:
          schema:
            $ref: '#/components/schemas/RefPindah'
        application/json:
          schema:
            $ref: '#/components/schemas/RefPindah'
    RefStatusCovid:
      description: 'RefStatusCovid object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RefStatusCovid'
        application/xml:
          schema:
            $ref: '#/components/schemas/RefStatusCovid'
        application/json:
          schema:
            $ref: '#/components/schemas/RefStatusCovid'
    RefSyaratSurat:
      description: 'RefSyaratSurat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RefSyaratSurat'
        application/xml:
          schema:
            $ref: '#/components/schemas/RefSyaratSurat'
        application/json:
          schema:
            $ref: '#/components/schemas/RefSyaratSurat'
    Sentitems:
      description: 'Sentitems object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Sentitems'
        application/xml:
          schema:
            $ref: '#/components/schemas/Sentitems'
        application/json:
          schema:
            $ref: '#/components/schemas/Sentitems'
    SettingAplikasi:
      description: 'SettingAplikasi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SettingAplikasi'
        application/xml:
          schema:
            $ref: '#/components/schemas/SettingAplikasi'
        application/json:
          schema:
            $ref: '#/components/schemas/SettingAplikasi'
    SettingAplikasiOptions:
      description: 'SettingAplikasiOptions object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SettingAplikasiOptions'
        application/xml:
          schema:
            $ref: '#/components/schemas/SettingAplikasiOptions'
        application/json:
          schema:
            $ref: '#/components/schemas/SettingAplikasiOptions'
    SettingModul:
      description: 'SettingModul object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SettingModul'
        application/xml:
          schema:
            $ref: '#/components/schemas/SettingModul'
        application/json:
          schema:
            $ref: '#/components/schemas/SettingModul'
    SettingSms:
      description: 'SettingSms object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SettingSms'
        application/xml:
          schema:
            $ref: '#/components/schemas/SettingSms'
        application/json:
          schema:
            $ref: '#/components/schemas/SettingSms'
    Suplemen:
      description: 'Suplemen object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Suplemen'
        application/xml:
          schema:
            $ref: '#/components/schemas/Suplemen'
        application/json:
          schema:
            $ref: '#/components/schemas/Suplemen'
    SuplemenTerdata:
      description: 'SuplemenTerdata object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SuplemenTerdata'
        application/xml:
          schema:
            $ref: '#/components/schemas/SuplemenTerdata'
        application/json:
          schema:
            $ref: '#/components/schemas/SuplemenTerdata'
    SuratKeluar:
      description: 'SuratKeluar object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SuratKeluar'
        application/xml:
          schema:
            $ref: '#/components/schemas/SuratKeluar'
        application/json:
          schema:
            $ref: '#/components/schemas/SuratKeluar'
    SuratMasuk:
      description: 'SuratMasuk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SuratMasuk'
        application/xml:
          schema:
            $ref: '#/components/schemas/SuratMasuk'
        application/json:
          schema:
            $ref: '#/components/schemas/SuratMasuk'
    SyaratSurat:
      description: 'SyaratSurat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SyaratSurat'
        application/xml:
          schema:
            $ref: '#/components/schemas/SyaratSurat'
        application/json:
          schema:
            $ref: '#/components/schemas/SyaratSurat'
    SysTraffic:
      description: 'SysTraffic object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SysTraffic'
        application/xml:
          schema:
            $ref: '#/components/schemas/SysTraffic'
        application/json:
          schema:
            $ref: '#/components/schemas/SysTraffic'
    TeksBerjalan:
      description: 'TeksBerjalan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TeksBerjalan'
        application/xml:
          schema:
            $ref: '#/components/schemas/TeksBerjalan'
        application/json:
          schema:
            $ref: '#/components/schemas/TeksBerjalan'
    TwebAset:
      description: 'TwebAset object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebAset'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebAset'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebAset'
    TwebCacat:
      description: 'TwebCacat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebCacat'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebCacat'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebCacat'
    TwebCaraKb:
      description: 'TwebCaraKb object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebCaraKb'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebCaraKb'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebCaraKb'
    TwebDesaPamong:
      description: 'TwebDesaPamong object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebDesaPamong'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebDesaPamong'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebDesaPamong'
    TwebGolonganDarah:
      description: 'TwebGolonganDarah object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebGolonganDarah'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebGolonganDarah'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebGolonganDarah'
    TwebKeluarga:
      description: 'TwebKeluarga object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebKeluarga'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebKeluarga'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebKeluarga'
    TwebKeluargaSejahtera:
      description: 'TwebKeluargaSejahtera object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebKeluargaSejahtera'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebKeluargaSejahtera'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebKeluargaSejahtera'
    TwebPenduduk:
      description: 'TwebPenduduk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPenduduk'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPenduduk'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPenduduk'
    TwebPendudukAgama:
      description: 'TwebPendudukAgama object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukAgama'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukAgama'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukAgama'
    TwebPendudukAsuransi:
      description: 'TwebPendudukAsuransi object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukAsuransi'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukAsuransi'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukAsuransi'
    TwebPendudukHubungan:
      description: 'TwebPendudukHubungan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukHubungan'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukHubungan'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukHubungan'
    TwebPendudukKawin:
      description: 'TwebPendudukKawin object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukKawin'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukKawin'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukKawin'
    TwebPendudukMandiri:
      description: 'TwebPendudukMandiri object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukMandiri'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukMandiri'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukMandiri'
    TwebPendudukMap:
      description: 'TwebPendudukMap object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukMap'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukMap'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukMap'
    TwebPendudukPekerjaan:
      description: 'TwebPendudukPekerjaan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukPekerjaan'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukPekerjaan'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukPekerjaan'
    TwebPendudukPendidikan:
      description: 'TwebPendudukPendidikan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikan'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikan'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikan'
    TwebPendudukPendidikanKk:
      description: 'TwebPendudukPendidikanKk object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikanKk'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikanKk'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukPendidikanKk'
    TwebPendudukSex:
      description: 'TwebPendudukSex object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukSex'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukSex'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukSex'
    TwebPendudukStatus:
      description: 'TwebPendudukStatus object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukStatus'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukStatus'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukStatus'
    TwebPendudukUmur:
      description: 'TwebPendudukUmur object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukUmur'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukUmur'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukUmur'
    TwebPendudukWarganegara:
      description: 'TwebPendudukWarganegara object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebPendudukWarganegara'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebPendudukWarganegara'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebPendudukWarganegara'
    TwebRtm:
      description: 'TwebRtm object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebRtm'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebRtm'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebRtm'
    TwebRtmHubungan:
      description: 'TwebRtmHubungan object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebRtmHubungan'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebRtmHubungan'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebRtmHubungan'
    TwebSakitMenahun:
      description: 'TwebSakitMenahun object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebSakitMenahun'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebSakitMenahun'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebSakitMenahun'
    TwebStatusDasar:
      description: 'TwebStatusDasar object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebStatusDasar'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebStatusDasar'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebStatusDasar'
    TwebStatusKtp:
      description: 'TwebStatusKtp object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebStatusKtp'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebStatusKtp'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebStatusKtp'
    TwebSuratAtribut:
      description: 'TwebSuratAtribut object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebSuratAtribut'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebSuratAtribut'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebSuratAtribut'
    TwebSuratFormat:
      description: 'TwebSuratFormat object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebSuratFormat'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebSuratFormat'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebSuratFormat'
    TwebWilClusterdesa:
      description: 'TwebWilClusterdesa object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TwebWilClusterdesa'
        application/xml:
          schema:
            $ref: '#/components/schemas/TwebWilClusterdesa'
        application/json:
          schema:
            $ref: '#/components/schemas/TwebWilClusterdesa'
    User:
      description: 'User object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    UserGrup:
      description: 'UserGrup object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/UserGrup'
        application/xml:
          schema:
            $ref: '#/components/schemas/UserGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/UserGrup'
    Widget:
      description: 'Widget object that needs to be added'
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Widget'
        application/xml:
          schema:
            $ref: '#/components/schemas/Widget'
        application/json:
          schema:
            $ref: '#/components/schemas/Widget'
  securitySchemes:
    bearer_auth:
      type: http
      name: bearer_auth
      bearerFormat: JWT
      scheme: bearer
tags:
  -
    name: Agenda
    description: 'Everything about your Agenda'
  -
    name: AnalisisIndikator
    description: 'Everything about your AnalisisIndikator'
  -
    name: AnalisisKategoriIndikator
    description: 'Everything about your AnalisisKategoriIndikator'
  -
    name: AnalisisKlasifikasi
    description: 'Everything about your AnalisisKlasifikasi'
  -
    name: AnalisisMaster
    description: 'Everything about your AnalisisMaster'
  -
    name: AnalisisParameter
    description: 'Everything about your AnalisisParameter'
  -
    name: AnalisisPartisipasi
    description: 'Everything about your AnalisisPartisipasi'
  -
    name: AnalisisPeriode
    description: 'Everything about your AnalisisPeriode'
  -
    name: AnalisisRefState
    description: 'Everything about your AnalisisRefState'
  -
    name: AnalisisRefSubjek
    description: 'Everything about your AnalisisRefSubjek'
  -
    name: AnalisisRespon
    description: 'Everything about your AnalisisRespon'
  -
    name: AnalisisResponBukti
    description: 'Everything about your AnalisisResponBukti'
  -
    name: AnalisisResponHasil
    description: 'Everything about your AnalisisResponHasil'
  -
    name: AnalisisTipeIndikator
    description: 'Everything about your AnalisisTipeIndikator'
  -
    name: AnggotaGrupKontak
    description: 'Everything about your AnggotaGrupKontak'
  -
    name: Area
    description: 'Everything about your Area'
  -
    name: Artikel
    description: 'Everything about your Artikel'
  -
    name: CaptchaCodes
    description: 'Everything about your CaptchaCodes'
  -
    name: Config
    description: 'Everything about your Config'
  -
    name: Covid19Pantau
    description: 'Everything about your Covid19Pantau'
  -
    name: Covid19Pemudik
    description: 'Everything about your Covid19Pemudik'
  -
    name: DaftarAnggotaGrup
    description: 'Everything about your DaftarAnggotaGrup'
  -
    name: DaftarGrup
    description: 'Everything about your DaftarGrup'
  -
    name: DaftarKontak
    description: 'Everything about your DaftarKontak'
  -
    name: DataPersil
    description: 'Everything about your DataPersil'
  -
    name: DataPersilJenis
    description: 'Everything about your DataPersilJenis'
  -
    name: DataPersilPeruntukan
    description: 'Everything about your DataPersilPeruntukan'
  -
    name: DetailLogPenduduk
    description: 'Everything about your DetailLogPenduduk'
  -
    name: DisposisiSuratMasuk
    description: 'Everything about your DisposisiSuratMasuk'
  -
    name: Dokumen
    description: 'Everything about your Dokumen'
  -
    name: DokumenHidup
    description: 'Everything about your DokumenHidup'
  -
    name: GambarGallery
    description: 'Everything about your GambarGallery'
  -
    name: Garis
    description: 'Everything about your Garis'
  -
    name: GisSimbol
    description: 'Everything about your GisSimbol'
  -
    name: Inbox
    description: 'Everything about your Inbox'
  -
    name: InventarisAsset
    description: 'Everything about your InventarisAsset'
  -
    name: InventarisGedung
    description: 'Everything about your InventarisGedung'
  -
    name: InventarisJalan
    description: 'Everything about your InventarisJalan'
  -
    name: InventarisKontruksi
    description: 'Everything about your InventarisKontruksi'
  -
    name: InventarisPeralatan
    description: 'Everything about your InventarisPeralatan'
  -
    name: InventarisTanah
    description: 'Everything about your InventarisTanah'
  -
    name: Kategori
    description: 'Everything about your Kategori'
  -
    name: Kelompok
    description: 'Everything about your Kelompok'
  -
    name: KelompokAnggota
    description: 'Everything about your KelompokAnggota'
  -
    name: KelompokMaster
    description: 'Everything about your KelompokMaster'
  -
    name: KeluargaAktif
    description: 'Everything about your KeluargaAktif'
  -
    name: KeuanganMaster
    description: 'Everything about your KeuanganMaster'
  -
    name: KeuanganRefBankDesa
    description: 'Everything about your KeuanganRefBankDesa'
  -
    name: KeuanganRefBelOperasional
    description: 'Everything about your KeuanganRefBelOperasional'
  -
    name: KeuanganRefBidang
    description: 'Everything about your KeuanganRefBidang'
  -
    name: KeuanganRefBunga
    description: 'Everything about your KeuanganRefBunga'
  -
    name: KeuanganRefDesa
    description: 'Everything about your KeuanganRefDesa'
  -
    name: KeuanganRefKecamatan
    description: 'Everything about your KeuanganRefKecamatan'
  -
    name: KeuanganRefKegiatan
    description: 'Everything about your KeuanganRefKegiatan'
  -
    name: KeuanganRefKorolari
    description: 'Everything about your KeuanganRefKorolari'
  -
    name: KeuanganRefNeracaClose
    description: 'Everything about your KeuanganRefNeracaClose'
  -
    name: KeuanganRefPerangkat
    description: 'Everything about your KeuanganRefPerangkat'
  -
    name: KeuanganRefPotongan
    description: 'Everything about your KeuanganRefPotongan'
  -
    name: KeuanganRefRek1
    description: 'Everything about your KeuanganRefRek1'
  -
    name: KeuanganRefRek2
    description: 'Everything about your KeuanganRefRek2'
  -
    name: KeuanganRefRek3
    description: 'Everything about your KeuanganRefRek3'
  -
    name: KeuanganRefRek4
    description: 'Everything about your KeuanganRefRek4'
  -
    name: KeuanganRefSbu
    description: 'Everything about your KeuanganRefSbu'
  -
    name: KeuanganRefSumber
    description: 'Everything about your KeuanganRefSumber'
  -
    name: KeuanganTaAnggaran
    description: 'Everything about your KeuanganTaAnggaran'
  -
    name: KeuanganTaAnggaranLog
    description: 'Everything about your KeuanganTaAnggaranLog'
  -
    name: KeuanganTaAnggaranRinci
    description: 'Everything about your KeuanganTaAnggaranRinci'
  -
    name: KeuanganTaBidang
    description: 'Everything about your KeuanganTaBidang'
  -
    name: KeuanganTaDesa
    description: 'Everything about your KeuanganTaDesa'
  -
    name: KeuanganTaJurnalUmum
    description: 'Everything about your KeuanganTaJurnalUmum'
  -
    name: KeuanganTaJurnalUmumRinci
    description: 'Everything about your KeuanganTaJurnalUmumRinci'
  -
    name: KeuanganTaKegiatan
    description: 'Everything about your KeuanganTaKegiatan'
  -
    name: KeuanganTaMutasi
    description: 'Everything about your KeuanganTaMutasi'
  -
    name: KeuanganTaPajak
    description: 'Everything about your KeuanganTaPajak'
  -
    name: KeuanganTaPajakRinci
    description: 'Everything about your KeuanganTaPajakRinci'
  -
    name: KeuanganTaPemda
    description: 'Everything about your KeuanganTaPemda'
  -
    name: KeuanganTaPencairan
    description: 'Everything about your KeuanganTaPencairan'
  -
    name: KeuanganTaPerangkat
    description: 'Everything about your KeuanganTaPerangkat'
  -
    name: KeuanganTaRab
    description: 'Everything about your KeuanganTaRab'
  -
    name: KeuanganTaRabRinci
    description: 'Everything about your KeuanganTaRabRinci'
  -
    name: KeuanganTaRabSub
    description: 'Everything about your KeuanganTaRabSub'
  -
    name: KeuanganTaRpjmBidang
    description: 'Everything about your KeuanganTaRpjmBidang'
  -
    name: KeuanganTaRpjmKegiatan
    description: 'Everything about your KeuanganTaRpjmKegiatan'
  -
    name: KeuanganTaRpjmMisi
    description: 'Everything about your KeuanganTaRpjmMisi'
  -
    name: KeuanganTaRpjmPaguIndikatif
    description: 'Everything about your KeuanganTaRpjmPaguIndikatif'
  -
    name: KeuanganTaRpjmPaguTahunan
    description: 'Everything about your KeuanganTaRpjmPaguTahunan'
  -
    name: KeuanganTaRpjmSasaran
    description: 'Everything about your KeuanganTaRpjmSasaran'
  -
    name: KeuanganTaRpjmTujuan
    description: 'Everything about your KeuanganTaRpjmTujuan'
  -
    name: KeuanganTaRpjmVisi
    description: 'Everything about your KeuanganTaRpjmVisi'
  -
    name: KeuanganTaSaldoAwal
    description: 'Everything about your KeuanganTaSaldoAwal'
  -
    name: KeuanganTaSpj
    description: 'Everything about your KeuanganTaSpj'
  -
    name: KeuanganTaSpjBukti
    description: 'Everything about your KeuanganTaSpjBukti'
  -
    name: KeuanganTaSpjRinci
    description: 'Everything about your KeuanganTaSpjRinci'
  -
    name: KeuanganTaSpjSisa
    description: 'Everything about your KeuanganTaSpjSisa'
  -
    name: KeuanganTaSpjpot
    description: 'Everything about your KeuanganTaSpjpot'
  -
    name: KeuanganTaSpp
    description: 'Everything about your KeuanganTaSpp'
  -
    name: KeuanganTaSppRinci
    description: 'Everything about your KeuanganTaSppRinci'
  -
    name: KeuanganTaSppbukti
    description: 'Everything about your KeuanganTaSppbukti'
  -
    name: KeuanganTaSpppot
    description: 'Everything about your KeuanganTaSpppot'
  -
    name: KeuanganTaSts
    description: 'Everything about your KeuanganTaSts'
  -
    name: KeuanganTaStsRinci
    description: 'Everything about your KeuanganTaStsRinci'
  -
    name: KeuanganTaTbp
    description: 'Everything about your KeuanganTaTbp'
  -
    name: KeuanganTaTbpRinci
    description: 'Everything about your KeuanganTaTbpRinci'
  -
    name: KeuanganTaTriwulan
    description: 'Everything about your KeuanganTaTriwulan'
  -
    name: KeuanganTaTriwulanRinci
    description: 'Everything about your KeuanganTaTriwulanRinci'
  -
    name: KlasifikasiAnalisisKeluarga
    description: 'Everything about your KlasifikasiAnalisisKeluarga'
  -
    name: KlasifikasiSurat
    description: 'Everything about your KlasifikasiSurat'
  -
    name: Komentar
    description: 'Everything about your Komentar'
  -
    name: Kontak
    description: 'Everything about your Kontak'
  -
    name: KontakGrup
    description: 'Everything about your KontakGrup'
  -
    name: Line
    description: 'Everything about your Line'
  -
    name: LogBulanan
    description: 'Everything about your LogBulanan'
  -
    name: LogEkspor
    description: 'Everything about your LogEkspor'
  -
    name: LogKeluarga
    description: 'Everything about your LogKeluarga'
  -
    name: LogPenduduk
    description: 'Everything about your LogPenduduk'
  -
    name: LogPerubahanPenduduk
    description: 'Everything about your LogPerubahanPenduduk'
  -
    name: LogSurat
    description: 'Everything about your LogSurat'
  -
    name: Lokasi
    description: 'Everything about your Lokasi'
  -
    name: MediaSosial
    description: 'Everything about your MediaSosial'
  -
    name: Menu
    description: 'Everything about your Menu'
  -
    name: Migrasi
    description: 'Everything about your Migrasi'
  -
    name: MutasiInventarisAsset
    description: 'Everything about your MutasiInventarisAsset'
  -
    name: MutasiInventarisGedung
    description: 'Everything about your MutasiInventarisGedung'
  -
    name: MutasiInventarisJalan
    description: 'Everything about your MutasiInventarisJalan'
  -
    name: MutasiInventarisPeralatan
    description: 'Everything about your MutasiInventarisPeralatan'
  -
    name: MutasiInventarisTanah
    description: 'Everything about your MutasiInventarisTanah'
  -
    name: Outbox
    description: 'Everything about your Outbox'
  -
    name: PendudukHidup
    description: 'Everything about your PendudukHidup'
  -
    name: PermohonanSurat
    description: 'Everything about your PermohonanSurat'
  -
    name: Pertanyaan
    description: 'Everything about your Pertanyaan'
  -
    name: Point
    description: 'Everything about your Point'
  -
    name: Polygon
    description: 'Everything about your Polygon'
  -
    name: Program
    description: 'Everything about your Program'
  -
    name: ProgramPeserta
    description: 'Everything about your ProgramPeserta'
  -
    name: Provinsi
    description: 'Everything about your Provinsi'
  -
    name: RefDokumen
    description: 'Everything about your RefDokumen'
  -
    name: RefPindah
    description: 'Everything about your RefPindah'
  -
    name: RefStatusCovid
    description: 'Everything about your RefStatusCovid'
  -
    name: RefSyaratSurat
    description: 'Everything about your RefSyaratSurat'
  -
    name: Sentitems
    description: 'Everything about your Sentitems'
  -
    name: SettingAplikasi
    description: 'Everything about your SettingAplikasi'
  -
    name: SettingAplikasiOptions
    description: 'Everything about your SettingAplikasiOptions'
  -
    name: SettingModul
    description: 'Everything about your SettingModul'
  -
    name: SettingSms
    description: 'Everything about your SettingSms'
  -
    name: Suplemen
    description: 'Everything about your Suplemen'
  -
    name: SuplemenTerdata
    description: 'Everything about your SuplemenTerdata'
  -
    name: SuratKeluar
    description: 'Everything about your SuratKeluar'
  -
    name: SuratMasuk
    description: 'Everything about your SuratMasuk'
  -
    name: SyaratSurat
    description: 'Everything about your SyaratSurat'
  -
    name: SysTraffic
    description: 'Everything about your SysTraffic'
  -
    name: TeksBerjalan
    description: 'Everything about your TeksBerjalan'
  -
    name: TwebAset
    description: 'Everything about your TwebAset'
  -
    name: TwebCacat
    description: 'Everything about your TwebCacat'
  -
    name: TwebCaraKb
    description: 'Everything about your TwebCaraKb'
  -
    name: TwebDesaPamong
    description: 'Everything about your TwebDesaPamong'
  -
    name: TwebGolonganDarah
    description: 'Everything about your TwebGolonganDarah'
  -
    name: TwebKeluarga
    description: 'Everything about your TwebKeluarga'
  -
    name: TwebKeluargaSejahtera
    description: 'Everything about your TwebKeluargaSejahtera'
  -
    name: TwebPenduduk
    description: 'Everything about your TwebPenduduk'
  -
    name: TwebPendudukAgama
    description: 'Everything about your TwebPendudukAgama'
  -
    name: TwebPendudukAsuransi
    description: 'Everything about your TwebPendudukAsuransi'
  -
    name: TwebPendudukHubungan
    description: 'Everything about your TwebPendudukHubungan'
  -
    name: TwebPendudukKawin
    description: 'Everything about your TwebPendudukKawin'
  -
    name: TwebPendudukMandiri
    description: 'Everything about your TwebPendudukMandiri'
  -
    name: TwebPendudukMap
    description: 'Everything about your TwebPendudukMap'
  -
    name: TwebPendudukPekerjaan
    description: 'Everything about your TwebPendudukPekerjaan'
  -
    name: TwebPendudukPendidikan
    description: 'Everything about your TwebPendudukPendidikan'
  -
    name: TwebPendudukPendidikanKk
    description: 'Everything about your TwebPendudukPendidikanKk'
  -
    name: TwebPendudukSex
    description: 'Everything about your TwebPendudukSex'
  -
    name: TwebPendudukStatus
    description: 'Everything about your TwebPendudukStatus'
  -
    name: TwebPendudukUmur
    description: 'Everything about your TwebPendudukUmur'
  -
    name: TwebPendudukWarganegara
    description: 'Everything about your TwebPendudukWarganegara'
  -
    name: TwebRtm
    description: 'Everything about your TwebRtm'
  -
    name: TwebRtmHubungan
    description: 'Everything about your TwebRtmHubungan'
  -
    name: TwebSakitMenahun
    description: 'Everything about your TwebSakitMenahun'
  -
    name: TwebStatusDasar
    description: 'Everything about your TwebStatusDasar'
  -
    name: TwebStatusKtp
    description: 'Everything about your TwebStatusKtp'
  -
    name: TwebSuratAtribut
    description: 'Everything about your TwebSuratAtribut'
  -
    name: TwebSuratFormat
    description: 'Everything about your TwebSuratFormat'
  -
    name: TwebWilClusterdesa
    description: 'Everything about your TwebWilClusterdesa'
  -
    name: User
    description: 'Everything about your User'
  -
    name: UserGrup
    description: 'Everything about your UserGrup'
  -
    name: Widget
    description: 'Everything about your Widget'
